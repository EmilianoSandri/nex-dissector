-- This file is autogenerated
-- Pls dont
F.Sint8 = ProtoField.int8("Sint8", "Sint8 (uint8)")
F.Sint16 = ProtoField.int16("Sint16", "Sint16 (uint16)")
F.Sint32 = ProtoField.int32("Sint32", "Sint32 (uint32)")
F.Sint64 = ProtoField.int64("Sint64", "Sint64 (uint64)")
F.Int32 = ProtoField.int32("Int32", "Int32 (uint32)")
F.byte = ProtoField.uint8("byte", "byte (uint8)")
F.Uint8 = ProtoField.uint8("Uint8", "Uint8 (uint8)")
F.Uint16 = ProtoField.uint16("Uint16", "Uint16 (uint16)")
F.Uint32 = ProtoField.uint32("Uint32", "Uint32 (uint32)")
F.Uint64 = ProtoField.uint64("Uint64", "Uint64 (uint64)")
F.PID = ProtoField.uint32("PID", "PID (uint32)")
F.Result = ProtoField.uint32("Result", "Result (uint32)")
F.DateTime = ProtoField.uint64("DateTime", "DateTime (uint64)")
F.Buffer_len = ProtoField.uint32("Buffer_len", "Buffer length (Buffer)")
F.Buffer_data = ProtoField.bytes("Buffer_data", "Buffer data (Buffer)")
F.qBuffer_len = ProtoField.uint16("qBuffer_len", "qBuffer length (Buffer)")
F.qBuffer_data = ProtoField.bytes("qBuffer_data", "qBuffer data (Buffer)")
F.String_len = ProtoField.uint16("String_len", "String length (String)")
F.String_data = ProtoField.string("String_data", "String data (String)")
F.StationURL_len = ProtoField.uint16("StationURL_len", "StationURL length (String)")
F.StationURL_data = ProtoField.string("StationURL_data", "StationURL data (String)")
F.Bool = ProtoField.bool("Bool", "Bool (bool)")
F.Float = ProtoField.float("Float", "Float (float)")
F.Double = ProtoField.double("Double", "Double (double)")
F.Data = ProtoField.bytes("Data", "Data (Data)")
F.Data_type_name_len = ProtoField.uint16("Data_type_name_len", "type_name length (String)")
F.Data_type_name_data = ProtoField.string("Data_type_name_data", "type_name data (String)")
F.Data_len_plus_four = ProtoField.uint32("Data_len_plus_four", "len_plus_four (uint32)")
F.Data_data_len = ProtoField.uint32("Data_data_len", "data length (Buffer)")
F.Data_data_data = ProtoField.bytes("Data_data_data", "data data (Buffer)")
F.Structure = ProtoField.bytes("Structure", "Structure (Structure)")
F.DataStoreRatingInfo = ProtoField.bytes("DataStoreRatingInfo", "DataStoreRatingInfo (DataStoreRatingInfo)")
F.DataStoreRatingInfo_totalValue = ProtoField.int64("DataStoreRatingInfo_totalValue", "totalValue (uint64)")
F.DataStoreRatingInfo_count = ProtoField.uint32("DataStoreRatingInfo_count", "count (uint32)")
F.DataStoreRatingInfo_initialValue = ProtoField.int64("DataStoreRatingInfo_initialValue", "initialValue (uint64)")
F.MiiV2 = ProtoField.bytes("MiiV2", "MiiV2 (MiiV2)")
F.MiiV2_Name_len = ProtoField.uint16("MiiV2_Name_len", "Name length (String)")
F.MiiV2_Name_data = ProtoField.string("MiiV2_Name_data", "Name data (String)")
F.MiiV2_Unknown = ProtoField.uint8("MiiV2_Unknown", "Unknown (uint8)")
F.MiiV2_Unknown2 = ProtoField.uint8("MiiV2_Unknown2", "Unknown2 (uint8)")
F.MiiV2_Mii_data_FFLStoreData_len = ProtoField.uint32("MiiV2_Mii_data_FFLStoreData_len", "Mii_data_FFLStoreData length (Buffer)")
F.MiiV2_Mii_data_FFLStoreData_data = ProtoField.bytes("MiiV2_Mii_data_FFLStoreData_data", "Mii_data_FFLStoreData data (Buffer)")
F.MiiV2_Unknown3 = ProtoField.uint64("MiiV2_Unknown3", "Unknown3 (uint64)")
F.Gathering = ProtoField.bytes("Gathering", "Gathering (Gathering)")
F.Gathering_m_idMyself = ProtoField.uint32("Gathering_m_idMyself", "m_idMyself (uint32)")
F.Gathering_m_pidOwner = ProtoField.uint32("Gathering_m_pidOwner", "m_pidOwner (uint32)")
F.Gathering_m_pidHost = ProtoField.uint32("Gathering_m_pidHost", "m_pidHost (uint32)")
F.Gathering_m_uiMinParticipants = ProtoField.uint16("Gathering_m_uiMinParticipants", "m_uiMinParticipants (uint16)")
F.Gathering_m_uiMaxParticipants = ProtoField.uint16("Gathering_m_uiMaxParticipants", "m_uiMaxParticipants (uint16)")
F.Gathering_m_uiParticipationPolicy = ProtoField.uint32("Gathering_m_uiParticipationPolicy", "m_uiParticipationPolicy (uint32)")
F.Gathering_m_uiPolicyArgument = ProtoField.uint32("Gathering_m_uiPolicyArgument", "m_uiPolicyArgument (uint32)")
F.Gathering_m_uiFlags = ProtoField.uint32("Gathering_m_uiFlags", "m_uiFlags (uint32)")
F.Gathering_m_uiState = ProtoField.uint32("Gathering_m_uiState", "m_uiState (uint32)")
F.Gathering_m_strDescription_len = ProtoField.uint16("Gathering_m_strDescription_len", "m_strDescription length (String)")
F.Gathering_m_strDescription_data = ProtoField.string("Gathering_m_strDescription_data", "m_strDescription data (String)")
F.MatchmakeParam = ProtoField.bytes("MatchmakeParam", "MatchmakeParam (MatchmakeParam)")
F.ResultRange = ProtoField.bytes("ResultRange", "ResultRange (ResultRange)")
F.ResultRange_m_uiOffset = ProtoField.uint32("ResultRange_m_uiOffset", "m_uiOffset (uint32)")
F.ResultRange_m_uiSize = ProtoField.uint32("ResultRange_m_uiSize", "m_uiSize (uint32)")
F.DataStoreRatingInitParam = ProtoField.bytes("DataStoreRatingInitParam", "DataStoreRatingInitParam (DataStoreRatingInitParam)")
F.DataStoreRatingInitParam_flag = ProtoField.uint8("DataStoreRatingInitParam_flag", "flag (uint8)")
F.DataStoreRatingInitParam_internalFlag = ProtoField.uint8("DataStoreRatingInitParam_internalFlag", "internalFlag (uint8)")
F.DataStoreRatingInitParam_lockType = ProtoField.uint8("DataStoreRatingInitParam_lockType", "lockType (uint8)")
F.DataStoreRatingInitParam_initialValue = ProtoField.int64("DataStoreRatingInitParam_initialValue", "initialValue (uint64)")
F.DataStoreRatingInitParam_rangeMin = ProtoField.int32("DataStoreRatingInitParam_rangeMin", "rangeMin (uint32)")
F.DataStoreRatingInitParam_rangeMax = ProtoField.int32("DataStoreRatingInitParam_rangeMax", "rangeMax (uint32)")
F.DataStoreRatingInitParam_periodHour = ProtoField.int8("DataStoreRatingInitParam_periodHour", "periodHour (uint8)")
F.DataStoreRatingInitParam_periodDuration = ProtoField.int16("DataStoreRatingInitParam_periodDuration", "periodDuration (uint16)")
F.DataStorePermission = ProtoField.bytes("DataStorePermission", "DataStorePermission (DataStorePermission)")
F.DataStorePermission_permission = ProtoField.uint8("DataStorePermission_permission", "permission (uint8)")
F.DataStorePermission_recipientIds_len = ProtoField.uint32("DataStorePermission_recipientIds_len", "recipientIds length (uint32)")
F.DataStorePermission_recipientIds_item = ProtoField.uint64("DataStorePermission_recipientIds_item", "recipientIds (uint64)")
F.DataStoreRatingInfoWithSlot = ProtoField.bytes("DataStoreRatingInfoWithSlot", "DataStoreRatingInfoWithSlot (DataStoreRatingInfoWithSlot)")
F.DataStoreRatingInfoWithSlot_slot = ProtoField.int8("DataStoreRatingInfoWithSlot_slot", "slot (uint8)")
F.GameKey = ProtoField.bytes("GameKey", "GameKey (GameKey)")
F.GameKey_Title_id = ProtoField.uint64("GameKey_Title_id", "Title_id (uint64)")
F.GameKey_Title_version = ProtoField.uint16("GameKey_Title_version", "Title_version (uint16)")
F.PrincipalBasicInfo = ProtoField.bytes("PrincipalBasicInfo", "PrincipalBasicInfo (PrincipalBasicInfo)")
F.PrincipalBasicInfo_Pid = ProtoField.uint32("PrincipalBasicInfo_Pid", "Pid (uint32)")
F.PrincipalBasicInfo_NNID_len = ProtoField.uint16("PrincipalBasicInfo_NNID_len", "NNID length (String)")
F.PrincipalBasicInfo_NNID_data = ProtoField.string("PrincipalBasicInfo_NNID_data", "NNID data (String)")
F.PrincipalBasicInfo_Unknown = ProtoField.uint8("PrincipalBasicInfo_Unknown", "Unknown (uint8)")
F.MessageRecipient = ProtoField.bytes("MessageRecipient", "MessageRecipient (MessageRecipient)")
F.MessageRecipient_m_uiRecipientType = ProtoField.uint32("MessageRecipient_m_uiRecipientType", "m_uiRecipientType (uint32)")
F.MessageRecipient_m_principalId = ProtoField.uint32("MessageRecipient_m_principalId", "m_principalId (uint32)")
F.MessageRecipient_m_gatheringId = ProtoField.uint32("MessageRecipient_m_gatheringId", "m_gatheringId (uint32)")
F.MatchmakeSession = ProtoField.bytes("MatchmakeSession", "MatchmakeSession (MatchmakeSession)")
F.MatchmakeSession_m_GameMode = ProtoField.uint32("MatchmakeSession_m_GameMode", "m_GameMode (uint32)")
F.MatchmakeSession_m_Attribs_len = ProtoField.uint32("MatchmakeSession_m_Attribs_len", "m_Attribs length (uint32)")
F.MatchmakeSession_m_Attribs_item = ProtoField.uint32("MatchmakeSession_m_Attribs_item", "m_Attribs (uint32)")
F.MatchmakeSession_m_OpenParticipation = ProtoField.bool("MatchmakeSession_m_OpenParticipation", "m_OpenParticipation (bool)")
F.MatchmakeSession_m_MatchmakeSystemType = ProtoField.uint32("MatchmakeSession_m_MatchmakeSystemType", "m_MatchmakeSystemType (uint32)")
F.MatchmakeSession_m_ApplicationBuffer_len = ProtoField.uint32("MatchmakeSession_m_ApplicationBuffer_len", "m_ApplicationBuffer length (Buffer)")
F.MatchmakeSession_m_ApplicationBuffer_data = ProtoField.bytes("MatchmakeSession_m_ApplicationBuffer_data", "m_ApplicationBuffer data (Buffer)")
F.MatchmakeSession_m_ParticipationCount = ProtoField.uint32("MatchmakeSession_m_ParticipationCount", "m_ParticipationCount (uint32)")
F.MatchmakeSession_m_ProgressScore = ProtoField.uint8("MatchmakeSession_m_ProgressScore", "m_ProgressScore (uint8)")
F.MatchmakeSession_m_SessionKey_len = ProtoField.uint32("MatchmakeSession_m_SessionKey_len", "m_SessionKey length (Buffer)")
F.MatchmakeSession_m_SessionKey_data = ProtoField.bytes("MatchmakeSession_m_SessionKey_data", "m_SessionKey data (Buffer)")
F.MatchmakeSession_m_Option0 = ProtoField.uint32("MatchmakeSession_m_Option0", "m_Option0 (uint32)")
F.MatchmakeSession_m_StartedTime = ProtoField.uint64("MatchmakeSession_m_StartedTime", "m_StartedTime (uint64)")
F.MatchmakeSession_m_UserPassword_len = ProtoField.uint16("MatchmakeSession_m_UserPassword_len", "m_UserPassword length (String)")
F.MatchmakeSession_m_UserPassword_data = ProtoField.string("MatchmakeSession_m_UserPassword_data", "m_UserPassword data (String)")
F.MatchmakeSession_m_ReferGid = ProtoField.uint32("MatchmakeSession_m_ReferGid", "m_ReferGid (uint32)")
F.MatchmakeSession_m_UserPasswordEnabled = ProtoField.bool("MatchmakeSession_m_UserPasswordEnabled", "m_UserPasswordEnabled (bool)")
F.MatchmakeSession_m_SystemPasswordEnabled = ProtoField.bool("MatchmakeSession_m_SystemPasswordEnabled", "m_SystemPasswordEnabled (bool)")
F.MatchmakeSession_m_Codeword_len = ProtoField.uint16("MatchmakeSession_m_Codeword_len", "m_Codeword length (String)")
F.MatchmakeSession_m_Codeword_data = ProtoField.string("MatchmakeSession_m_Codeword_data", "m_Codeword data (String)")
F.MatchmakeBlockListParam = ProtoField.bytes("MatchmakeBlockListParam", "MatchmakeBlockListParam (MatchmakeBlockListParam)")
F.MatchmakeBlockListParam_optionFlag = ProtoField.uint32("MatchmakeBlockListParam_optionFlag", "optionFlag (uint32)")
F.MatchmakeSessionSearchCriteria = ProtoField.bytes("MatchmakeSessionSearchCriteria", "MatchmakeSessionSearchCriteria (MatchmakeSessionSearchCriteria)")
F.MatchmakeSessionSearchCriteria_m_Attribs_len = ProtoField.uint32("MatchmakeSessionSearchCriteria_m_Attribs_len", "m_Attribs length (uint32)")
F.MatchmakeSessionSearchCriteria_m_Attribs_item_len = ProtoField.uint16("MatchmakeSessionSearchCriteria_m_Attribs_item_len", "m_Attribs length (String)")
F.MatchmakeSessionSearchCriteria_m_Attribs_item_data = ProtoField.string("MatchmakeSessionSearchCriteria_m_Attribs_item_data", "m_Attribs data (String)")
F.MatchmakeSessionSearchCriteria_m_GameMode_len = ProtoField.uint16("MatchmakeSessionSearchCriteria_m_GameMode_len", "m_GameMode length (String)")
F.MatchmakeSessionSearchCriteria_m_GameMode_data = ProtoField.string("MatchmakeSessionSearchCriteria_m_GameMode_data", "m_GameMode data (String)")
F.MatchmakeSessionSearchCriteria_m_MinParticipants_len = ProtoField.uint16("MatchmakeSessionSearchCriteria_m_MinParticipants_len", "m_MinParticipants length (String)")
F.MatchmakeSessionSearchCriteria_m_MinParticipants_data = ProtoField.string("MatchmakeSessionSearchCriteria_m_MinParticipants_data", "m_MinParticipants data (String)")
F.MatchmakeSessionSearchCriteria_m_MaxParticipants_len = ProtoField.uint16("MatchmakeSessionSearchCriteria_m_MaxParticipants_len", "m_MaxParticipants length (String)")
F.MatchmakeSessionSearchCriteria_m_MaxParticipants_data = ProtoField.string("MatchmakeSessionSearchCriteria_m_MaxParticipants_data", "m_MaxParticipants data (String)")
F.MatchmakeSessionSearchCriteria_m_MatchmakeSystemType_len = ProtoField.uint16("MatchmakeSessionSearchCriteria_m_MatchmakeSystemType_len", "m_MatchmakeSystemType length (String)")
F.MatchmakeSessionSearchCriteria_m_MatchmakeSystemType_data = ProtoField.string("MatchmakeSessionSearchCriteria_m_MatchmakeSystemType_data", "m_MatchmakeSystemType data (String)")
F.MatchmakeSessionSearchCriteria_m_VacantOnly = ProtoField.bool("MatchmakeSessionSearchCriteria_m_VacantOnly", "m_VacantOnly (bool)")
F.MatchmakeSessionSearchCriteria_m_ExcludeLocked = ProtoField.bool("MatchmakeSessionSearchCriteria_m_ExcludeLocked", "m_ExcludeLocked (bool)")
F.MatchmakeSessionSearchCriteria_m_ExcludeNonHostPid = ProtoField.bool("MatchmakeSessionSearchCriteria_m_ExcludeNonHostPid", "m_ExcludeNonHostPid (bool)")
F.MatchmakeSessionSearchCriteria_m_SelectionMethod = ProtoField.uint32("MatchmakeSessionSearchCriteria_m_SelectionMethod", "m_SelectionMethod (uint32)")
F.MatchmakeSessionSearchCriteria_m_VacantParticipants = ProtoField.uint16("MatchmakeSessionSearchCriteria_m_VacantParticipants", "m_VacantParticipants (uint16)")
F.MatchmakeSessionSearchCriteria_m_ExcludeUserPasswordSet = ProtoField.bool("MatchmakeSessionSearchCriteria_m_ExcludeUserPasswordSet", "m_ExcludeUserPasswordSet (bool)")
F.MatchmakeSessionSearchCriteria_m_ExcludeSystemPasswordSet = ProtoField.bool("MatchmakeSessionSearchCriteria_m_ExcludeSystemPasswordSet", "m_ExcludeSystemPasswordSet (bool)")
F.MatchmakeSessionSearchCriteria_m_ReferGid = ProtoField.uint32("MatchmakeSessionSearchCriteria_m_ReferGid", "m_ReferGid (uint32)")
F.MatchmakeSessionSearchCriteria_m_Codeword_len = ProtoField.uint16("MatchmakeSessionSearchCriteria_m_Codeword_len", "m_Codeword length (String)")
F.MatchmakeSessionSearchCriteria_m_Codeword_data = ProtoField.string("MatchmakeSessionSearchCriteria_m_Codeword_data", "m_Codeword data (String)")
F.DataStorePersistenceTarget = ProtoField.bytes("DataStorePersistenceTarget", "DataStorePersistenceTarget (DataStorePersistenceTarget)")
F.DataStorePersistenceTarget_ownerId = ProtoField.uint32("DataStorePersistenceTarget_ownerId", "ownerId (uint32)")
F.DataStorePersistenceTarget_persistenceSlotId = ProtoField.uint16("DataStorePersistenceTarget_persistenceSlotId", "persistenceSlotId (uint16)")
F.DataStoreKeyValue = ProtoField.bytes("DataStoreKeyValue", "DataStoreKeyValue (DataStoreKeyValue)")
F.DataStoreKeyValue_key_len = ProtoField.uint16("DataStoreKeyValue_key_len", "key length (String)")
F.DataStoreKeyValue_key_data = ProtoField.string("DataStoreKeyValue_key_data", "key data (String)")
F.DataStoreKeyValue_value_len = ProtoField.uint16("DataStoreKeyValue_value_len", "value length (String)")
F.DataStoreKeyValue_value_data = ProtoField.string("DataStoreKeyValue_value_data", "value data (String)")
F.DataStoreRatingInitParamWithSlot = ProtoField.bytes("DataStoreRatingInitParamWithSlot", "DataStoreRatingInitParamWithSlot (DataStoreRatingInitParamWithSlot)")
F.DataStoreRatingInitParamWithSlot_slot = ProtoField.int8("DataStoreRatingInitParamWithSlot_slot", "slot (uint8)")
F.DataStorePersistenceInitParam = ProtoField.bytes("DataStorePersistenceInitParam", "DataStorePersistenceInitParam (DataStorePersistenceInitParam)")
F.DataStorePersistenceInitParam_persistenceSlotId = ProtoField.uint16("DataStorePersistenceInitParam_persistenceSlotId", "persistenceSlotId (uint16)")
F.DataStorePersistenceInitParam_deleteLastObject = ProtoField.bool("DataStorePersistenceInitParam_deleteLastObject", "deleteLastObject (bool)")
F.DataStoreChangeMetaCompareParam = ProtoField.bytes("DataStoreChangeMetaCompareParam", "DataStoreChangeMetaCompareParam (DataStoreChangeMetaCompareParam)")
F.DataStoreChangeMetaCompareParam_comparisonFlag = ProtoField.uint32("DataStoreChangeMetaCompareParam_comparisonFlag", "comparisonFlag (uint32)")
F.DataStoreChangeMetaCompareParam_name_len = ProtoField.uint16("DataStoreChangeMetaCompareParam_name_len", "name length (String)")
F.DataStoreChangeMetaCompareParam_name_data = ProtoField.string("DataStoreChangeMetaCompareParam_name_data", "name data (String)")
F.DataStoreChangeMetaCompareParam_period = ProtoField.uint16("DataStoreChangeMetaCompareParam_period", "period (uint16)")
F.DataStoreChangeMetaCompareParam_metaBinary_len = ProtoField.uint16("DataStoreChangeMetaCompareParam_metaBinary_len", "metaBinary length (Buffer)")
F.DataStoreChangeMetaCompareParam_metaBinary_data = ProtoField.bytes("DataStoreChangeMetaCompareParam_metaBinary_data", "metaBinary data (Buffer)")
F.DataStoreChangeMetaCompareParam_tags_len = ProtoField.uint32("DataStoreChangeMetaCompareParam_tags_len", "tags length (uint32)")
F.DataStoreChangeMetaCompareParam_tags_item_len = ProtoField.uint16("DataStoreChangeMetaCompareParam_tags_item_len", "tags length (String)")
F.DataStoreChangeMetaCompareParam_tags_item_data = ProtoField.string("DataStoreChangeMetaCompareParam_tags_item_data", "tags data (String)")
F.DataStoreChangeMetaCompareParam_referredCnt = ProtoField.uint32("DataStoreChangeMetaCompareParam_referredCnt", "referredCnt (uint32)")
F.DataStoreChangeMetaCompareParam_dataType = ProtoField.uint16("DataStoreChangeMetaCompareParam_dataType", "dataType (uint16)")
F.DataStoreChangeMetaCompareParam_status = ProtoField.uint8("DataStoreChangeMetaCompareParam_status", "status (uint8)")
F.DataStoreMetaInfo = ProtoField.bytes("DataStoreMetaInfo", "DataStoreMetaInfo (DataStoreMetaInfo)")
F.DataStoreMetaInfo_dataId = ProtoField.uint64("DataStoreMetaInfo_dataId", "dataId (uint64)")
F.DataStoreMetaInfo_ownerId = ProtoField.uint32("DataStoreMetaInfo_ownerId", "ownerId (uint32)")
F.DataStoreMetaInfo_size = ProtoField.uint32("DataStoreMetaInfo_size", "size (uint32)")
F.DataStoreMetaInfo_name_len = ProtoField.uint16("DataStoreMetaInfo_name_len", "name length (String)")
F.DataStoreMetaInfo_name_data = ProtoField.string("DataStoreMetaInfo_name_data", "name data (String)")
F.DataStoreMetaInfo_dataType = ProtoField.uint16("DataStoreMetaInfo_dataType", "dataType (uint16)")
F.DataStoreMetaInfo_metaBinary_len = ProtoField.uint16("DataStoreMetaInfo_metaBinary_len", "metaBinary length (Buffer)")
F.DataStoreMetaInfo_metaBinary_data = ProtoField.bytes("DataStoreMetaInfo_metaBinary_data", "metaBinary data (Buffer)")
F.DataStoreMetaInfo_createdTime = ProtoField.uint64("DataStoreMetaInfo_createdTime", "createdTime (uint64)")
F.DataStoreMetaInfo_updatedTime = ProtoField.uint64("DataStoreMetaInfo_updatedTime", "updatedTime (uint64)")
F.DataStoreMetaInfo_period = ProtoField.uint16("DataStoreMetaInfo_period", "period (uint16)")
F.DataStoreMetaInfo_status = ProtoField.uint8("DataStoreMetaInfo_status", "status (uint8)")
F.DataStoreMetaInfo_referredCnt = ProtoField.uint32("DataStoreMetaInfo_referredCnt", "referredCnt (uint32)")
F.DataStoreMetaInfo_referDataId = ProtoField.uint32("DataStoreMetaInfo_referDataId", "referDataId (uint32)")
F.DataStoreMetaInfo_flag = ProtoField.uint32("DataStoreMetaInfo_flag", "flag (uint32)")
F.DataStoreMetaInfo_referredTime = ProtoField.uint64("DataStoreMetaInfo_referredTime", "referredTime (uint64)")
F.DataStoreMetaInfo_expireTime = ProtoField.uint64("DataStoreMetaInfo_expireTime", "expireTime (uint64)")
F.DataStoreMetaInfo_tags_len = ProtoField.uint32("DataStoreMetaInfo_tags_len", "tags length (uint32)")
F.DataStoreMetaInfo_tags_item_len = ProtoField.uint16("DataStoreMetaInfo_tags_item_len", "tags length (String)")
F.DataStoreMetaInfo_tags_item_data = ProtoField.string("DataStoreMetaInfo_tags_item_data", "tags data (String)")
F.DataStoreMetaInfo_ratings_len = ProtoField.uint32("DataStoreMetaInfo_ratings_len", "ratings length (uint32)")
F.DataStoreSearchBalloonResult = ProtoField.bytes("DataStoreSearchBalloonResult", "DataStoreSearchBalloonResult (DataStoreSearchBalloonResult)")
F.DataStoreSearchBalloonResult_dataId = ProtoField.uint64("DataStoreSearchBalloonResult_dataId", "dataId (uint64)")
F.DataStoreSearchBalloonResult_ownerId = ProtoField.uint64("DataStoreSearchBalloonResult_ownerId", "ownerId (uint64)")
F.DataStoreSearchBalloonResult_size = ProtoField.uint32("DataStoreSearchBalloonResult_size", "size (uint32)")
F.DataStoreSearchBalloonResult_name_len = ProtoField.uint16("DataStoreSearchBalloonResult_name_len", "name length (String)")
F.DataStoreSearchBalloonResult_name_data = ProtoField.string("DataStoreSearchBalloonResult_name_data", "name data (String)")
F.DataStoreSearchBalloonResult_dataType = ProtoField.uint16("DataStoreSearchBalloonResult_dataType", "dataType (uint16)")
F.DataStoreSearchBalloonResult_metaBinary_len = ProtoField.uint16("DataStoreSearchBalloonResult_metaBinary_len", "metaBinary length (Buffer)")
F.DataStoreSearchBalloonResult_metaBinary_data = ProtoField.bytes("DataStoreSearchBalloonResult_metaBinary_data", "metaBinary data (Buffer)")
F.DataStoreSearchBalloonResult_createdTime = ProtoField.uint64("DataStoreSearchBalloonResult_createdTime", "createdTime (uint64)")
F.DataStoreSearchBalloonResult_updatedTime = ProtoField.uint64("DataStoreSearchBalloonResult_updatedTime", "updatedTime (uint64)")
F.DataStoreSearchBalloonResult_ownerDataId = ProtoField.uint64("DataStoreSearchBalloonResult_ownerDataId", "ownerDataId (uint64)")
F.DataStoreSearchBalloonResult_ownerName_len = ProtoField.uint16("DataStoreSearchBalloonResult_ownerName_len", "ownerName length (String)")
F.DataStoreSearchBalloonResult_ownerName_data = ProtoField.string("DataStoreSearchBalloonResult_ownerName_data", "ownerName data (String)")
F.DataStoreSearchBalloonResult_isFriendBalloon = ProtoField.bool("DataStoreSearchBalloonResult_isFriendBalloon", "isFriendBalloon (bool)")
F.DataStoreFetchMyInfosBalloonResult = ProtoField.bytes("DataStoreFetchMyInfosBalloonResult", "DataStoreFetchMyInfosBalloonResult (DataStoreFetchMyInfosBalloonResult)")
F.DataStoreFetchMyInfosBalloonResult_dataId = ProtoField.uint64("DataStoreFetchMyInfosBalloonResult_dataId", "dataId (uint64)")
F.DataStoreFetchMyInfosBalloonResult_dataType = ProtoField.uint16("DataStoreFetchMyInfosBalloonResult_dataType", "dataType (uint16)")
F.DataStoreFetchMyInfosBalloonResult_metaBinary_len = ProtoField.uint16("DataStoreFetchMyInfosBalloonResult_metaBinary_len", "metaBinary length (Buffer)")
F.DataStoreFetchMyInfosBalloonResult_metaBinary_data = ProtoField.bytes("DataStoreFetchMyInfosBalloonResult_metaBinary_data", "metaBinary data (Buffer)")
F.DataStoreFetchMyInfosBalloonResult_createdTime = ProtoField.uint64("DataStoreFetchMyInfosBalloonResult_createdTime", "createdTime (uint64)")
F.DataStoreFetchMyInfosBalloonResult_updatedTime = ProtoField.uint64("DataStoreFetchMyInfosBalloonResult_updatedTime", "updatedTime (uint64)")
F.DataStoreFetchMyInfosBalloonResult_isCleared = ProtoField.bool("DataStoreFetchMyInfosBalloonResult_isCleared", "isCleared (bool)")
F.DataStoreFetchMyInfosAchievementResult = ProtoField.bytes("DataStoreFetchMyInfosAchievementResult", "DataStoreFetchMyInfosAchievementResult (DataStoreFetchMyInfosAchievementResult)")
F.DataStoreFetchMyInfosAchievementResult_dataId = ProtoField.uint64("DataStoreFetchMyInfosAchievementResult_dataId", "dataId (uint64)")
F.DataStoreFetchMyInfosAchievementResult_dataType = ProtoField.uint16("DataStoreFetchMyInfosAchievementResult_dataType", "dataType (uint16)")
F.DataStoreFetchMyInfosAchievementResult_metaBinary_len = ProtoField.uint16("DataStoreFetchMyInfosAchievementResult_metaBinary_len", "metaBinary length (Buffer)")
F.DataStoreFetchMyInfosAchievementResult_metaBinary_data = ProtoField.bytes("DataStoreFetchMyInfosAchievementResult_metaBinary_data", "metaBinary data (Buffer)")
F.DataStoreFetchMyInfosAchievementResult_createdTime = ProtoField.uint64("DataStoreFetchMyInfosAchievementResult_createdTime", "createdTime (uint64)")
F.RankingRankData = ProtoField.bytes("RankingRankData", "RankingRankData (RankingRankData)")
F.RankingRankData_principalId = ProtoField.uint32("RankingRankData_principalId", "principalId (uint32)")
F.RankingRankData_uniqueId = ProtoField.uint64("RankingRankData_uniqueId", "uniqueId (uint64)")
F.RankingRankData_order = ProtoField.uint32("RankingRankData_order", "order (uint32)")
F.RankingRankData_category = ProtoField.uint32("RankingRankData_category", "category (uint32)")
F.RankingRankData_score = ProtoField.uint32("RankingRankData_score", "score (uint32)")
F.RankingRankData_groups_len = ProtoField.uint32("RankingRankData_groups_len", "groups length (uint32)")
F.RankingRankData_groups_item = ProtoField.uint8("RankingRankData_groups_item", "groups (uint8)")
F.RankingRankData_param = ProtoField.uint64("RankingRankData_param", "param (uint64)")
F.RankingRankData_commonData_len = ProtoField.uint32("RankingRankData_commonData_len", "commonData length (Buffer)")
F.RankingRankData_commonData_data = ProtoField.bytes("RankingRankData_commonData_data", "commonData data (Buffer)")
F.Mii = ProtoField.bytes("Mii", "Mii (Mii)")
F.Mii_Unknown_len = ProtoField.uint16("Mii_Unknown_len", "Unknown length (String)")
F.Mii_Unknown_data = ProtoField.string("Mii_Unknown_data", "Unknown data (String)")
F.Mii_Unknown2 = ProtoField.bool("Mii_Unknown2", "Unknown2 (bool)")
F.Mii_Unknown3 = ProtoField.uint8("Mii_Unknown3", "Unknown3 (uint8)")
F.Mii_Mii_data_len = ProtoField.uint32("Mii_Mii_data_len", "Mii_data length (Buffer)")
F.Mii_Mii_data_data = ProtoField.bytes("Mii_Mii_data_data", "Mii_data data (Buffer)")
F.MiiList = ProtoField.bytes("MiiList", "MiiList (MiiList)")
F.MiiList_Unknown_len = ProtoField.uint16("MiiList_Unknown_len", "Unknown length (String)")
F.MiiList_Unknown_data = ProtoField.string("MiiList_Unknown_data", "Unknown data (String)")
F.MiiList_Unknown2 = ProtoField.bool("MiiList_Unknown2", "Unknown2 (bool)")
F.MiiList_Unknown3 = ProtoField.uint8("MiiList_Unknown3", "Unknown3 (uint8)")
F.MiiList_Mii_data_list_len = ProtoField.uint32("MiiList_Mii_data_list_len", "Mii_data_list length (uint32)")
F.MiiList_Mii_data_list_item_len = ProtoField.uint32("MiiList_Mii_data_list_item_len", "Mii_data_list length (Buffer)")
F.MiiList_Mii_data_list_item_data = ProtoField.bytes("MiiList_Mii_data_list_item_data", "Mii_data_list data (Buffer)")
F.NintendoPresence = ProtoField.bytes("NintendoPresence", "NintendoPresence (NintendoPresence)")
F.NintendoPresence_m_changedBitFlag = ProtoField.uint32("NintendoPresence_m_changedBitFlag", "m_changedBitFlag (uint32)")
F.NintendoPresence_m_gameModeDescription_len = ProtoField.uint16("NintendoPresence_m_gameModeDescription_len", "m_gameModeDescription length (String)")
F.NintendoPresence_m_gameModeDescription_data = ProtoField.string("NintendoPresence_m_gameModeDescription_data", "m_gameModeDescription data (String)")
F.NintendoPresence_m_joinAvailabilityFlag = ProtoField.uint32("NintendoPresence_m_joinAvailabilityFlag", "m_joinAvailabilityFlag (uint32)")
F.NintendoPresence_m_matchmakeSystemType = ProtoField.uint8("NintendoPresence_m_matchmakeSystemType", "m_matchmakeSystemType (uint8)")
F.NintendoPresence_m_joinGameID = ProtoField.uint32("NintendoPresence_m_joinGameID", "m_joinGameID (uint32)")
F.NintendoPresence_m_joinGameMode = ProtoField.uint32("NintendoPresence_m_joinGameMode", "m_joinGameMode (uint32)")
F.NintendoPresence_m_ownerPrincipalID = ProtoField.uint32("NintendoPresence_m_ownerPrincipalID", "m_ownerPrincipalID (uint32)")
F.NintendoPresence_m_joinGroupID = ProtoField.uint32("NintendoPresence_m_joinGroupID", "m_joinGroupID (uint32)")
F.NintendoPresence_m_applicationArg_len = ProtoField.uint32("NintendoPresence_m_applicationArg_len", "m_applicationArg length (Buffer)")
F.NintendoPresence_m_applicationArg_data = ProtoField.bytes("NintendoPresence_m_applicationArg_data", "m_applicationArg data (Buffer)")
F.NNAInfo = ProtoField.bytes("NNAInfo", "NNAInfo (NNAInfo)")
F.NNAInfo_Unknown = ProtoField.uint8("NNAInfo_Unknown", "Unknown (uint8)")
F.NNAInfo_Unknown2 = ProtoField.uint8("NNAInfo_Unknown2", "Unknown2 (uint8)")
F.NintendoPresenceV2 = ProtoField.bytes("NintendoPresenceV2", "NintendoPresenceV2 (NintendoPresenceV2)")
F.NintendoPresenceV2_Changed_flags = ProtoField.uint32("NintendoPresenceV2_Changed_flags", "Changed_flags (uint32)")
F.NintendoPresenceV2_Is_online = ProtoField.bool("NintendoPresenceV2_Is_online", "Is_online (bool)")
F.NintendoPresenceV2_Unknown_1 = ProtoField.uint8("NintendoPresenceV2_Unknown_1", "Unknown_1 (uint8)")
F.NintendoPresenceV2_Message_len = ProtoField.uint16("NintendoPresenceV2_Message_len", "Message length (String)")
F.NintendoPresenceV2_Message_data = ProtoField.string("NintendoPresenceV2_Message_data", "Message data (String)")
F.NintendoPresenceV2_Unknown_2 = ProtoField.uint32("NintendoPresenceV2_Unknown_2", "Unknown_2 (uint32)")
F.NintendoPresenceV2_Unknown_3 = ProtoField.uint8("NintendoPresenceV2_Unknown_3", "Unknown_3 (uint8)")
F.NintendoPresenceV2_Game_server_id = ProtoField.uint32("NintendoPresenceV2_Game_server_id", "Game_server_id (uint32)")
F.NintendoPresenceV2_Unknown_4 = ProtoField.uint32("NintendoPresenceV2_Unknown_4", "Unknown_4 (uint32)")
F.NintendoPresenceV2_Pid = ProtoField.uint32("NintendoPresenceV2_Pid", "Pid (uint32)")
F.NintendoPresenceV2_Gathering_id = ProtoField.uint32("NintendoPresenceV2_Gathering_id", "Gathering_id (uint32)")
F.NintendoPresenceV2_Application_data_len = ProtoField.uint32("NintendoPresenceV2_Application_data_len", "Application_data length (Buffer)")
F.NintendoPresenceV2_Application_data_data = ProtoField.bytes("NintendoPresenceV2_Application_data_data", "Application_data data (Buffer)")
F.NintendoPresenceV2_Unknown_5 = ProtoField.uint8("NintendoPresenceV2_Unknown_5", "Unknown_5 (uint8)")
F.NintendoPresenceV2_Unknown_6 = ProtoField.uint8("NintendoPresenceV2_Unknown_6", "Unknown_6 (uint8)")
F.NintendoPresenceV2_Unknown_7 = ProtoField.uint8("NintendoPresenceV2_Unknown_7", "Unknown_7 (uint8)")
F.Comment = ProtoField.bytes("Comment", "Comment (Comment)")
F.Comment_Unknown = ProtoField.uint8("Comment_Unknown", "Unknown (uint8)")
F.Comment_Status_message_len = ProtoField.uint16("Comment_Status_message_len", "Status_message length (String)")
F.Comment_Status_message_data = ProtoField.string("Comment_Status_message_data", "Status_message data (String)")
F.Comment_Last_changed_on = ProtoField.uint64("Comment_Last_changed_on", "Last_changed_on (uint64)")
F.FriendRequestMessage = ProtoField.bytes("FriendRequestMessage", "FriendRequestMessage (FriendRequestMessage)")
F.FriendRequestMessage_Unknown = ProtoField.uint64("FriendRequestMessage_Unknown", "Unknown (uint64)")
F.FriendRequestMessage_Unknown2 = ProtoField.uint8("FriendRequestMessage_Unknown2", "Unknown2 (uint8)")
F.FriendRequestMessage_Unknown3 = ProtoField.uint8("FriendRequestMessage_Unknown3", "Unknown3 (uint8)")
F.FriendRequestMessage_Message_len = ProtoField.uint16("FriendRequestMessage_Message_len", "Message length (String)")
F.FriendRequestMessage_Message_data = ProtoField.string("FriendRequestMessage_Message_data", "Message data (String)")
F.FriendRequestMessage_Unknown4 = ProtoField.uint8("FriendRequestMessage_Unknown4", "Unknown4 (uint8)")
F.FriendRequestMessage_Unknown5_len = ProtoField.uint16("FriendRequestMessage_Unknown5_len", "Unknown5 length (String)")
F.FriendRequestMessage_Unknown5_data = ProtoField.string("FriendRequestMessage_Unknown5_data", "Unknown5 data (String)")
F.FriendRequestMessage_Unknown6 = ProtoField.uint64("FriendRequestMessage_Unknown6", "Unknown6 (uint64)")
F.FriendRequestMessage_Expires_on = ProtoField.uint64("FriendRequestMessage_Expires_on", "Expires_on (uint64)")
F.UserMessage = ProtoField.bytes("UserMessage", "UserMessage (UserMessage)")
F.UserMessage_m_uiID = ProtoField.uint32("UserMessage_m_uiID", "m_uiID (uint32)")
F.UserMessage_m_uiParentID = ProtoField.uint32("UserMessage_m_uiParentID", "m_uiParentID (uint32)")
F.UserMessage_m_pidSender = ProtoField.uint32("UserMessage_m_pidSender", "m_pidSender (uint32)")
F.UserMessage_m_receptiontime = ProtoField.uint64("UserMessage_m_receptiontime", "m_receptiontime (uint64)")
F.UserMessage_m_uiLifeTime = ProtoField.uint32("UserMessage_m_uiLifeTime", "m_uiLifeTime (uint32)")
F.UserMessage_m_uiFlags = ProtoField.uint32("UserMessage_m_uiFlags", "m_uiFlags (uint32)")
F.UserMessage_m_strSubject_len = ProtoField.uint16("UserMessage_m_strSubject_len", "m_strSubject length (String)")
F.UserMessage_m_strSubject_data = ProtoField.string("UserMessage_m_strSubject_data", "m_strSubject data (String)")
F.UserMessage_m_strSender_len = ProtoField.uint16("UserMessage_m_strSender_len", "m_strSender length (String)")
F.UserMessage_m_strSender_data = ProtoField.string("UserMessage_m_strSender_data", "m_strSender data (String)")
F.BasicAccountInfo = ProtoField.bytes("BasicAccountInfo", "BasicAccountInfo (BasicAccountInfo)")
F.BasicAccountInfo_m_pidOwner = ProtoField.uint32("BasicAccountInfo_m_pidOwner", "m_pidOwner (uint32)")
F.BasicAccountInfo_m_strName_len = ProtoField.uint16("BasicAccountInfo_m_strName_len", "m_strName length (String)")
F.BasicAccountInfo_m_strName_data = ProtoField.string("BasicAccountInfo_m_strName_data", "m_strName data (String)")
F.AccountData = ProtoField.bytes("AccountData", "AccountData (AccountData)")
F.AccountData_m_pid = ProtoField.uint32("AccountData_m_pid", "m_pid (uint32)")
F.AccountData_m_strName_len = ProtoField.uint16("AccountData_m_strName_len", "m_strName length (String)")
F.AccountData_m_strName_data = ProtoField.string("AccountData_m_strName_data", "m_strName data (String)")
F.AccountData_m_uiGroups = ProtoField.uint32("AccountData_m_uiGroups", "m_uiGroups (uint32)")
F.AccountData_m_strEmail_len = ProtoField.uint16("AccountData_m_strEmail_len", "m_strEmail length (String)")
F.AccountData_m_strEmail_data = ProtoField.string("AccountData_m_strEmail_data", "m_strEmail data (String)")
F.AccountData_m_dtCreationDate = ProtoField.uint64("AccountData_m_dtCreationDate", "m_dtCreationDate (uint64)")
F.AccountData_m_dtEffectiveDate = ProtoField.uint64("AccountData_m_dtEffectiveDate", "m_dtEffectiveDate (uint64)")
F.AccountData_m_strNotEffectiveMsg_len = ProtoField.uint16("AccountData_m_strNotEffectiveMsg_len", "m_strNotEffectiveMsg length (String)")
F.AccountData_m_strNotEffectiveMsg_data = ProtoField.string("AccountData_m_strNotEffectiveMsg_data", "m_strNotEffectiveMsg data (String)")
F.AccountData_m_dtExpiryDate = ProtoField.uint64("AccountData_m_dtExpiryDate", "m_dtExpiryDate (uint64)")
F.AccountData_m_strExpiredMsg_len = ProtoField.uint16("AccountData_m_strExpiredMsg_len", "m_strExpiredMsg length (String)")
F.AccountData_m_strExpiredMsg_data = ProtoField.string("AccountData_m_strExpiredMsg_data", "m_strExpiredMsg data (String)")
F.PersistentGathering = ProtoField.bytes("PersistentGathering", "PersistentGathering (PersistentGathering)")
F.PersistentGathering_m_CommunityType = ProtoField.uint32("PersistentGathering_m_CommunityType", "m_CommunityType (uint32)")
F.PersistentGathering_m_Password_len = ProtoField.uint16("PersistentGathering_m_Password_len", "m_Password length (String)")
F.PersistentGathering_m_Password_data = ProtoField.string("PersistentGathering_m_Password_data", "m_Password data (String)")
F.PersistentGathering_m_Attribs_len = ProtoField.uint32("PersistentGathering_m_Attribs_len", "m_Attribs length (uint32)")
F.PersistentGathering_m_Attribs_item = ProtoField.uint32("PersistentGathering_m_Attribs_item", "m_Attribs (uint32)")
F.PersistentGathering_m_ApplicationBuffer_len = ProtoField.uint32("PersistentGathering_m_ApplicationBuffer_len", "m_ApplicationBuffer length (Buffer)")
F.PersistentGathering_m_ApplicationBuffer_data = ProtoField.bytes("PersistentGathering_m_ApplicationBuffer_data", "m_ApplicationBuffer data (Buffer)")
F.PersistentGathering_m_ParticipationStartDate = ProtoField.uint64("PersistentGathering_m_ParticipationStartDate", "m_ParticipationStartDate (uint64)")
F.PersistentGathering_m_ParticipationEndDate = ProtoField.uint64("PersistentGathering_m_ParticipationEndDate", "m_ParticipationEndDate (uint64)")
F.PersistentGathering_m_MatchmakeSessionCount = ProtoField.uint32("PersistentGathering_m_MatchmakeSessionCount", "m_MatchmakeSessionCount (uint32)")
F.PersistentGathering_m_ParticipationCount = ProtoField.uint32("PersistentGathering_m_ParticipationCount", "m_ParticipationCount (uint32)")
F.CreateMatchmakeSessionParam = ProtoField.bytes("CreateMatchmakeSessionParam", "CreateMatchmakeSessionParam (CreateMatchmakeSessionParam)")
F.CreateMatchmakeSessionParam_additionalParticipants_len = ProtoField.uint32("CreateMatchmakeSessionParam_additionalParticipants_len", "additionalParticipants length (uint32)")
F.CreateMatchmakeSessionParam_additionalParticipants_item = ProtoField.uint32("CreateMatchmakeSessionParam_additionalParticipants_item", "additionalParticipants (uint32)")
F.CreateMatchmakeSessionParam_gidForParticipationCheck = ProtoField.uint32("CreateMatchmakeSessionParam_gidForParticipationCheck", "gidForParticipationCheck (uint32)")
F.CreateMatchmakeSessionParam_createMatchmakeSessionOption = ProtoField.uint32("CreateMatchmakeSessionParam_createMatchmakeSessionOption", "createMatchmakeSessionOption (uint32)")
F.CreateMatchmakeSessionParam_joinMessage_len = ProtoField.uint16("CreateMatchmakeSessionParam_joinMessage_len", "joinMessage length (String)")
F.CreateMatchmakeSessionParam_joinMessage_data = ProtoField.string("CreateMatchmakeSessionParam_joinMessage_data", "joinMessage data (String)")
F.CreateMatchmakeSessionParam_participationCount = ProtoField.uint16("CreateMatchmakeSessionParam_participationCount", "participationCount (uint16)")
F.JoinMatchmakeSessionParam = ProtoField.bytes("JoinMatchmakeSessionParam", "JoinMatchmakeSessionParam (JoinMatchmakeSessionParam)")
F.JoinMatchmakeSessionParam_gid = ProtoField.uint32("JoinMatchmakeSessionParam_gid", "gid (uint32)")
F.JoinMatchmakeSessionParam_additionalParticipants_len = ProtoField.uint32("JoinMatchmakeSessionParam_additionalParticipants_len", "additionalParticipants length (uint32)")
F.JoinMatchmakeSessionParam_additionalParticipants_item = ProtoField.uint32("JoinMatchmakeSessionParam_additionalParticipants_item", "additionalParticipants (uint32)")
F.JoinMatchmakeSessionParam_gidForParticipationCheck = ProtoField.uint32("JoinMatchmakeSessionParam_gidForParticipationCheck", "gidForParticipationCheck (uint32)")
F.JoinMatchmakeSessionParam_joinMatchmakeSessionOption = ProtoField.uint32("JoinMatchmakeSessionParam_joinMatchmakeSessionOption", "joinMatchmakeSessionOption (uint32)")
F.JoinMatchmakeSessionParam_joinMatchmakeSessionBehavior = ProtoField.uint8("JoinMatchmakeSessionParam_joinMatchmakeSessionBehavior", "joinMatchmakeSessionBehavior (uint8)")
F.JoinMatchmakeSessionParam_strUserPassword_len = ProtoField.uint16("JoinMatchmakeSessionParam_strUserPassword_len", "strUserPassword length (String)")
F.JoinMatchmakeSessionParam_strUserPassword_data = ProtoField.string("JoinMatchmakeSessionParam_strUserPassword_data", "strUserPassword data (String)")
F.JoinMatchmakeSessionParam_strSystemPassword_len = ProtoField.uint16("JoinMatchmakeSessionParam_strSystemPassword_len", "strSystemPassword length (String)")
F.JoinMatchmakeSessionParam_strSystemPassword_data = ProtoField.string("JoinMatchmakeSessionParam_strSystemPassword_data", "strSystemPassword data (String)")
F.JoinMatchmakeSessionParam_joinMessage_len = ProtoField.uint16("JoinMatchmakeSessionParam_joinMessage_len", "joinMessage length (String)")
F.JoinMatchmakeSessionParam_joinMessage_data = ProtoField.string("JoinMatchmakeSessionParam_joinMessage_data", "joinMessage data (String)")
F.JoinMatchmakeSessionParam_participationCount = ProtoField.uint16("JoinMatchmakeSessionParam_participationCount", "participationCount (uint16)")
F.JoinMatchmakeSessionParam_extraParticipants = ProtoField.uint16("JoinMatchmakeSessionParam_extraParticipants", "extraParticipants (uint16)")
F.UpdateMatchmakeSessionParam = ProtoField.bytes("UpdateMatchmakeSessionParam", "UpdateMatchmakeSessionParam (UpdateMatchmakeSessionParam)")
F.UpdateMatchmakeSessionParam_gid = ProtoField.uint32("UpdateMatchmakeSessionParam_gid", "gid (uint32)")
F.UpdateMatchmakeSessionParam_modificationFlag = ProtoField.uint32("UpdateMatchmakeSessionParam_modificationFlag", "modificationFlag (uint32)")
F.UpdateMatchmakeSessionParam_attributes_len = ProtoField.uint32("UpdateMatchmakeSessionParam_attributes_len", "attributes length (uint32)")
F.UpdateMatchmakeSessionParam_attributes_item = ProtoField.uint32("UpdateMatchmakeSessionParam_attributes_item", "attributes (uint32)")
F.UpdateMatchmakeSessionParam_openParticipation = ProtoField.bool("UpdateMatchmakeSessionParam_openParticipation", "openParticipation (bool)")
F.UpdateMatchmakeSessionParam_applicationBuffer_len = ProtoField.uint32("UpdateMatchmakeSessionParam_applicationBuffer_len", "applicationBuffer length (Buffer)")
F.UpdateMatchmakeSessionParam_applicationBuffer_data = ProtoField.bytes("UpdateMatchmakeSessionParam_applicationBuffer_data", "applicationBuffer data (Buffer)")
F.UpdateMatchmakeSessionParam_progressScore = ProtoField.uint8("UpdateMatchmakeSessionParam_progressScore", "progressScore (uint8)")
F.UpdateMatchmakeSessionParam_startedTime = ProtoField.uint64("UpdateMatchmakeSessionParam_startedTime", "startedTime (uint64)")
F.UpdateMatchmakeSessionParam_userPassword_len = ProtoField.uint16("UpdateMatchmakeSessionParam_userPassword_len", "userPassword length (String)")
F.UpdateMatchmakeSessionParam_userPassword_data = ProtoField.string("UpdateMatchmakeSessionParam_userPassword_data", "userPassword data (String)")
F.UpdateMatchmakeSessionParam_gameMode = ProtoField.uint32("UpdateMatchmakeSessionParam_gameMode", "gameMode (uint32)")
F.UpdateMatchmakeSessionParam_description_len = ProtoField.uint16("UpdateMatchmakeSessionParam_description_len", "description length (String)")
F.UpdateMatchmakeSessionParam_description_data = ProtoField.string("UpdateMatchmakeSessionParam_description_data", "description data (String)")
F.UpdateMatchmakeSessionParam_minParticipants = ProtoField.uint16("UpdateMatchmakeSessionParam_minParticipants", "minParticipants (uint16)")
F.UpdateMatchmakeSessionParam_maxParticipants = ProtoField.uint16("UpdateMatchmakeSessionParam_maxParticipants", "maxParticipants (uint16)")
F.UpdateMatchmakeSessionParam_matchmakeSystemType = ProtoField.uint32("UpdateMatchmakeSessionParam_matchmakeSystemType", "matchmakeSystemType (uint32)")
F.UpdateMatchmakeSessionParam_participationPolicy = ProtoField.uint32("UpdateMatchmakeSessionParam_participationPolicy", "participationPolicy (uint32)")
F.UpdateMatchmakeSessionParam_policyArgument = ProtoField.uint32("UpdateMatchmakeSessionParam_policyArgument", "policyArgument (uint32)")
F.UpdateMatchmakeSessionParam_codeword_len = ProtoField.uint16("UpdateMatchmakeSessionParam_codeword_len", "codeword length (String)")
F.UpdateMatchmakeSessionParam_codeword_data = ProtoField.string("UpdateMatchmakeSessionParam_codeword_data", "codeword data (String)")
F.AutoMatchmakeParam = ProtoField.bytes("AutoMatchmakeParam", "AutoMatchmakeParam (AutoMatchmakeParam)")
F.AutoMatchmakeParam_additionalParticipants_len = ProtoField.uint32("AutoMatchmakeParam_additionalParticipants_len", "additionalParticipants length (uint32)")
F.AutoMatchmakeParam_additionalParticipants_item = ProtoField.uint32("AutoMatchmakeParam_additionalParticipants_item", "additionalParticipants (uint32)")
F.AutoMatchmakeParam_gidForParticipationCheck = ProtoField.uint32("AutoMatchmakeParam_gidForParticipationCheck", "gidForParticipationCheck (uint32)")
F.AutoMatchmakeParam_autoMatchmakeOption = ProtoField.uint32("AutoMatchmakeParam_autoMatchmakeOption", "autoMatchmakeOption (uint32)")
F.AutoMatchmakeParam_joinMessage_len = ProtoField.uint16("AutoMatchmakeParam_joinMessage_len", "joinMessage length (String)")
F.AutoMatchmakeParam_joinMessage_data = ProtoField.string("AutoMatchmakeParam_joinMessage_data", "joinMessage data (String)")
F.AutoMatchmakeParam_participationCount = ProtoField.uint16("AutoMatchmakeParam_participationCount", "participationCount (uint16)")
F.AutoMatchmakeParam_lstSearchCriteria_len = ProtoField.uint32("AutoMatchmakeParam_lstSearchCriteria_len", "lstSearchCriteria length (uint32)")
F.AutoMatchmakeParam_targetGids_len = ProtoField.uint32("AutoMatchmakeParam_targetGids_len", "targetGids length (uint32)")
F.AutoMatchmakeParam_targetGids_item = ProtoField.uint32("AutoMatchmakeParam_targetGids_item", "targetGids (uint32)")
F.FindMatchmakeSessionByParticipantParam = ProtoField.bytes("FindMatchmakeSessionByParticipantParam", "FindMatchmakeSessionByParticipantParam (FindMatchmakeSessionByParticipantParam)")
F.FindMatchmakeSessionByParticipantParam_m_principalIdList_len = ProtoField.uint32("FindMatchmakeSessionByParticipantParam_m_principalIdList_len", "m_principalIdList length (uint32)")
F.FindMatchmakeSessionByParticipantParam_m_principalIdList_item = ProtoField.uint32("FindMatchmakeSessionByParticipantParam_m_principalIdList_item", "m_principalIdList (uint32)")
F.FindMatchmakeSessionByParticipantParam_m_resultOptions = ProtoField.uint32("FindMatchmakeSessionByParticipantParam_m_resultOptions", "m_resultOptions (uint32)")
F.FindMatchmakeSessionByParticipantResult = ProtoField.bytes("FindMatchmakeSessionByParticipantResult", "FindMatchmakeSessionByParticipantResult (FindMatchmakeSessionByParticipantResult)")
F.FindMatchmakeSessionByParticipantResult_m_principalId = ProtoField.uint32("FindMatchmakeSessionByParticipantResult_m_principalId", "m_principalId (uint32)")
F.GatheringURLs = ProtoField.bytes("GatheringURLs", "GatheringURLs (GatheringURLs)")
F.GatheringURLs_m_gid = ProtoField.uint32("GatheringURLs_m_gid", "m_gid (uint32)")
F.GatheringURLs_m_lstStationURLs_len = ProtoField.uint32("GatheringURLs_m_lstStationURLs_len", "m_lstStationURLs length (uint32)")
F.GatheringURLs_m_lstStationURLs_item_len = ProtoField.uint16("GatheringURLs_m_lstStationURLs_item_len", "m_lstStationURLs length (String)")
F.GatheringURLs_m_lstStationURLs_item_data = ProtoField.string("GatheringURLs_m_lstStationURLs_item_data", "m_lstStationURLs data (String)")
F.Gathering_Stats = ProtoField.bytes("Gathering_Stats", "Gathering_Stats (Gathering_Stats)")
F.Gathering_Stats_m_pidParticipant = ProtoField.uint32("Gathering_Stats_m_pidParticipant", "m_pidParticipant (uint32)")
F.Gathering_Stats_m_uiFlags = ProtoField.uint32("Gathering_Stats_m_uiFlags", "m_uiFlags (uint32)")
F.Gathering_Stats_m_lstValues_len = ProtoField.uint32("Gathering_Stats_m_lstValues_len", "m_lstValues length (uint32)")
F.Gathering_Stats_m_lstValues_item = ProtoField.float("Gathering_Stats_m_lstValues_item", "m_lstValues (float)")
F.Invitation = ProtoField.bytes("Invitation", "Invitation (Invitation)")
F.Invitation_m_idGathering = ProtoField.uint32("Invitation_m_idGathering", "m_idGathering (uint32)")
F.Invitation_m_idGuest = ProtoField.uint32("Invitation_m_idGuest", "m_idGuest (uint32)")
F.Invitation_m_strMessage_len = ProtoField.uint16("Invitation_m_strMessage_len", "m_strMessage length (String)")
F.Invitation_m_strMessage_data = ProtoField.string("Invitation_m_strMessage_data", "m_strMessage data (String)")
F.Participant_Details = ProtoField.bytes("Participant_Details", "Participant_Details (Participant_Details)")
F.Participant_Details_m_idParticipant = ProtoField.uint32("Participant_Details_m_idParticipant", "m_idParticipant (uint32)")
F.Participant_Details_m_strName_len = ProtoField.uint16("Participant_Details_m_strName_len", "m_strName length (String)")
F.Participant_Details_m_strName_data = ProtoField.string("Participant_Details_m_strName_data", "m_strName data (String)")
F.Participant_Details_m_strMessage_len = ProtoField.uint16("Participant_Details_m_strMessage_len", "m_strMessage length (String)")
F.Participant_Details_m_strMessage_data = ProtoField.string("Participant_Details_m_strMessage_data", "m_strMessage data (String)")
F.Participant_Details_m_uiParticipants = ProtoField.uint16("Participant_Details_m_uiParticipants", "m_uiParticipants (uint16)")
F.Deletion_Entry = ProtoField.bytes("Deletion_Entry", "Deletion_Entry (Deletion_Entry)")
F.Deletion_Entry_m_idGathering = ProtoField.uint32("Deletion_Entry_m_idGathering", "m_idGathering (uint32)")
F.Deletion_Entry_m_pid = ProtoField.uint32("Deletion_Entry_m_pid", "m_pid (uint32)")
F.Deletion_Entry_m_uiReason = ProtoField.uint32("Deletion_Entry_m_uiReason", "m_uiReason (uint32)")
F.PlayingSession = ProtoField.bytes("PlayingSession", "PlayingSession (PlayingSession)")
F.PlayingSession_m_PrincipalId = ProtoField.uint32("PlayingSession_m_PrincipalId", "m_PrincipalId (uint32)")
F.PlayingSession_m_Gathering_data_bytes = ProtoField.bytes("PlayingSession_m_Gathering_data_bytes", "m_Gathering data bytes (bytes)")
F.PlayingSession_m_Gathering_type_name_len = ProtoField.uint16("PlayingSession_m_Gathering_type_name_len", "m_Gathering_type_name length (String)")
F.PlayingSession_m_Gathering_type_name_data = ProtoField.string("PlayingSession_m_Gathering_type_name_data", "m_Gathering_type_name data (String)")
F.PlayingSession_m_Gathering_len_plus_four = ProtoField.uint32("PlayingSession_m_Gathering_len_plus_four", "m_Gathering_len_plus_four (uint32)")
F.PlayingSession_m_Gathering_data_len = ProtoField.uint32("PlayingSession_m_Gathering_data_len", "m_Gathering_data_len (uint32)")
F.SimplePlayingSession = ProtoField.bytes("SimplePlayingSession", "SimplePlayingSession (SimplePlayingSession)")
F.SimplePlayingSession_m_PrincipalID = ProtoField.uint32("SimplePlayingSession_m_PrincipalID", "m_PrincipalID (uint32)")
F.SimplePlayingSession_m_GatheringID = ProtoField.uint32("SimplePlayingSession_m_GatheringID", "m_GatheringID (uint32)")
F.SimplePlayingSession_m_GameMode = ProtoField.uint32("SimplePlayingSession_m_GameMode", "m_GameMode (uint32)")
F.SimplePlayingSession_m_Attribute_0 = ProtoField.uint32("SimplePlayingSession_m_Attribute_0", "m_Attribute_0 (uint32)")
F.SimpleCommunity = ProtoField.bytes("SimpleCommunity", "SimpleCommunity (SimpleCommunity)")
F.SimpleCommunity_m_GatheringID = ProtoField.uint32("SimpleCommunity_m_GatheringID", "m_GatheringID (uint32)")
F.SimpleCommunity_m_MatchmakeSessionCount = ProtoField.uint32("SimpleCommunity_m_MatchmakeSessionCount", "m_MatchmakeSessionCount (uint32)")
F.DataStorePrepareGetParamV1 = ProtoField.bytes("DataStorePrepareGetParamV1", "DataStorePrepareGetParamV1 (DataStorePrepareGetParamV1)")
F.DataStorePrepareGetParamV1_dataId = ProtoField.uint32("DataStorePrepareGetParamV1_dataId", "dataId (uint32)")
F.DataStorePrepareGetParamV1_lockId = ProtoField.uint32("DataStorePrepareGetParamV1_lockId", "lockId (uint32)")
F.DataStorePrepareGetParam = ProtoField.bytes("DataStorePrepareGetParam", "DataStorePrepareGetParam (DataStorePrepareGetParam)")
F.DataStorePrepareGetParam_dataId = ProtoField.uint64("DataStorePrepareGetParam_dataId", "dataId (uint64)")
F.DataStorePrepareGetParam_lockId = ProtoField.uint32("DataStorePrepareGetParam_lockId", "lockId (uint32)")
F.DataStorePrepareGetParam_accessPassword = ProtoField.uint64("DataStorePrepareGetParam_accessPassword", "accessPassword (uint64)")
F.DataStorePrepareGetParam_extraData_len = ProtoField.uint32("DataStorePrepareGetParam_extraData_len", "extraData length (uint32)")
F.DataStorePrepareGetParam_extraData_item_len = ProtoField.uint16("DataStorePrepareGetParam_extraData_item_len", "extraData length (String)")
F.DataStorePrepareGetParam_extraData_item_data = ProtoField.string("DataStorePrepareGetParam_extraData_item_data", "extraData data (String)")
F.DataStoreReqGetInfoV1 = ProtoField.bytes("DataStoreReqGetInfoV1", "DataStoreReqGetInfoV1 (DataStoreReqGetInfoV1)")
F.DataStoreReqGetInfoV1_url_len = ProtoField.uint16("DataStoreReqGetInfoV1_url_len", "url length (String)")
F.DataStoreReqGetInfoV1_url_data = ProtoField.string("DataStoreReqGetInfoV1_url_data", "url data (String)")
F.DataStoreReqGetInfoV1_requestHeaders_len = ProtoField.uint32("DataStoreReqGetInfoV1_requestHeaders_len", "requestHeaders length (uint32)")
F.DataStoreReqGetInfoV1_size = ProtoField.uint32("DataStoreReqGetInfoV1_size", "size (uint32)")
F.DataStoreReqGetInfoV1_rootCaCert_len = ProtoField.uint32("DataStoreReqGetInfoV1_rootCaCert_len", "rootCaCert length (Buffer)")
F.DataStoreReqGetInfoV1_rootCaCert_data = ProtoField.bytes("DataStoreReqGetInfoV1_rootCaCert_data", "rootCaCert data (Buffer)")
F.DataStoreReqGetInfo = ProtoField.bytes("DataStoreReqGetInfo", "DataStoreReqGetInfo (DataStoreReqGetInfo)")
F.DataStoreReqGetInfo_url_len = ProtoField.uint16("DataStoreReqGetInfo_url_len", "url length (String)")
F.DataStoreReqGetInfo_url_data = ProtoField.string("DataStoreReqGetInfo_url_data", "url data (String)")
F.DataStoreReqGetInfo_requestHeaders_len = ProtoField.uint32("DataStoreReqGetInfo_requestHeaders_len", "requestHeaders length (uint32)")
F.DataStoreReqGetInfo_size = ProtoField.uint32("DataStoreReqGetInfo_size", "size (uint32)")
F.DataStoreReqGetInfo_rootCaCert_len = ProtoField.uint32("DataStoreReqGetInfo_rootCaCert_len", "rootCaCert length (Buffer)")
F.DataStoreReqGetInfo_rootCaCert_data = ProtoField.bytes("DataStoreReqGetInfo_rootCaCert_data", "rootCaCert data (Buffer)")
F.DataStoreReqGetInfo_dataId = ProtoField.uint64("DataStoreReqGetInfo_dataId", "dataId (uint64)")
F.DataStoreReqGetAdditionalMeta = ProtoField.bytes("DataStoreReqGetAdditionalMeta", "DataStoreReqGetAdditionalMeta (DataStoreReqGetAdditionalMeta)")
F.DataStoreReqGetAdditionalMeta_ownerId = ProtoField.uint32("DataStoreReqGetAdditionalMeta_ownerId", "ownerId (uint32)")
F.DataStoreReqGetAdditionalMeta_dataType = ProtoField.uint16("DataStoreReqGetAdditionalMeta_dataType", "dataType (uint16)")
F.DataStoreReqGetAdditionalMeta_version = ProtoField.uint16("DataStoreReqGetAdditionalMeta_version", "version (uint16)")
F.DataStoreReqGetAdditionalMeta_metaBinary_len = ProtoField.uint16("DataStoreReqGetAdditionalMeta_metaBinary_len", "metaBinary length (Buffer)")
F.DataStoreReqGetAdditionalMeta_metaBinary_data = ProtoField.bytes("DataStoreReqGetAdditionalMeta_metaBinary_data", "metaBinary data (Buffer)")
F.DataStorePreparePostParamV1 = ProtoField.bytes("DataStorePreparePostParamV1", "DataStorePreparePostParamV1 (DataStorePreparePostParamV1)")
F.DataStorePreparePostParamV1_size = ProtoField.uint32("DataStorePreparePostParamV1_size", "size (uint32)")
F.DataStorePreparePostParamV1_name_len = ProtoField.uint16("DataStorePreparePostParamV1_name_len", "name length (String)")
F.DataStorePreparePostParamV1_name_data = ProtoField.string("DataStorePreparePostParamV1_name_data", "name data (String)")
F.DataStorePreparePostParamV1_dataType = ProtoField.uint16("DataStorePreparePostParamV1_dataType", "dataType (uint16)")
F.DataStorePreparePostParamV1_metaBinary_len = ProtoField.uint16("DataStorePreparePostParamV1_metaBinary_len", "metaBinary length (Buffer)")
F.DataStorePreparePostParamV1_metaBinary_data = ProtoField.bytes("DataStorePreparePostParamV1_metaBinary_data", "metaBinary data (Buffer)")
F.DataStorePreparePostParamV1_flag = ProtoField.uint32("DataStorePreparePostParamV1_flag", "flag (uint32)")
F.DataStorePreparePostParamV1_period = ProtoField.uint16("DataStorePreparePostParamV1_period", "period (uint16)")
F.DataStorePreparePostParamV1_referDataId = ProtoField.uint32("DataStorePreparePostParamV1_referDataId", "referDataId (uint32)")
F.DataStorePreparePostParamV1_tags_len = ProtoField.uint32("DataStorePreparePostParamV1_tags_len", "tags length (uint32)")
F.DataStorePreparePostParamV1_tags_item_len = ProtoField.uint16("DataStorePreparePostParamV1_tags_item_len", "tags length (String)")
F.DataStorePreparePostParamV1_tags_item_data = ProtoField.string("DataStorePreparePostParamV1_tags_item_data", "tags data (String)")
F.DataStorePreparePostParamV1_ratingInitParams_len = ProtoField.uint32("DataStorePreparePostParamV1_ratingInitParams_len", "ratingInitParams length (uint32)")
F.DataStorePreparePostParam = ProtoField.bytes("DataStorePreparePostParam", "DataStorePreparePostParam (DataStorePreparePostParam)")
F.DataStorePreparePostParam_size = ProtoField.uint32("DataStorePreparePostParam_size", "size (uint32)")
F.DataStorePreparePostParam_name_len = ProtoField.uint16("DataStorePreparePostParam_name_len", "name length (String)")
F.DataStorePreparePostParam_name_data = ProtoField.string("DataStorePreparePostParam_name_data", "name data (String)")
F.DataStorePreparePostParam_dataType = ProtoField.uint16("DataStorePreparePostParam_dataType", "dataType (uint16)")
F.DataStorePreparePostParam_metaBinary_len = ProtoField.uint16("DataStorePreparePostParam_metaBinary_len", "metaBinary length (Buffer)")
F.DataStorePreparePostParam_metaBinary_data = ProtoField.bytes("DataStorePreparePostParam_metaBinary_data", "metaBinary data (Buffer)")
F.DataStorePreparePostParam_flag = ProtoField.uint32("DataStorePreparePostParam_flag", "flag (uint32)")
F.DataStorePreparePostParam_period = ProtoField.uint16("DataStorePreparePostParam_period", "period (uint16)")
F.DataStorePreparePostParam_referDataId = ProtoField.uint32("DataStorePreparePostParam_referDataId", "referDataId (uint32)")
F.DataStorePreparePostParam_tags_len = ProtoField.uint32("DataStorePreparePostParam_tags_len", "tags length (uint32)")
F.DataStorePreparePostParam_tags_item_len = ProtoField.uint16("DataStorePreparePostParam_tags_item_len", "tags length (String)")
F.DataStorePreparePostParam_tags_item_data = ProtoField.string("DataStorePreparePostParam_tags_item_data", "tags data (String)")
F.DataStorePreparePostParam_ratingInitParams_len = ProtoField.uint32("DataStorePreparePostParam_ratingInitParams_len", "ratingInitParams length (uint32)")
F.DataStorePreparePostParam_extraData_len = ProtoField.uint32("DataStorePreparePostParam_extraData_len", "extraData length (uint32)")
F.DataStorePreparePostParam_extraData_item_len = ProtoField.uint16("DataStorePreparePostParam_extraData_item_len", "extraData length (String)")
F.DataStorePreparePostParam_extraData_item_data = ProtoField.string("DataStorePreparePostParam_extraData_item_data", "extraData data (String)")
F.DataStoreReqPostInfoV1 = ProtoField.bytes("DataStoreReqPostInfoV1", "DataStoreReqPostInfoV1 (DataStoreReqPostInfoV1)")
F.DataStoreReqPostInfoV1_dataId = ProtoField.uint32("DataStoreReqPostInfoV1_dataId", "dataId (uint32)")
F.DataStoreReqPostInfoV1_url_len = ProtoField.uint16("DataStoreReqPostInfoV1_url_len", "url length (String)")
F.DataStoreReqPostInfoV1_url_data = ProtoField.string("DataStoreReqPostInfoV1_url_data", "url data (String)")
F.DataStoreReqPostInfoV1_requestHeaders_len = ProtoField.uint32("DataStoreReqPostInfoV1_requestHeaders_len", "requestHeaders length (uint32)")
F.DataStoreReqPostInfoV1_formFields_len = ProtoField.uint32("DataStoreReqPostInfoV1_formFields_len", "formFields length (uint32)")
F.DataStoreReqPostInfoV1_rootCaCert_len = ProtoField.uint32("DataStoreReqPostInfoV1_rootCaCert_len", "rootCaCert length (Buffer)")
F.DataStoreReqPostInfoV1_rootCaCert_data = ProtoField.bytes("DataStoreReqPostInfoV1_rootCaCert_data", "rootCaCert data (Buffer)")
F.DataStoreReqPostInfo = ProtoField.bytes("DataStoreReqPostInfo", "DataStoreReqPostInfo (DataStoreReqPostInfo)")
F.DataStoreReqPostInfo_dataId = ProtoField.uint64("DataStoreReqPostInfo_dataId", "dataId (uint64)")
F.DataStoreReqPostInfo_url_len = ProtoField.uint16("DataStoreReqPostInfo_url_len", "url length (String)")
F.DataStoreReqPostInfo_url_data = ProtoField.string("DataStoreReqPostInfo_url_data", "url data (String)")
F.DataStoreReqPostInfo_requestHeaders_len = ProtoField.uint32("DataStoreReqPostInfo_requestHeaders_len", "requestHeaders length (uint32)")
F.DataStoreReqPostInfo_formFields_len = ProtoField.uint32("DataStoreReqPostInfo_formFields_len", "formFields length (uint32)")
F.DataStoreReqPostInfo_rootCaCert_len = ProtoField.uint32("DataStoreReqPostInfo_rootCaCert_len", "rootCaCert length (Buffer)")
F.DataStoreReqPostInfo_rootCaCert_data = ProtoField.bytes("DataStoreReqPostInfo_rootCaCert_data", "rootCaCert data (Buffer)")
F.DataStoreCompletePostParamV1 = ProtoField.bytes("DataStoreCompletePostParamV1", "DataStoreCompletePostParamV1 (DataStoreCompletePostParamV1)")
F.DataStoreCompletePostParamV1_dataId = ProtoField.uint32("DataStoreCompletePostParamV1_dataId", "dataId (uint32)")
F.DataStoreCompletePostParamV1_isSuccess = ProtoField.bool("DataStoreCompletePostParamV1_isSuccess", "isSuccess (bool)")
F.DataStoreCompletePostParam = ProtoField.bytes("DataStoreCompletePostParam", "DataStoreCompletePostParam (DataStoreCompletePostParam)")
F.DataStoreCompletePostParam_dataId = ProtoField.uint64("DataStoreCompletePostParam_dataId", "dataId (uint64)")
F.DataStoreCompletePostParam_isSuccess = ProtoField.bool("DataStoreCompletePostParam_isSuccess", "isSuccess (bool)")
F.DataStoreDeleteParam = ProtoField.bytes("DataStoreDeleteParam", "DataStoreDeleteParam (DataStoreDeleteParam)")
F.DataStoreDeleteParam_dataId = ProtoField.uint64("DataStoreDeleteParam_dataId", "dataId (uint64)")
F.DataStoreDeleteParam_updatePassword = ProtoField.uint64("DataStoreDeleteParam_updatePassword", "updatePassword (uint64)")
F.DataStoreChangeMetaParamV1 = ProtoField.bytes("DataStoreChangeMetaParamV1", "DataStoreChangeMetaParamV1 (DataStoreChangeMetaParamV1)")
F.DataStoreChangeMetaParamV1_dataId = ProtoField.uint64("DataStoreChangeMetaParamV1_dataId", "dataId (uint64)")
F.DataStoreChangeMetaParamV1_modifiesFlag = ProtoField.uint32("DataStoreChangeMetaParamV1_modifiesFlag", "modifiesFlag (uint32)")
F.DataStoreChangeMetaParamV1_name_len = ProtoField.uint16("DataStoreChangeMetaParamV1_name_len", "name length (String)")
F.DataStoreChangeMetaParamV1_name_data = ProtoField.string("DataStoreChangeMetaParamV1_name_data", "name data (String)")
F.DataStoreChangeMetaParamV1_period = ProtoField.uint16("DataStoreChangeMetaParamV1_period", "period (uint16)")
F.DataStoreChangeMetaParamV1_metaBinary_len = ProtoField.uint16("DataStoreChangeMetaParamV1_metaBinary_len", "metaBinary length (Buffer)")
F.DataStoreChangeMetaParamV1_metaBinary_data = ProtoField.bytes("DataStoreChangeMetaParamV1_metaBinary_data", "metaBinary data (Buffer)")
F.DataStoreChangeMetaParamV1_tags_len = ProtoField.uint32("DataStoreChangeMetaParamV1_tags_len", "tags length (uint32)")
F.DataStoreChangeMetaParamV1_tags_item_len = ProtoField.uint16("DataStoreChangeMetaParamV1_tags_item_len", "tags length (String)")
F.DataStoreChangeMetaParamV1_tags_item_data = ProtoField.string("DataStoreChangeMetaParamV1_tags_item_data", "tags data (String)")
F.DataStoreChangeMetaParamV1_updatePassword = ProtoField.uint64("DataStoreChangeMetaParamV1_updatePassword", "updatePassword (uint64)")
F.DataStoreChangeMetaParam = ProtoField.bytes("DataStoreChangeMetaParam", "DataStoreChangeMetaParam (DataStoreChangeMetaParam)")
F.DataStoreChangeMetaParam_dataId = ProtoField.uint64("DataStoreChangeMetaParam_dataId", "dataId (uint64)")
F.DataStoreChangeMetaParam_modifiesFlag = ProtoField.uint32("DataStoreChangeMetaParam_modifiesFlag", "modifiesFlag (uint32)")
F.DataStoreChangeMetaParam_name_len = ProtoField.uint16("DataStoreChangeMetaParam_name_len", "name length (String)")
F.DataStoreChangeMetaParam_name_data = ProtoField.string("DataStoreChangeMetaParam_name_data", "name data (String)")
F.DataStoreChangeMetaParam_period = ProtoField.uint16("DataStoreChangeMetaParam_period", "period (uint16)")
F.DataStoreChangeMetaParam_metaBinary_len = ProtoField.uint16("DataStoreChangeMetaParam_metaBinary_len", "metaBinary length (Buffer)")
F.DataStoreChangeMetaParam_metaBinary_data = ProtoField.bytes("DataStoreChangeMetaParam_metaBinary_data", "metaBinary data (Buffer)")
F.DataStoreChangeMetaParam_tags_len = ProtoField.uint32("DataStoreChangeMetaParam_tags_len", "tags length (uint32)")
F.DataStoreChangeMetaParam_tags_item_len = ProtoField.uint16("DataStoreChangeMetaParam_tags_item_len", "tags length (String)")
F.DataStoreChangeMetaParam_tags_item_data = ProtoField.string("DataStoreChangeMetaParam_tags_item_data", "tags data (String)")
F.DataStoreChangeMetaParam_updatePassword = ProtoField.uint64("DataStoreChangeMetaParam_updatePassword", "updatePassword (uint64)")
F.DataStoreChangeMetaParam_referredCnt = ProtoField.uint32("DataStoreChangeMetaParam_referredCnt", "referredCnt (uint32)")
F.DataStoreChangeMetaParam_dataType = ProtoField.uint16("DataStoreChangeMetaParam_dataType", "dataType (uint16)")
F.DataStoreChangeMetaParam_status = ProtoField.uint8("DataStoreChangeMetaParam_status", "status (uint8)")
F.DataStoreGetMetaParam = ProtoField.bytes("DataStoreGetMetaParam", "DataStoreGetMetaParam (DataStoreGetMetaParam)")
F.DataStoreGetMetaParam_dataId = ProtoField.uint64("DataStoreGetMetaParam_dataId", "dataId (uint64)")
F.DataStoreGetMetaParam_resultOption = ProtoField.uint8("DataStoreGetMetaParam_resultOption", "resultOption (uint8)")
F.DataStoreGetMetaParam_accessPassword = ProtoField.uint64("DataStoreGetMetaParam_accessPassword", "accessPassword (uint64)")
F.DataStorePrepareUpdateParam = ProtoField.bytes("DataStorePrepareUpdateParam", "DataStorePrepareUpdateParam (DataStorePrepareUpdateParam)")
F.DataStorePrepareUpdateParam_dataId = ProtoField.uint64("DataStorePrepareUpdateParam_dataId", "dataId (uint64)")
F.DataStorePrepareUpdateParam_size = ProtoField.uint32("DataStorePrepareUpdateParam_size", "size (uint32)")
F.DataStorePrepareUpdateParam_updatePassword = ProtoField.uint64("DataStorePrepareUpdateParam_updatePassword", "updatePassword (uint64)")
F.DataStorePrepareUpdateParam_extraData_len = ProtoField.uint32("DataStorePrepareUpdateParam_extraData_len", "extraData length (uint32)")
F.DataStorePrepareUpdateParam_extraData_item_len = ProtoField.uint16("DataStorePrepareUpdateParam_extraData_item_len", "extraData length (String)")
F.DataStorePrepareUpdateParam_extraData_item_data = ProtoField.string("DataStorePrepareUpdateParam_extraData_item_data", "extraData data (String)")
F.DataStoreReqUpdateInfo = ProtoField.bytes("DataStoreReqUpdateInfo", "DataStoreReqUpdateInfo (DataStoreReqUpdateInfo)")
F.DataStoreReqUpdateInfo_version = ProtoField.uint32("DataStoreReqUpdateInfo_version", "version (uint32)")
F.DataStoreReqUpdateInfo_url_len = ProtoField.uint16("DataStoreReqUpdateInfo_url_len", "url length (String)")
F.DataStoreReqUpdateInfo_url_data = ProtoField.string("DataStoreReqUpdateInfo_url_data", "url data (String)")
F.DataStoreReqUpdateInfo_requestHeaders_len = ProtoField.uint32("DataStoreReqUpdateInfo_requestHeaders_len", "requestHeaders length (uint32)")
F.DataStoreReqUpdateInfo_formFields_len = ProtoField.uint32("DataStoreReqUpdateInfo_formFields_len", "formFields length (uint32)")
F.DataStoreReqUpdateInfo_rootCaCert_len = ProtoField.uint32("DataStoreReqUpdateInfo_rootCaCert_len", "rootCaCert length (Buffer)")
F.DataStoreReqUpdateInfo_rootCaCert_data = ProtoField.bytes("DataStoreReqUpdateInfo_rootCaCert_data", "rootCaCert data (Buffer)")
F.DataStoreCompleteUpdateParam = ProtoField.bytes("DataStoreCompleteUpdateParam", "DataStoreCompleteUpdateParam (DataStoreCompleteUpdateParam)")
F.DataStoreCompleteUpdateParam_dataId = ProtoField.uint64("DataStoreCompleteUpdateParam_dataId", "dataId (uint64)")
F.DataStoreCompleteUpdateParam_version = ProtoField.uint32("DataStoreCompleteUpdateParam_version", "version (uint32)")
F.DataStoreCompleteUpdateParam_isSuccess = ProtoField.bool("DataStoreCompleteUpdateParam_isSuccess", "isSuccess (bool)")
F.DataStoreSearchParam = ProtoField.bytes("DataStoreSearchParam", "DataStoreSearchParam (DataStoreSearchParam)")
F.DataStoreSearchParam_searchTarget = ProtoField.uint8("DataStoreSearchParam_searchTarget", "searchTarget (uint8)")
F.DataStoreSearchParam_ownerIds_len = ProtoField.uint32("DataStoreSearchParam_ownerIds_len", "ownerIds length (uint32)")
F.DataStoreSearchParam_ownerIds_item = ProtoField.uint32("DataStoreSearchParam_ownerIds_item", "ownerIds (uint32)")
F.DataStoreSearchParam_ownerType = ProtoField.uint8("DataStoreSearchParam_ownerType", "ownerType (uint8)")
F.DataStoreSearchParam_destinationIds_len = ProtoField.uint32("DataStoreSearchParam_destinationIds_len", "destinationIds length (uint32)")
F.DataStoreSearchParam_destinationIds_item = ProtoField.uint64("DataStoreSearchParam_destinationIds_item", "destinationIds (uint64)")
F.DataStoreSearchParam_dataType = ProtoField.uint16("DataStoreSearchParam_dataType", "dataType (uint16)")
F.DataStoreSearchParam_createdAfter = ProtoField.uint64("DataStoreSearchParam_createdAfter", "createdAfter (uint64)")
F.DataStoreSearchParam_createdBefore = ProtoField.uint64("DataStoreSearchParam_createdBefore", "createdBefore (uint64)")
F.DataStoreSearchParam_updatedAfter = ProtoField.uint64("DataStoreSearchParam_updatedAfter", "updatedAfter (uint64)")
F.DataStoreSearchParam_updatedBefore = ProtoField.uint64("DataStoreSearchParam_updatedBefore", "updatedBefore (uint64)")
F.DataStoreSearchParam_referDataId = ProtoField.uint32("DataStoreSearchParam_referDataId", "referDataId (uint32)")
F.DataStoreSearchParam_tags_len = ProtoField.uint32("DataStoreSearchParam_tags_len", "tags length (uint32)")
F.DataStoreSearchParam_tags_item_len = ProtoField.uint16("DataStoreSearchParam_tags_item_len", "tags length (String)")
F.DataStoreSearchParam_tags_item_data = ProtoField.string("DataStoreSearchParam_tags_item_data", "tags data (String)")
F.DataStoreSearchParam_resultOrderColumn = ProtoField.uint8("DataStoreSearchParam_resultOrderColumn", "resultOrderColumn (uint8)")
F.DataStoreSearchParam_resultOrder = ProtoField.uint8("DataStoreSearchParam_resultOrder", "resultOrder (uint8)")
F.DataStoreSearchParam_resultOption = ProtoField.uint8("DataStoreSearchParam_resultOption", "resultOption (uint8)")
F.DataStoreSearchParam_minimalRatingFrequency = ProtoField.uint32("DataStoreSearchParam_minimalRatingFrequency", "minimalRatingFrequency (uint32)")
F.DataStoreSearchParam_useCache = ProtoField.bool("DataStoreSearchParam_useCache", "useCache (bool)")
F.DataStoreSearchParam_totalCountEnabled = ProtoField.bool("DataStoreSearchParam_totalCountEnabled", "totalCountEnabled (bool)")
F.DataStoreSearchParam_dataTypes_len = ProtoField.uint32("DataStoreSearchParam_dataTypes_len", "dataTypes length (uint32)")
F.DataStoreSearchParam_dataTypes_item = ProtoField.uint16("DataStoreSearchParam_dataTypes_item", "dataTypes (uint16)")
F.DataStoreSearchResult = ProtoField.bytes("DataStoreSearchResult", "DataStoreSearchResult (DataStoreSearchResult)")
F.DataStoreSearchResult_totalCount = ProtoField.uint32("DataStoreSearchResult_totalCount", "totalCount (uint32)")
F.DataStoreSearchResult_result_len = ProtoField.uint32("DataStoreSearchResult_result_len", "result length (uint32)")
F.DataStoreSearchResult_totalCountType = ProtoField.uint8("DataStoreSearchResult_totalCountType", "totalCountType (uint8)")
F.DataStoreGetNotificationUrlParam = ProtoField.bytes("DataStoreGetNotificationUrlParam", "DataStoreGetNotificationUrlParam (DataStoreGetNotificationUrlParam)")
F.DataStoreGetNotificationUrlParam_previousUrl_len = ProtoField.uint16("DataStoreGetNotificationUrlParam_previousUrl_len", "previousUrl length (String)")
F.DataStoreGetNotificationUrlParam_previousUrl_data = ProtoField.string("DataStoreGetNotificationUrlParam_previousUrl_data", "previousUrl data (String)")
F.DataStoreReqGetNotificationUrlInfo = ProtoField.bytes("DataStoreReqGetNotificationUrlInfo", "DataStoreReqGetNotificationUrlInfo (DataStoreReqGetNotificationUrlInfo)")
F.DataStoreReqGetNotificationUrlInfo_url_len = ProtoField.uint16("DataStoreReqGetNotificationUrlInfo_url_len", "url length (String)")
F.DataStoreReqGetNotificationUrlInfo_url_data = ProtoField.string("DataStoreReqGetNotificationUrlInfo_url_data", "url data (String)")
F.DataStoreReqGetNotificationUrlInfo_key_len = ProtoField.uint16("DataStoreReqGetNotificationUrlInfo_key_len", "key length (String)")
F.DataStoreReqGetNotificationUrlInfo_key_data = ProtoField.string("DataStoreReqGetNotificationUrlInfo_key_data", "key data (String)")
F.DataStoreReqGetNotificationUrlInfo_query_len = ProtoField.uint16("DataStoreReqGetNotificationUrlInfo_query_len", "query length (String)")
F.DataStoreReqGetNotificationUrlInfo_query_data = ProtoField.string("DataStoreReqGetNotificationUrlInfo_query_data", "query data (String)")
F.DataStoreReqGetNotificationUrlInfo_rootCaCert_len = ProtoField.uint32("DataStoreReqGetNotificationUrlInfo_rootCaCert_len", "rootCaCert length (Buffer)")
F.DataStoreReqGetNotificationUrlInfo_rootCaCert_data = ProtoField.bytes("DataStoreReqGetNotificationUrlInfo_rootCaCert_data", "rootCaCert data (Buffer)")
F.DataStoreGetNewArrivedNotificationsParam = ProtoField.bytes("DataStoreGetNewArrivedNotificationsParam", "DataStoreGetNewArrivedNotificationsParam (DataStoreGetNewArrivedNotificationsParam)")
F.DataStoreGetNewArrivedNotificationsParam_lastNotificationId = ProtoField.uint64("DataStoreGetNewArrivedNotificationsParam_lastNotificationId", "lastNotificationId (uint64)")
F.DataStoreGetNewArrivedNotificationsParam_limit = ProtoField.uint16("DataStoreGetNewArrivedNotificationsParam_limit", "limit (uint16)")
F.DataStoreNotificationV1 = ProtoField.bytes("DataStoreNotificationV1", "DataStoreNotificationV1 (DataStoreNotificationV1)")
F.DataStoreNotificationV1_notificationId = ProtoField.uint64("DataStoreNotificationV1_notificationId", "notificationId (uint64)")
F.DataStoreNotificationV1_dataId = ProtoField.uint32("DataStoreNotificationV1_dataId", "dataId (uint32)")
F.DataStoreNotification = ProtoField.bytes("DataStoreNotification", "DataStoreNotification (DataStoreNotification)")
F.DataStoreNotification_notificationId = ProtoField.uint64("DataStoreNotification_notificationId", "notificationId (uint64)")
F.DataStoreNotification_dataId = ProtoField.uint64("DataStoreNotification_dataId", "dataId (uint64)")
F.DataStoreRateObjectParam = ProtoField.bytes("DataStoreRateObjectParam", "DataStoreRateObjectParam (DataStoreRateObjectParam)")
F.DataStoreRateObjectParam_ratingValue = ProtoField.int32("DataStoreRateObjectParam_ratingValue", "ratingValue (uint32)")
F.DataStoreRateObjectParam_accessPassword = ProtoField.uint64("DataStoreRateObjectParam_accessPassword", "accessPassword (uint64)")
F.DataStoreRatingTarget = ProtoField.bytes("DataStoreRatingTarget", "DataStoreRatingTarget (DataStoreRatingTarget)")
F.DataStoreRatingTarget_dataId = ProtoField.uint64("DataStoreRatingTarget_dataId", "dataId (uint64)")
F.DataStoreRatingTarget_slot = ProtoField.int8("DataStoreRatingTarget_slot", "slot (uint8)")
F.DataStoreGetSpecificMetaParamV1 = ProtoField.bytes("DataStoreGetSpecificMetaParamV1", "DataStoreGetSpecificMetaParamV1 (DataStoreGetSpecificMetaParamV1)")
F.DataStoreGetSpecificMetaParamV1_dataIds_len = ProtoField.uint32("DataStoreGetSpecificMetaParamV1_dataIds_len", "dataIds length (uint32)")
F.DataStoreGetSpecificMetaParamV1_dataIds_item = ProtoField.uint32("DataStoreGetSpecificMetaParamV1_dataIds_item", "dataIds (uint32)")
F.DataStoreGetSpecificMetaParam = ProtoField.bytes("DataStoreGetSpecificMetaParam", "DataStoreGetSpecificMetaParam (DataStoreGetSpecificMetaParam)")
F.DataStoreGetSpecificMetaParam_dataIds_len = ProtoField.uint32("DataStoreGetSpecificMetaParam_dataIds_len", "dataIds length (uint32)")
F.DataStoreGetSpecificMetaParam_dataIds_item = ProtoField.uint64("DataStoreGetSpecificMetaParam_dataIds_item", "dataIds (uint64)")
F.DataStoreSpecificMetaInfoV1 = ProtoField.bytes("DataStoreSpecificMetaInfoV1", "DataStoreSpecificMetaInfoV1 (DataStoreSpecificMetaInfoV1)")
F.DataStoreSpecificMetaInfoV1_dataId = ProtoField.uint32("DataStoreSpecificMetaInfoV1_dataId", "dataId (uint32)")
F.DataStoreSpecificMetaInfoV1_ownerId = ProtoField.uint32("DataStoreSpecificMetaInfoV1_ownerId", "ownerId (uint32)")
F.DataStoreSpecificMetaInfoV1_size = ProtoField.uint32("DataStoreSpecificMetaInfoV1_size", "size (uint32)")
F.DataStoreSpecificMetaInfoV1_dataType = ProtoField.uint16("DataStoreSpecificMetaInfoV1_dataType", "dataType (uint16)")
F.DataStoreSpecificMetaInfoV1_version = ProtoField.uint16("DataStoreSpecificMetaInfoV1_version", "version (uint16)")
F.DataStoreSpecificMetaInfo = ProtoField.bytes("DataStoreSpecificMetaInfo", "DataStoreSpecificMetaInfo (DataStoreSpecificMetaInfo)")
F.DataStoreSpecificMetaInfo_dataId = ProtoField.uint64("DataStoreSpecificMetaInfo_dataId", "dataId (uint64)")
F.DataStoreSpecificMetaInfo_ownerId = ProtoField.uint32("DataStoreSpecificMetaInfo_ownerId", "ownerId (uint32)")
F.DataStoreSpecificMetaInfo_size = ProtoField.uint32("DataStoreSpecificMetaInfo_size", "size (uint32)")
F.DataStoreSpecificMetaInfo_dataType = ProtoField.uint16("DataStoreSpecificMetaInfo_dataType", "dataType (uint16)")
F.DataStoreSpecificMetaInfo_version = ProtoField.uint32("DataStoreSpecificMetaInfo_version", "version (uint32)")
F.DataStoreTouchObjectParam = ProtoField.bytes("DataStoreTouchObjectParam", "DataStoreTouchObjectParam (DataStoreTouchObjectParam)")
F.DataStoreTouchObjectParam_dataId = ProtoField.uint64("DataStoreTouchObjectParam_dataId", "dataId (uint64)")
F.DataStoreTouchObjectParam_lockId = ProtoField.uint32("DataStoreTouchObjectParam_lockId", "lockId (uint32)")
F.DataStoreTouchObjectParam_accessPassword = ProtoField.uint64("DataStoreTouchObjectParam_accessPassword", "accessPassword (uint64)")
F.DataStoreRatingLog = ProtoField.bytes("DataStoreRatingLog", "DataStoreRatingLog (DataStoreRatingLog)")
F.DataStoreRatingLog_isRated = ProtoField.bool("DataStoreRatingLog_isRated", "isRated (bool)")
F.DataStoreRatingLog_pid = ProtoField.uint64("DataStoreRatingLog_pid", "pid (uint64)")
F.DataStoreRatingLog_ratingValue = ProtoField.int32("DataStoreRatingLog_ratingValue", "ratingValue (uint32)")
F.DataStoreRatingLog_lockExpirationTime = ProtoField.uint64("DataStoreRatingLog_lockExpirationTime", "lockExpirationTime (uint64)")
F.DataStorePersistenceInfo = ProtoField.bytes("DataStorePersistenceInfo", "DataStorePersistenceInfo (DataStorePersistenceInfo)")
F.DataStorePersistenceInfo_ownerId = ProtoField.uint64("DataStorePersistenceInfo_ownerId", "ownerId (uint64)")
F.DataStorePersistenceInfo_persistenceSlotId = ProtoField.uint16("DataStorePersistenceInfo_persistenceSlotId", "persistenceSlotId (uint16)")
F.DataStorePersistenceInfo_dataId = ProtoField.uint64("DataStorePersistenceInfo_dataId", "dataId (uint64)")
F.DataStorePasswordInfo = ProtoField.bytes("DataStorePasswordInfo", "DataStorePasswordInfo (DataStorePasswordInfo)")
F.DataStorePasswordInfo_dataId = ProtoField.uint64("DataStorePasswordInfo_dataId", "dataId (uint64)")
F.DataStorePasswordInfo_accessPassword = ProtoField.uint64("DataStorePasswordInfo_accessPassword", "accessPassword (uint64)")
F.DataStorePasswordInfo_updatePassword = ProtoField.uint64("DataStorePasswordInfo_updatePassword", "updatePassword (uint64)")
F.BufferQueueParam = ProtoField.bytes("BufferQueueParam", "BufferQueueParam (BufferQueueParam)")
F.BufferQueueParam_dataId = ProtoField.uint64("BufferQueueParam_dataId", "dataId (uint64)")
F.BufferQueueParam_slot = ProtoField.uint32("BufferQueueParam_slot", "slot (uint32)")
F.DataStoreSearchBalloonParam = ProtoField.bytes("DataStoreSearchBalloonParam", "DataStoreSearchBalloonParam (DataStoreSearchBalloonParam)")
F.DataStoreSearchBalloonParam_dataType = ProtoField.uint16("DataStoreSearchBalloonParam_dataType", "dataType (uint16)")
F.DataStoreSearchBalloonParam_userRank = ProtoField.uint8("DataStoreSearchBalloonParam_userRank", "userRank (uint8)")
F.DataStoreSearchBalloonParam_resultSetCount = ProtoField.uint8("DataStoreSearchBalloonParam_resultSetCount", "resultSetCount (uint8)")
F.DataStoreSearchBalloonResultSet = ProtoField.bytes("DataStoreSearchBalloonResultSet", "DataStoreSearchBalloonResultSet (DataStoreSearchBalloonResultSet)")
F.DataStoreSearchBalloonResultSet_balloons_len = ProtoField.uint32("DataStoreSearchBalloonResultSet_balloons_len", "balloons length (uint32)")
F.DataStoreFetchMyInfosParam = ProtoField.bytes("DataStoreFetchMyInfosParam", "DataStoreFetchMyInfosParam (DataStoreFetchMyInfosParam)")
F.DataStoreFetchMyInfosParam_balloonDataTypes_len = ProtoField.uint32("DataStoreFetchMyInfosParam_balloonDataTypes_len", "balloonDataTypes length (uint32)")
F.DataStoreFetchMyInfosParam_balloonDataTypes_item = ProtoField.uint16("DataStoreFetchMyInfosParam_balloonDataTypes_item", "balloonDataTypes (uint16)")
F.DataStoreFetchMyInfosParam_additionalOperation = ProtoField.uint16("DataStoreFetchMyInfosParam_additionalOperation", "additionalOperation (uint16)")
F.DataStoreFetchMyInfosResult = ProtoField.bytes("DataStoreFetchMyInfosResult", "DataStoreFetchMyInfosResult (DataStoreFetchMyInfosResult)")
F.DataStoreFetchMyInfosResult_balloons_len = ProtoField.uint32("DataStoreFetchMyInfosResult_balloons_len", "balloons length (uint32)")
F.UniqueIdInfo = ProtoField.bytes("UniqueIdInfo", "UniqueIdInfo (UniqueIdInfo)")
F.UniqueIdInfo_nexUniqueId = ProtoField.uint64("UniqueIdInfo_nexUniqueId", "nexUniqueId (uint64)")
F.UniqueIdInfo_nexUniqueIdPassword = ProtoField.uint64("UniqueIdInfo_nexUniqueIdPassword", "nexUniqueIdPassword (uint64)")
F.RankingOrderParam = ProtoField.bytes("RankingOrderParam", "RankingOrderParam (RankingOrderParam)")
F.RankingOrderParam_orderCalculation = ProtoField.uint8("RankingOrderParam_orderCalculation", "orderCalculation (uint8)")
F.RankingOrderParam_groupIndex = ProtoField.uint8("RankingOrderParam_groupIndex", "groupIndex (uint8)")
F.RankingOrderParam_groupNum = ProtoField.uint8("RankingOrderParam_groupNum", "groupNum (uint8)")
F.RankingOrderParam_timeScope = ProtoField.uint8("RankingOrderParam_timeScope", "timeScope (uint8)")
F.RankingOrderParam_offset = ProtoField.uint32("RankingOrderParam_offset", "offset (uint32)")
F.RankingOrderParam_length = ProtoField.uint8("RankingOrderParam_length", "length (uint8)")
F.RankingResult = ProtoField.bytes("RankingResult", "RankingResult (RankingResult)")
F.RankingResult_rankDataList_len = ProtoField.uint32("RankingResult_rankDataList_len", "rankDataList length (uint32)")
F.RankingResult_totalCount = ProtoField.uint32("RankingResult_totalCount", "totalCount (uint32)")
F.RankingResult_sinceTime = ProtoField.uint64("RankingResult_sinceTime", "sinceTime (uint64)")
F.RankingCachedResult = ProtoField.bytes("RankingCachedResult", "RankingCachedResult (RankingCachedResult)")
F.RankingCachedResult_createdTime = ProtoField.uint64("RankingCachedResult_createdTime", "createdTime (uint64)")
F.RankingCachedResult_expiredTime = ProtoField.uint64("RankingCachedResult_expiredTime", "expiredTime (uint64)")
F.RankingCachedResult_maxLength = ProtoField.uint8("RankingCachedResult_maxLength", "maxLength (uint8)")
F.RankingStats = ProtoField.bytes("RankingStats", "RankingStats (RankingStats)")
F.RankingStats_statsList_len = ProtoField.uint32("RankingStats_statsList_len", "statsList length (uint32)")
F.RankingStats_statsList_item = ProtoField.double("RankingStats_statsList_item", "statsList (double)")
F.RankingScoreData = ProtoField.bytes("RankingScoreData", "RankingScoreData (RankingScoreData)")
F.RankingScoreData_principalId = ProtoField.uint32("RankingScoreData_principalId", "principalId (uint32)")
F.RankingScoreData_uniqueId = ProtoField.uint64("RankingScoreData_uniqueId", "uniqueId (uint64)")
F.RankingScoreData_order = ProtoField.uint32("RankingScoreData_order", "order (uint32)")
F.RankingScoreData_category = ProtoField.uint32("RankingScoreData_category", "category (uint32)")
F.RankingScoreData_score = ProtoField.uint32("RankingScoreData_score", "score (uint32)")
F.RankingScoreData_groups_len = ProtoField.uint32("RankingScoreData_groups_len", "groups length (uint32)")
F.RankingScoreData_groups_item = ProtoField.uint8("RankingScoreData_groups_item", "groups (uint8)")
F.RankingScoreData_param = ProtoField.uint64("RankingScoreData_param", "param (uint64)")
F.RankingScoreData_commonData_len = ProtoField.uint32("RankingScoreData_commonData_len", "commonData length (Buffer)")
F.RankingScoreData_commonData_data = ProtoField.bytes("RankingScoreData_commonData_data", "commonData data (Buffer)")
F.RankingChangeAttributesParam = ProtoField.bytes("RankingChangeAttributesParam", "RankingChangeAttributesParam (RankingChangeAttributesParam)")
F.RankingChangeAttributesParam_modificationFlag = ProtoField.uint8("RankingChangeAttributesParam_modificationFlag", "modificationFlag (uint8)")
F.RankingChangeAttributesParam_groups_len = ProtoField.uint32("RankingChangeAttributesParam_groups_len", "groups length (uint32)")
F.RankingChangeAttributesParam_groups_item = ProtoField.uint8("RankingChangeAttributesParam_groups_item", "groups (uint8)")
F.RankingChangeAttributesParam_param = ProtoField.uint64("RankingChangeAttributesParam_param", "param (uint64)")
F.FriendMii = ProtoField.bytes("FriendMii", "FriendMii (FriendMii)")
F.FriendMii_Unknown = ProtoField.uint32("FriendMii_Unknown", "Unknown (uint32)")
F.FriendMii_Unknown2 = ProtoField.uint64("FriendMii_Unknown2", "Unknown2 (uint64)")
F.FriendMiiList = ProtoField.bytes("FriendMiiList", "FriendMiiList (FriendMiiList)")
F.FriendMiiList_Unknown = ProtoField.uint32("FriendMiiList_Unknown", "Unknown (uint32)")
F.FriendMiiList_Unknown2 = ProtoField.uint64("FriendMiiList_Unknown2", "Unknown2 (uint64)")
F.FriendMiiRequest = ProtoField.bytes("FriendMiiRequest", "FriendMiiRequest (FriendMiiRequest)")
F.FriendMiiRequest_Unknown = ProtoField.uint32("FriendMiiRequest_Unknown", "Unknown (uint32)")
F.FriendMiiRequest_Unknown2 = ProtoField.uint64("FriendMiiRequest_Unknown2", "Unknown2 (uint64)")
F.FriendPersistentInfo = ProtoField.bytes("FriendPersistentInfo", "FriendPersistentInfo (FriendPersistentInfo)")
F.FriendPersistentInfo_Unknown = ProtoField.uint32("FriendPersistentInfo_Unknown", "Unknown (uint32)")
F.FriendPersistentInfo_Region = ProtoField.uint8("FriendPersistentInfo_Region", "Region (uint8)")
F.FriendPersistentInfo_Country = ProtoField.uint8("FriendPersistentInfo_Country", "Country (uint8)")
F.FriendPersistentInfo_Area = ProtoField.uint8("FriendPersistentInfo_Area", "Area (uint8)")
F.FriendPersistentInfo_Language = ProtoField.uint8("FriendPersistentInfo_Language", "Language (uint8)")
F.FriendPersistentInfo_Platform = ProtoField.uint8("FriendPersistentInfo_Platform", "Platform (uint8)")
F.FriendPersistentInfo_Unknown2_len = ProtoField.uint16("FriendPersistentInfo_Unknown2_len", "Unknown2 length (String)")
F.FriendPersistentInfo_Unknown2_data = ProtoField.string("FriendPersistentInfo_Unknown2_data", "Unknown2 data (String)")
F.FriendPersistentInfo_Unknown3 = ProtoField.uint64("FriendPersistentInfo_Unknown3", "Unknown3 (uint64)")
F.FriendPersistentInfo_Unknown4 = ProtoField.uint64("FriendPersistentInfo_Unknown4", "Unknown4 (uint64)")
F.FriendPersistentInfo_Unknown5 = ProtoField.uint64("FriendPersistentInfo_Unknown5", "Unknown5 (uint64)")
F.FriendPicture = ProtoField.bytes("FriendPicture", "FriendPicture (FriendPicture)")
F.FriendPicture_Unknown = ProtoField.uint32("FriendPicture_Unknown", "Unknown (uint32)")
F.FriendPicture_Data_len = ProtoField.uint32("FriendPicture_Data_len", "Data length (Buffer)")
F.FriendPicture_Data_data = ProtoField.bytes("FriendPicture_Data_data", "Data data (Buffer)")
F.FriendPicture_Date_time = ProtoField.uint64("FriendPicture_Date_time", "Date_time (uint64)")
F.FriendPresence = ProtoField.bytes("FriendPresence", "FriendPresence (FriendPresence)")
F.FriendPresence_Unknown = ProtoField.uint32("FriendPresence_Unknown", "Unknown (uint32)")
F.FriendRelationship = ProtoField.bytes("FriendRelationship", "FriendRelationship (FriendRelationship)")
F.FriendRelationship_Unknown = ProtoField.uint32("FriendRelationship_Unknown", "Unknown (uint32)")
F.FriendRelationship_Unknown2 = ProtoField.uint64("FriendRelationship_Unknown2", "Unknown2 (uint64)")
F.FriendRelationship_Unknown3 = ProtoField.uint8("FriendRelationship_Unknown3", "Unknown3 (uint8)")
F.MyProfile = ProtoField.bytes("MyProfile", "MyProfile (MyProfile)")
F.MyProfile_Region = ProtoField.uint8("MyProfile_Region", "Region (uint8)")
F.MyProfile_Country = ProtoField.uint8("MyProfile_Country", "Country (uint8)")
F.MyProfile_Area = ProtoField.uint8("MyProfile_Area", "Area (uint8)")
F.MyProfile_Language = ProtoField.uint8("MyProfile_Language", "Language (uint8)")
F.MyProfile_Platform = ProtoField.uint8("MyProfile_Platform", "Platform (uint8)")
F.MyProfile_Unknown = ProtoField.uint64("MyProfile_Unknown", "Unknown (uint64)")
F.MyProfile_Unknown2_len = ProtoField.uint16("MyProfile_Unknown2_len", "Unknown2 length (String)")
F.MyProfile_Unknown2_data = ProtoField.string("MyProfile_Unknown2_data", "Unknown2 data (String)")
F.MyProfile_Unknown3_len = ProtoField.uint16("MyProfile_Unknown3_len", "Unknown3 length (String)")
F.MyProfile_Unknown3_data = ProtoField.string("MyProfile_Unknown3_data", "Unknown3 data (String)")
F.PlayedGame = ProtoField.bytes("PlayedGame", "PlayedGame (PlayedGame)")
F.PlayedGame_Date_time = ProtoField.uint64("PlayedGame_Date_time", "Date_time (uint64)")
F.RVConnectionData = ProtoField.bytes("RVConnectionData", "RVConnectionData (RVConnectionData)")
F.RVConnectionData_m_urlRegularProtocols_len = ProtoField.uint16("RVConnectionData_m_urlRegularProtocols_len", "m_urlRegularProtocols length (String)")
F.RVConnectionData_m_urlRegularProtocols_data = ProtoField.string("RVConnectionData_m_urlRegularProtocols_data", "m_urlRegularProtocols data (String)")
F.RVConnectionData_m_lstSpecialProtocols_len = ProtoField.uint32("RVConnectionData_m_lstSpecialProtocols_len", "m_lstSpecialProtocols length (uint32)")
F.RVConnectionData_m_lstSpecialProtocols_item = ProtoField.uint8("RVConnectionData_m_lstSpecialProtocols_item", "m_lstSpecialProtocols (uint8)")
F.RVConnectionData_m_urlSpecialProtocols_len = ProtoField.uint16("RVConnectionData_m_urlSpecialProtocols_len", "m_urlSpecialProtocols length (String)")
F.RVConnectionData_m_urlSpecialProtocols_data = ProtoField.string("RVConnectionData_m_urlSpecialProtocols_data", "m_urlSpecialProtocols data (String)")
F.NintendoNotificationEvent = ProtoField.bytes("NintendoNotificationEvent", "NintendoNotificationEvent (NintendoNotificationEvent)")
F.NintendoNotificationEvent_m_uiType = ProtoField.uint32("NintendoNotificationEvent_m_uiType", "m_uiType (uint32)")
F.NintendoNotificationEvent_m_pidSender = ProtoField.uint32("NintendoNotificationEvent_m_pidSender", "m_pidSender (uint32)")
F.NintendoNotificationEvent_m_dataholder_data_bytes = ProtoField.bytes("NintendoNotificationEvent_m_dataholder_data_bytes", "m_dataholder data bytes (bytes)")
F.NintendoNotificationEvent_m_dataholder_type_name_len = ProtoField.uint16("NintendoNotificationEvent_m_dataholder_type_name_len", "m_dataholder_type_name length (String)")
F.NintendoNotificationEvent_m_dataholder_type_name_data = ProtoField.string("NintendoNotificationEvent_m_dataholder_type_name_data", "m_dataholder_type_name data (String)")
F.NintendoNotificationEvent_m_dataholder_len_plus_four = ProtoField.uint32("NintendoNotificationEvent_m_dataholder_len_plus_four", "m_dataholder_len_plus_four (uint32)")
F.NintendoNotificationEvent_m_dataholder_data_len = ProtoField.uint32("NintendoNotificationEvent_m_dataholder_data_len", "m_dataholder_data_len (uint32)")
F.NintendoNotificationEventGeneral = ProtoField.bytes("NintendoNotificationEventGeneral", "NintendoNotificationEventGeneral (NintendoNotificationEventGeneral)")
F.NintendoNotificationEventGeneral_m_u32Param = ProtoField.uint32("NintendoNotificationEventGeneral_m_u32Param", "m_u32Param (uint32)")
F.NintendoNotificationEventGeneral_m_u64Param1 = ProtoField.uint64("NintendoNotificationEventGeneral_m_u64Param1", "m_u64Param1 (uint64)")
F.NintendoNotificationEventGeneral_m_u64Param2 = ProtoField.uint64("NintendoNotificationEventGeneral_m_u64Param2", "m_u64Param2 (uint64)")
F.NintendoNotificationEventGeneral_m_strParam_len = ProtoField.uint16("NintendoNotificationEventGeneral_m_strParam_len", "m_strParam length (String)")
F.NintendoNotificationEventGeneral_m_strParam_data = ProtoField.string("NintendoNotificationEventGeneral_m_strParam_data", "m_strParam data (String)")
F.NintendoNotificationEventProfile = ProtoField.bytes("NintendoNotificationEventProfile", "NintendoNotificationEventProfile (NintendoNotificationEventProfile)")
F.NintendoNotificationEventProfile_m_region = ProtoField.uint8("NintendoNotificationEventProfile_m_region", "m_region (uint8)")
F.NintendoNotificationEventProfile_m_country = ProtoField.uint8("NintendoNotificationEventProfile_m_country", "m_country (uint8)")
F.NintendoNotificationEventProfile_m_area = ProtoField.uint8("NintendoNotificationEventProfile_m_area", "m_area (uint8)")
F.NintendoNotificationEventProfile_m_language = ProtoField.uint8("NintendoNotificationEventProfile_m_language", "m_language (uint8)")
F.NintendoNotificationEventProfile_m_platform = ProtoField.uint8("NintendoNotificationEventProfile_m_platform", "m_platform (uint8)")
F.BlacklistedPrincipal = ProtoField.bytes("BlacklistedPrincipal", "BlacklistedPrincipal (BlacklistedPrincipal)")
F.BlacklistedPrincipal_Blacklisted_since = ProtoField.uint64("BlacklistedPrincipal_Blacklisted_since", "Blacklisted_since (uint64)")
F.FriendInfo = ProtoField.bytes("FriendInfo", "FriendInfo (FriendInfo)")
F.FriendInfo_Became_friend = ProtoField.uint64("FriendInfo_Became_friend", "Became_friend (uint64)")
F.FriendInfo_Last_online = ProtoField.uint64("FriendInfo_Last_online", "Last_online (uint64)")
F.FriendInfo_Unknown = ProtoField.uint64("FriendInfo_Unknown", "Unknown (uint64)")
F.FriendRequest = ProtoField.bytes("FriendRequest", "FriendRequest (FriendRequest)")
F.FriendRequest_Sent_on = ProtoField.uint64("FriendRequest_Sent_on", "Sent_on (uint64)")
F.PersistentNotification = ProtoField.bytes("PersistentNotification", "PersistentNotification (PersistentNotification)")
F.PersistentNotification_Unknown = ProtoField.uint64("PersistentNotification_Unknown", "Unknown (uint64)")
F.PersistentNotification_Unknown2 = ProtoField.uint32("PersistentNotification_Unknown2", "Unknown2 (uint32)")
F.PersistentNotification_Unknown3 = ProtoField.uint32("PersistentNotification_Unknown3", "Unknown3 (uint32)")
F.PersistentNotification_Unknown4 = ProtoField.uint32("PersistentNotification_Unknown4", "Unknown4 (uint32)")
F.PersistentNotification_Unknown5_len = ProtoField.uint16("PersistentNotification_Unknown5_len", "Unknown5 length (String)")
F.PersistentNotification_Unknown5_data = ProtoField.string("PersistentNotification_Unknown5_data", "Unknown5 data (String)")
F.PrincipalPreference = ProtoField.bytes("PrincipalPreference", "PrincipalPreference (PrincipalPreference)")
F.PrincipalPreference_Unknown = ProtoField.bool("PrincipalPreference_Unknown", "Unknown (bool)")
F.PrincipalPreference_Unknown2 = ProtoField.bool("PrincipalPreference_Unknown2", "Unknown2 (bool)")
F.PrincipalPreference_Unknown3 = ProtoField.bool("PrincipalPreference_Unknown3", "Unknown3 (bool)")
F.PrincipalRequestBlockSetting = ProtoField.bytes("PrincipalRequestBlockSetting", "PrincipalRequestBlockSetting (PrincipalRequestBlockSetting)")
F.PrincipalRequestBlockSetting_Unknown = ProtoField.uint32("PrincipalRequestBlockSetting_Unknown", "Unknown (uint32)")
F.PrincipalRequestBlockSetting_Unknown2 = ProtoField.bool("PrincipalRequestBlockSetting_Unknown2", "Unknown2 (bool)")
F.FriendData = ProtoField.bytes("FriendData", "FriendData (FriendData)")
F.FriendData_m_pid = ProtoField.uint32("FriendData_m_pid", "m_pid (uint32)")
F.FriendData_m_strName_len = ProtoField.uint16("FriendData_m_strName_len", "m_strName length (String)")
F.FriendData_m_strName_data = ProtoField.string("FriendData_m_strName_data", "m_strName data (String)")
F.FriendData_m_byRelationship = ProtoField.uint8("FriendData_m_byRelationship", "m_byRelationship (uint8)")
F.FriendData_m_uiDetails = ProtoField.uint32("FriendData_m_uiDetails", "m_uiDetails (uint32)")
F.FriendData_m_strStatus_len = ProtoField.uint16("FriendData_m_strStatus_len", "m_strStatus length (String)")
F.FriendData_m_strStatus_data = ProtoField.string("FriendData_m_strStatus_data", "m_strStatus data (String)")
F.RelationshipData = ProtoField.bytes("RelationshipData", "RelationshipData (RelationshipData)")
F.RelationshipData_m_pid = ProtoField.uint32("RelationshipData_m_pid", "m_pid (uint32)")
F.RelationshipData_m_strName_len = ProtoField.uint16("RelationshipData_m_strName_len", "m_strName length (String)")
F.RelationshipData_m_strName_data = ProtoField.string("RelationshipData_m_strName_data", "m_strName data (String)")
F.RelationshipData_m_byRelationship = ProtoField.uint8("RelationshipData_m_byRelationship", "m_byRelationship (uint8)")
F.RelationshipData_m_uiDetails = ProtoField.uint32("RelationshipData_m_uiDetails", "m_uiDetails (uint32)")
F.RelationshipData_m_byStatus = ProtoField.uint8("RelationshipData_m_byStatus", "m_byStatus (uint8)")
F.Match_Making_RegisterGathering_anyGathering_data_bytes = ProtoField.bytes("Match_Making_RegisterGathering_anyGathering_data_bytes", "anyGathering data bytes (bytes)")
F.Match_Making_RegisterGathering_anyGathering_type_name_len = ProtoField.uint16("Match_Making_RegisterGathering_anyGathering_type_name_len", "anyGathering_type_name length (String)")
F.Match_Making_RegisterGathering_anyGathering_type_name_data = ProtoField.string("Match_Making_RegisterGathering_anyGathering_type_name_data", "anyGathering_type_name data (String)")
F.Match_Making_RegisterGathering_anyGathering_len_plus_four = ProtoField.uint32("Match_Making_RegisterGathering_anyGathering_len_plus_four", "anyGathering_len_plus_four (uint32)")
F.Match_Making_RegisterGathering_anyGathering_data_len = ProtoField.uint32("Match_Making_RegisterGathering_anyGathering_data_len", "anyGathering_data_len (uint32)")
F.Match_Making_RegisterGathering_retval = ProtoField.uint32("Match_Making_RegisterGathering_retval", "retval (uint32)")
F.Match_Making_UnregisterGathering_idGathering = ProtoField.uint32("Match_Making_UnregisterGathering_idGathering", "idGathering (uint32)")
F.Match_Making_UnregisterGathering_retval = ProtoField.bool("Match_Making_UnregisterGathering_retval", "retval (bool)")
F.Match_Making_UnregisterGatherings_lstGatherings_len = ProtoField.uint32("Match_Making_UnregisterGatherings_lstGatherings_len", "lstGatherings length (uint32)")
F.Match_Making_UnregisterGatherings_lstGatherings_item = ProtoField.uint32("Match_Making_UnregisterGatherings_lstGatherings_item", "lstGatherings (uint32)")
F.Match_Making_UnregisterGatherings_retval = ProtoField.bool("Match_Making_UnregisterGatherings_retval", "retval (bool)")
F.Match_Making_UpdateGathering_anyGathering_data_bytes = ProtoField.bytes("Match_Making_UpdateGathering_anyGathering_data_bytes", "anyGathering data bytes (bytes)")
F.Match_Making_UpdateGathering_anyGathering_type_name_len = ProtoField.uint16("Match_Making_UpdateGathering_anyGathering_type_name_len", "anyGathering_type_name length (String)")
F.Match_Making_UpdateGathering_anyGathering_type_name_data = ProtoField.string("Match_Making_UpdateGathering_anyGathering_type_name_data", "anyGathering_type_name data (String)")
F.Match_Making_UpdateGathering_anyGathering_len_plus_four = ProtoField.uint32("Match_Making_UpdateGathering_anyGathering_len_plus_four", "anyGathering_len_plus_four (uint32)")
F.Match_Making_UpdateGathering_anyGathering_data_len = ProtoField.uint32("Match_Making_UpdateGathering_anyGathering_data_len", "anyGathering_data_len (uint32)")
F.Match_Making_UpdateGathering_retval = ProtoField.bool("Match_Making_UpdateGathering_retval", "retval (bool)")
F.Match_Making_Invite_idGathering = ProtoField.uint32("Match_Making_Invite_idGathering", "idGathering (uint32)")
F.Match_Making_Invite_lstPrincipals_len = ProtoField.uint32("Match_Making_Invite_lstPrincipals_len", "lstPrincipals length (uint32)")
F.Match_Making_Invite_lstPrincipals_item = ProtoField.uint32("Match_Making_Invite_lstPrincipals_item", "lstPrincipals (uint32)")
F.Match_Making_Invite_strMessage_len = ProtoField.uint16("Match_Making_Invite_strMessage_len", "strMessage length (String)")
F.Match_Making_Invite_strMessage_data = ProtoField.string("Match_Making_Invite_strMessage_data", "strMessage data (String)")
F.Match_Making_Invite_retval = ProtoField.bool("Match_Making_Invite_retval", "retval (bool)")
F.Match_Making_AcceptInvitation_idGathering = ProtoField.uint32("Match_Making_AcceptInvitation_idGathering", "idGathering (uint32)")
F.Match_Making_AcceptInvitation_strMessage_len = ProtoField.uint16("Match_Making_AcceptInvitation_strMessage_len", "strMessage length (String)")
F.Match_Making_AcceptInvitation_strMessage_data = ProtoField.string("Match_Making_AcceptInvitation_strMessage_data", "strMessage data (String)")
F.Match_Making_AcceptInvitation_retval = ProtoField.bool("Match_Making_AcceptInvitation_retval", "retval (bool)")
F.Match_Making_DeclineInvitation_idGathering = ProtoField.uint32("Match_Making_DeclineInvitation_idGathering", "idGathering (uint32)")
F.Match_Making_DeclineInvitation_strMessage_len = ProtoField.uint16("Match_Making_DeclineInvitation_strMessage_len", "strMessage length (String)")
F.Match_Making_DeclineInvitation_strMessage_data = ProtoField.string("Match_Making_DeclineInvitation_strMessage_data", "strMessage data (String)")
F.Match_Making_DeclineInvitation_retval = ProtoField.bool("Match_Making_DeclineInvitation_retval", "retval (bool)")
F.Match_Making_CancelInvitation_idGathering = ProtoField.uint32("Match_Making_CancelInvitation_idGathering", "idGathering (uint32)")
F.Match_Making_CancelInvitation_lstPrincipals_len = ProtoField.uint32("Match_Making_CancelInvitation_lstPrincipals_len", "lstPrincipals length (uint32)")
F.Match_Making_CancelInvitation_lstPrincipals_item = ProtoField.uint32("Match_Making_CancelInvitation_lstPrincipals_item", "lstPrincipals (uint32)")
F.Match_Making_CancelInvitation_strMessage_len = ProtoField.uint16("Match_Making_CancelInvitation_strMessage_len", "strMessage length (String)")
F.Match_Making_CancelInvitation_strMessage_data = ProtoField.string("Match_Making_CancelInvitation_strMessage_data", "strMessage data (String)")
F.Match_Making_CancelInvitation_retval = ProtoField.bool("Match_Making_CancelInvitation_retval", "retval (bool)")
F.Match_Making_GetInvitationsSent_idGathering = ProtoField.uint32("Match_Making_GetInvitationsSent_idGathering", "idGathering (uint32)")
F.Match_Making_GetInvitationsSent_lstInvitations_len = ProtoField.uint32("Match_Making_GetInvitationsSent_lstInvitations_len", "lstInvitations length (uint32)")
F.Match_Making_GetInvitationsReceived_lstInvitations_len = ProtoField.uint32("Match_Making_GetInvitationsReceived_lstInvitations_len", "lstInvitations length (uint32)")
F.Match_Making_Participate_idGathering = ProtoField.uint32("Match_Making_Participate_idGathering", "idGathering (uint32)")
F.Match_Making_Participate_strMessage_len = ProtoField.uint16("Match_Making_Participate_strMessage_len", "strMessage length (String)")
F.Match_Making_Participate_strMessage_data = ProtoField.string("Match_Making_Participate_strMessage_data", "strMessage data (String)")
F.Match_Making_Participate_retval = ProtoField.bool("Match_Making_Participate_retval", "retval (bool)")
F.Match_Making_CancelParticipation_idGathering = ProtoField.uint32("Match_Making_CancelParticipation_idGathering", "idGathering (uint32)")
F.Match_Making_CancelParticipation_strMessage_len = ProtoField.uint16("Match_Making_CancelParticipation_strMessage_len", "strMessage length (String)")
F.Match_Making_CancelParticipation_strMessage_data = ProtoField.string("Match_Making_CancelParticipation_strMessage_data", "strMessage data (String)")
F.Match_Making_CancelParticipation_retval = ProtoField.bool("Match_Making_CancelParticipation_retval", "retval (bool)")
F.Match_Making_GetParticipants_idGathering = ProtoField.uint32("Match_Making_GetParticipants_idGathering", "idGathering (uint32)")
F.Match_Making_GetParticipants_lstParticipants_len = ProtoField.uint32("Match_Making_GetParticipants_lstParticipants_len", "lstParticipants length (uint32)")
F.Match_Making_GetParticipants_lstParticipants_item = ProtoField.uint32("Match_Making_GetParticipants_lstParticipants_item", "lstParticipants (uint32)")
F.Match_Making_AddParticipants_idGathering = ProtoField.uint32("Match_Making_AddParticipants_idGathering", "idGathering (uint32)")
F.Match_Making_AddParticipants_lstParticipants_len = ProtoField.uint32("Match_Making_AddParticipants_lstParticipants_len", "lstParticipants length (uint32)")
F.Match_Making_AddParticipants_lstParticipants_item = ProtoField.uint32("Match_Making_AddParticipants_lstParticipants_item", "lstParticipants (uint32)")
F.Match_Making_AddParticipants_strMessage_len = ProtoField.uint16("Match_Making_AddParticipants_strMessage_len", "strMessage length (String)")
F.Match_Making_AddParticipants_strMessage_data = ProtoField.string("Match_Making_AddParticipants_strMessage_data", "strMessage data (String)")
F.Match_Making_AddParticipants_retval = ProtoField.bool("Match_Making_AddParticipants_retval", "retval (bool)")
F.Match_Making_GetDetailedParticipants_idGathering = ProtoField.uint32("Match_Making_GetDetailedParticipants_idGathering", "idGathering (uint32)")
F.Match_Making_GetParticipantsURLs_idGathering = ProtoField.uint32("Match_Making_GetParticipantsURLs_idGathering", "idGathering (uint32)")
F.Match_Making_GetParticipantsURLs_lstStationURL_len = ProtoField.uint32("Match_Making_GetParticipantsURLs_lstStationURL_len", "lstStationURL length (uint32)")
F.Match_Making_GetParticipantsURLs_lstStationURL_item_len = ProtoField.uint16("Match_Making_GetParticipantsURLs_lstStationURL_item_len", "lstStationURL length (String)")
F.Match_Making_GetParticipantsURLs_lstStationURL_item_data = ProtoField.string("Match_Making_GetParticipantsURLs_lstStationURL_item_data", "lstStationURL data (String)")
F.Match_Making_FindByType_strType_len = ProtoField.uint16("Match_Making_FindByType_strType_len", "strType length (String)")
F.Match_Making_FindByType_strType_data = ProtoField.string("Match_Making_FindByType_strType_data", "strType data (String)")
F.Match_Making_FindByType_lstGathering_len = ProtoField.uint32("Match_Making_FindByType_lstGathering_len", "lstGathering length (uint32)")
F.Match_Making_FindByType_lstGathering_item_data_bytes = ProtoField.bytes("Match_Making_FindByType_lstGathering_item_data_bytes", "lstGathering data bytes (bytes)")
F.Match_Making_FindByType_lstGathering_item_type_name_len = ProtoField.uint16("Match_Making_FindByType_lstGathering_item_type_name_len", "lstGathering_type_name length (String)")
F.Match_Making_FindByType_lstGathering_item_type_name_data = ProtoField.string("Match_Making_FindByType_lstGathering_item_type_name_data", "lstGathering_type_name data (String)")
F.Match_Making_FindByType_lstGathering_item_len_plus_four = ProtoField.uint32("Match_Making_FindByType_lstGathering_item_len_plus_four", "lstGathering_len_plus_four (uint32)")
F.Match_Making_FindByType_lstGathering_item_data_len = ProtoField.uint32("Match_Making_FindByType_lstGathering_item_data_len", "lstGathering_data_len (uint32)")
F.Match_Making_FindByDescription_strDescription_len = ProtoField.uint16("Match_Making_FindByDescription_strDescription_len", "strDescription length (String)")
F.Match_Making_FindByDescription_strDescription_data = ProtoField.string("Match_Making_FindByDescription_strDescription_data", "strDescription data (String)")
F.Match_Making_FindByDescription_lstGathering_len = ProtoField.uint32("Match_Making_FindByDescription_lstGathering_len", "lstGathering length (uint32)")
F.Match_Making_FindByDescription_lstGathering_item_data_bytes = ProtoField.bytes("Match_Making_FindByDescription_lstGathering_item_data_bytes", "lstGathering data bytes (bytes)")
F.Match_Making_FindByDescription_lstGathering_item_type_name_len = ProtoField.uint16("Match_Making_FindByDescription_lstGathering_item_type_name_len", "lstGathering_type_name length (String)")
F.Match_Making_FindByDescription_lstGathering_item_type_name_data = ProtoField.string("Match_Making_FindByDescription_lstGathering_item_type_name_data", "lstGathering_type_name data (String)")
F.Match_Making_FindByDescription_lstGathering_item_len_plus_four = ProtoField.uint32("Match_Making_FindByDescription_lstGathering_item_len_plus_four", "lstGathering_len_plus_four (uint32)")
F.Match_Making_FindByDescription_lstGathering_item_data_len = ProtoField.uint32("Match_Making_FindByDescription_lstGathering_item_data_len", "lstGathering_data_len (uint32)")
F.Match_Making_FindByDescriptionRegex_strDescriptionRegex_len = ProtoField.uint16("Match_Making_FindByDescriptionRegex_strDescriptionRegex_len", "strDescriptionRegex length (String)")
F.Match_Making_FindByDescriptionRegex_strDescriptionRegex_data = ProtoField.string("Match_Making_FindByDescriptionRegex_strDescriptionRegex_data", "strDescriptionRegex data (String)")
F.Match_Making_FindByDescriptionRegex_lstGathering_len = ProtoField.uint32("Match_Making_FindByDescriptionRegex_lstGathering_len", "lstGathering length (uint32)")
F.Match_Making_FindByDescriptionRegex_lstGathering_item_data_bytes = ProtoField.bytes("Match_Making_FindByDescriptionRegex_lstGathering_item_data_bytes", "lstGathering data bytes (bytes)")
F.Match_Making_FindByDescriptionRegex_lstGathering_item_type_name_len = ProtoField.uint16("Match_Making_FindByDescriptionRegex_lstGathering_item_type_name_len", "lstGathering_type_name length (String)")
F.Match_Making_FindByDescriptionRegex_lstGathering_item_type_name_data = ProtoField.string("Match_Making_FindByDescriptionRegex_lstGathering_item_type_name_data", "lstGathering_type_name data (String)")
F.Match_Making_FindByDescriptionRegex_lstGathering_item_len_plus_four = ProtoField.uint32("Match_Making_FindByDescriptionRegex_lstGathering_item_len_plus_four", "lstGathering_len_plus_four (uint32)")
F.Match_Making_FindByDescriptionRegex_lstGathering_item_data_len = ProtoField.uint32("Match_Making_FindByDescriptionRegex_lstGathering_item_data_len", "lstGathering_data_len (uint32)")
F.Match_Making_FindByID_lstID_len = ProtoField.uint32("Match_Making_FindByID_lstID_len", "lstID length (uint32)")
F.Match_Making_FindByID_lstID_item = ProtoField.uint32("Match_Making_FindByID_lstID_item", "lstID (uint32)")
F.Match_Making_FindByID_lstGathering_len = ProtoField.uint32("Match_Making_FindByID_lstGathering_len", "lstGathering length (uint32)")
F.Match_Making_FindByID_lstGathering_item_data_bytes = ProtoField.bytes("Match_Making_FindByID_lstGathering_item_data_bytes", "lstGathering data bytes (bytes)")
F.Match_Making_FindByID_lstGathering_item_type_name_len = ProtoField.uint16("Match_Making_FindByID_lstGathering_item_type_name_len", "lstGathering_type_name length (String)")
F.Match_Making_FindByID_lstGathering_item_type_name_data = ProtoField.string("Match_Making_FindByID_lstGathering_item_type_name_data", "lstGathering_type_name data (String)")
F.Match_Making_FindByID_lstGathering_item_len_plus_four = ProtoField.uint32("Match_Making_FindByID_lstGathering_item_len_plus_four", "lstGathering_len_plus_four (uint32)")
F.Match_Making_FindByID_lstGathering_item_data_len = ProtoField.uint32("Match_Making_FindByID_lstGathering_item_data_len", "lstGathering_data_len (uint32)")
F.Match_Making_FindBySingleID_id = ProtoField.uint32("Match_Making_FindBySingleID_id", "id (uint32)")
F.Match_Making_FindBySingleID_bResult = ProtoField.bool("Match_Making_FindBySingleID_bResult", "bResult (bool)")
F.Match_Making_FindBySingleID_pGathering_data_bytes = ProtoField.bytes("Match_Making_FindBySingleID_pGathering_data_bytes", "pGathering data bytes (bytes)")
F.Match_Making_FindBySingleID_pGathering_type_name_len = ProtoField.uint16("Match_Making_FindBySingleID_pGathering_type_name_len", "pGathering_type_name length (String)")
F.Match_Making_FindBySingleID_pGathering_type_name_data = ProtoField.string("Match_Making_FindBySingleID_pGathering_type_name_data", "pGathering_type_name data (String)")
F.Match_Making_FindBySingleID_pGathering_len_plus_four = ProtoField.uint32("Match_Making_FindBySingleID_pGathering_len_plus_four", "pGathering_len_plus_four (uint32)")
F.Match_Making_FindBySingleID_pGathering_data_len = ProtoField.uint32("Match_Making_FindBySingleID_pGathering_data_len", "pGathering_data_len (uint32)")
F.Match_Making_FindByOwner_id = ProtoField.uint32("Match_Making_FindByOwner_id", "id (uint32)")
F.Match_Making_FindByOwner_lstGathering_len = ProtoField.uint32("Match_Making_FindByOwner_lstGathering_len", "lstGathering length (uint32)")
F.Match_Making_FindByOwner_lstGathering_item_data_bytes = ProtoField.bytes("Match_Making_FindByOwner_lstGathering_item_data_bytes", "lstGathering data bytes (bytes)")
F.Match_Making_FindByOwner_lstGathering_item_type_name_len = ProtoField.uint16("Match_Making_FindByOwner_lstGathering_item_type_name_len", "lstGathering_type_name length (String)")
F.Match_Making_FindByOwner_lstGathering_item_type_name_data = ProtoField.string("Match_Making_FindByOwner_lstGathering_item_type_name_data", "lstGathering_type_name data (String)")
F.Match_Making_FindByOwner_lstGathering_item_len_plus_four = ProtoField.uint32("Match_Making_FindByOwner_lstGathering_item_len_plus_four", "lstGathering_len_plus_four (uint32)")
F.Match_Making_FindByOwner_lstGathering_item_data_len = ProtoField.uint32("Match_Making_FindByOwner_lstGathering_item_data_len", "lstGathering_data_len (uint32)")
F.Match_Making_FindByParticipants_pid_len = ProtoField.uint32("Match_Making_FindByParticipants_pid_len", "pid length (uint32)")
F.Match_Making_FindByParticipants_pid_item = ProtoField.uint32("Match_Making_FindByParticipants_pid_item", "pid (uint32)")
F.Match_Making_FindByParticipants_lstGathering_len = ProtoField.uint32("Match_Making_FindByParticipants_lstGathering_len", "lstGathering length (uint32)")
F.Match_Making_FindByParticipants_lstGathering_item_data_bytes = ProtoField.bytes("Match_Making_FindByParticipants_lstGathering_item_data_bytes", "lstGathering data bytes (bytes)")
F.Match_Making_FindByParticipants_lstGathering_item_type_name_len = ProtoField.uint16("Match_Making_FindByParticipants_lstGathering_item_type_name_len", "lstGathering_type_name length (String)")
F.Match_Making_FindByParticipants_lstGathering_item_type_name_data = ProtoField.string("Match_Making_FindByParticipants_lstGathering_item_type_name_data", "lstGathering_type_name data (String)")
F.Match_Making_FindByParticipants_lstGathering_item_len_plus_four = ProtoField.uint32("Match_Making_FindByParticipants_lstGathering_item_len_plus_four", "lstGathering_len_plus_four (uint32)")
F.Match_Making_FindByParticipants_lstGathering_item_data_len = ProtoField.uint32("Match_Making_FindByParticipants_lstGathering_item_data_len", "lstGathering_data_len (uint32)")
F.Match_Making_FindInvitations_lstGathering_len = ProtoField.uint32("Match_Making_FindInvitations_lstGathering_len", "lstGathering length (uint32)")
F.Match_Making_FindInvitations_lstGathering_item_data_bytes = ProtoField.bytes("Match_Making_FindInvitations_lstGathering_item_data_bytes", "lstGathering data bytes (bytes)")
F.Match_Making_FindInvitations_lstGathering_item_type_name_len = ProtoField.uint16("Match_Making_FindInvitations_lstGathering_item_type_name_len", "lstGathering_type_name length (String)")
F.Match_Making_FindInvitations_lstGathering_item_type_name_data = ProtoField.string("Match_Making_FindInvitations_lstGathering_item_type_name_data", "lstGathering_type_name data (String)")
F.Match_Making_FindInvitations_lstGathering_item_len_plus_four = ProtoField.uint32("Match_Making_FindInvitations_lstGathering_item_len_plus_four", "lstGathering_len_plus_four (uint32)")
F.Match_Making_FindInvitations_lstGathering_item_data_len = ProtoField.uint32("Match_Making_FindInvitations_lstGathering_item_data_len", "lstGathering_data_len (uint32)")
F.Match_Making_FindBySQLQuery_strQuery_len = ProtoField.uint16("Match_Making_FindBySQLQuery_strQuery_len", "strQuery length (String)")
F.Match_Making_FindBySQLQuery_strQuery_data = ProtoField.string("Match_Making_FindBySQLQuery_strQuery_data", "strQuery data (String)")
F.Match_Making_FindBySQLQuery_lstGathering_len = ProtoField.uint32("Match_Making_FindBySQLQuery_lstGathering_len", "lstGathering length (uint32)")
F.Match_Making_FindBySQLQuery_lstGathering_item_data_bytes = ProtoField.bytes("Match_Making_FindBySQLQuery_lstGathering_item_data_bytes", "lstGathering data bytes (bytes)")
F.Match_Making_FindBySQLQuery_lstGathering_item_type_name_len = ProtoField.uint16("Match_Making_FindBySQLQuery_lstGathering_item_type_name_len", "lstGathering_type_name length (String)")
F.Match_Making_FindBySQLQuery_lstGathering_item_type_name_data = ProtoField.string("Match_Making_FindBySQLQuery_lstGathering_item_type_name_data", "lstGathering_type_name data (String)")
F.Match_Making_FindBySQLQuery_lstGathering_item_len_plus_four = ProtoField.uint32("Match_Making_FindBySQLQuery_lstGathering_item_len_plus_four", "lstGathering_len_plus_four (uint32)")
F.Match_Making_FindBySQLQuery_lstGathering_item_data_len = ProtoField.uint32("Match_Making_FindBySQLQuery_lstGathering_item_data_len", "lstGathering_data_len (uint32)")
F.Match_Making_LaunchSession_idGathering = ProtoField.uint32("Match_Making_LaunchSession_idGathering", "idGathering (uint32)")
F.Match_Making_LaunchSession_strURL_len = ProtoField.uint16("Match_Making_LaunchSession_strURL_len", "strURL length (String)")
F.Match_Making_LaunchSession_strURL_data = ProtoField.string("Match_Making_LaunchSession_strURL_data", "strURL data (String)")
F.Match_Making_LaunchSession_retval = ProtoField.bool("Match_Making_LaunchSession_retval", "retval (bool)")
F.Match_Making_UpdateSessionURL_idGathering = ProtoField.uint32("Match_Making_UpdateSessionURL_idGathering", "idGathering (uint32)")
F.Match_Making_UpdateSessionURL_strURL_len = ProtoField.uint16("Match_Making_UpdateSessionURL_strURL_len", "strURL length (String)")
F.Match_Making_UpdateSessionURL_strURL_data = ProtoField.string("Match_Making_UpdateSessionURL_strURL_data", "strURL data (String)")
F.Match_Making_UpdateSessionURL_retval = ProtoField.bool("Match_Making_UpdateSessionURL_retval", "retval (bool)")
F.Match_Making_GetSessionURL_idGathering = ProtoField.uint32("Match_Making_GetSessionURL_idGathering", "idGathering (uint32)")
F.Match_Making_GetSessionURL_retval = ProtoField.bool("Match_Making_GetSessionURL_retval", "retval (bool)")
F.Match_Making_GetSessionURL_strURL_len = ProtoField.uint16("Match_Making_GetSessionURL_strURL_len", "strURL length (String)")
F.Match_Making_GetSessionURL_strURL_data = ProtoField.string("Match_Making_GetSessionURL_strURL_data", "strURL data (String)")
F.Match_Making_GetState_idGathering = ProtoField.uint32("Match_Making_GetState_idGathering", "idGathering (uint32)")
F.Match_Making_GetState_retval = ProtoField.bool("Match_Making_GetState_retval", "retval (bool)")
F.Match_Making_GetState_uiState = ProtoField.uint32("Match_Making_GetState_uiState", "uiState (uint32)")
F.Match_Making_SetState_idGathering = ProtoField.uint32("Match_Making_SetState_idGathering", "idGathering (uint32)")
F.Match_Making_SetState_uiNewState = ProtoField.uint32("Match_Making_SetState_uiNewState", "uiNewState (uint32)")
F.Match_Making_SetState_retval = ProtoField.bool("Match_Making_SetState_retval", "retval (bool)")
F.Match_Making_ReportStats_idGathering = ProtoField.uint32("Match_Making_ReportStats_idGathering", "idGathering (uint32)")
F.Match_Making_ReportStats_retval = ProtoField.bool("Match_Making_ReportStats_retval", "retval (bool)")
F.Match_Making_GetStats_idGathering = ProtoField.uint32("Match_Making_GetStats_idGathering", "idGathering (uint32)")
F.Match_Making_GetStats_lstParticipants_len = ProtoField.uint32("Match_Making_GetStats_lstParticipants_len", "lstParticipants length (uint32)")
F.Match_Making_GetStats_lstParticipants_item = ProtoField.uint32("Match_Making_GetStats_lstParticipants_item", "lstParticipants (uint32)")
F.Match_Making_GetStats_lstColumns_len = ProtoField.uint32("Match_Making_GetStats_lstColumns_len", "lstColumns length (uint32)")
F.Match_Making_GetStats_lstColumns_item = ProtoField.uint8("Match_Making_GetStats_lstColumns_item", "lstColumns (uint8)")
F.Match_Making_GetStats_retval = ProtoField.bool("Match_Making_GetStats_retval", "retval (bool)")
F.Match_Making_DeleteGathering_gid = ProtoField.uint32("Match_Making_DeleteGathering_gid", "gid (uint32)")
F.Match_Making_DeleteGathering_retval = ProtoField.bool("Match_Making_DeleteGathering_retval", "retval (bool)")
F.Match_Making_GetPendingDeletions_uiReason = ProtoField.uint32("Match_Making_GetPendingDeletions_uiReason", "uiReason (uint32)")
F.Match_Making_GetPendingDeletions_retval = ProtoField.bool("Match_Making_GetPendingDeletions_retval", "retval (bool)")
F.Match_Making_DeleteFromDeletions_lstDeletions_len = ProtoField.uint32("Match_Making_DeleteFromDeletions_lstDeletions_len", "lstDeletions length (uint32)")
F.Match_Making_DeleteFromDeletions_lstDeletions_item = ProtoField.uint32("Match_Making_DeleteFromDeletions_lstDeletions_item", "lstDeletions (uint32)")
F.Match_Making_DeleteFromDeletions_retval = ProtoField.bool("Match_Making_DeleteFromDeletions_retval", "retval (bool)")
F.Match_Making_MigrateGatheringOwnershipV1_gid = ProtoField.uint32("Match_Making_MigrateGatheringOwnershipV1_gid", "gid (uint32)")
F.Match_Making_MigrateGatheringOwnershipV1_lstPotentialNewOwnersID_len = ProtoField.uint32("Match_Making_MigrateGatheringOwnershipV1_lstPotentialNewOwnersID_len", "lstPotentialNewOwnersID length (uint32)")
F.Match_Making_MigrateGatheringOwnershipV1_lstPotentialNewOwnersID_item = ProtoField.uint32("Match_Making_MigrateGatheringOwnershipV1_lstPotentialNewOwnersID_item", "lstPotentialNewOwnersID (uint32)")
F.Match_Making_MigrateGatheringOwnershipV1_retval = ProtoField.bool("Match_Making_MigrateGatheringOwnershipV1_retval", "retval (bool)")
F.Match_Making_FindByDescriptionLike_strDescriptionLike_len = ProtoField.uint16("Match_Making_FindByDescriptionLike_strDescriptionLike_len", "strDescriptionLike length (String)")
F.Match_Making_FindByDescriptionLike_strDescriptionLike_data = ProtoField.string("Match_Making_FindByDescriptionLike_strDescriptionLike_data", "strDescriptionLike data (String)")
F.Match_Making_FindByDescriptionLike_lstGathering_len = ProtoField.uint32("Match_Making_FindByDescriptionLike_lstGathering_len", "lstGathering length (uint32)")
F.Match_Making_FindByDescriptionLike_lstGathering_item_data_bytes = ProtoField.bytes("Match_Making_FindByDescriptionLike_lstGathering_item_data_bytes", "lstGathering data bytes (bytes)")
F.Match_Making_FindByDescriptionLike_lstGathering_item_type_name_len = ProtoField.uint16("Match_Making_FindByDescriptionLike_lstGathering_item_type_name_len", "lstGathering_type_name length (String)")
F.Match_Making_FindByDescriptionLike_lstGathering_item_type_name_data = ProtoField.string("Match_Making_FindByDescriptionLike_lstGathering_item_type_name_data", "lstGathering_type_name data (String)")
F.Match_Making_FindByDescriptionLike_lstGathering_item_len_plus_four = ProtoField.uint32("Match_Making_FindByDescriptionLike_lstGathering_item_len_plus_four", "lstGathering_len_plus_four (uint32)")
F.Match_Making_FindByDescriptionLike_lstGathering_item_data_len = ProtoField.uint32("Match_Making_FindByDescriptionLike_lstGathering_item_data_len", "lstGathering_data_len (uint32)")
F.Match_Making_RegisterLocalURL_gid = ProtoField.uint32("Match_Making_RegisterLocalURL_gid", "gid (uint32)")
F.Match_Making_RegisterLocalURL_url_len = ProtoField.uint16("Match_Making_RegisterLocalURL_url_len", "url length (String)")
F.Match_Making_RegisterLocalURL_url_data = ProtoField.string("Match_Making_RegisterLocalURL_url_data", "url data (String)")
F.Match_Making_RegisterLocalURLs_gid = ProtoField.uint32("Match_Making_RegisterLocalURLs_gid", "gid (uint32)")
F.Match_Making_RegisterLocalURLs_lstUrls_len = ProtoField.uint32("Match_Making_RegisterLocalURLs_lstUrls_len", "lstUrls length (uint32)")
F.Match_Making_RegisterLocalURLs_lstUrls_item_len = ProtoField.uint16("Match_Making_RegisterLocalURLs_lstUrls_item_len", "lstUrls length (String)")
F.Match_Making_RegisterLocalURLs_lstUrls_item_data = ProtoField.string("Match_Making_RegisterLocalURLs_lstUrls_item_data", "lstUrls data (String)")
F.Match_Making_UpdateSessionHostV1_gid = ProtoField.uint32("Match_Making_UpdateSessionHostV1_gid", "gid (uint32)")
F.Match_Making_GetSessionURLs_gid = ProtoField.uint32("Match_Making_GetSessionURLs_gid", "gid (uint32)")
F.Match_Making_GetSessionURLs_lstURLs_len = ProtoField.uint32("Match_Making_GetSessionURLs_lstURLs_len", "lstURLs length (uint32)")
F.Match_Making_GetSessionURLs_lstURLs_item_len = ProtoField.uint16("Match_Making_GetSessionURLs_lstURLs_item_len", "lstURLs length (String)")
F.Match_Making_GetSessionURLs_lstURLs_item_data = ProtoField.string("Match_Making_GetSessionURLs_lstURLs_item_data", "lstURLs data (String)")
F.Match_Making_UpdateSessionHost_gid = ProtoField.uint32("Match_Making_UpdateSessionHost_gid", "gid (uint32)")
F.Match_Making_UpdateSessionHost_isMigrateOwner = ProtoField.bool("Match_Making_UpdateSessionHost_isMigrateOwner", "isMigrateOwner (bool)")
F.Match_Making_UpdateGatheringOwnership_gid = ProtoField.uint32("Match_Making_UpdateGatheringOwnership_gid", "gid (uint32)")
F.Match_Making_UpdateGatheringOwnership_participantsOnly = ProtoField.bool("Match_Making_UpdateGatheringOwnership_participantsOnly", "participantsOnly (bool)")
F.Match_Making_UpdateGatheringOwnership_retval = ProtoField.bool("Match_Making_UpdateGatheringOwnership_retval", "retval (bool)")
F.Match_Making_MigrateGatheringOwnership_gid = ProtoField.uint32("Match_Making_MigrateGatheringOwnership_gid", "gid (uint32)")
F.Match_Making_MigrateGatheringOwnership_lstPotentialNewOwnersID_len = ProtoField.uint32("Match_Making_MigrateGatheringOwnership_lstPotentialNewOwnersID_len", "lstPotentialNewOwnersID length (uint32)")
F.Match_Making_MigrateGatheringOwnership_lstPotentialNewOwnersID_item = ProtoField.uint32("Match_Making_MigrateGatheringOwnership_lstPotentialNewOwnersID_item", "lstPotentialNewOwnersID (uint32)")
F.Match_Making_MigrateGatheringOwnership_participantsOnly = ProtoField.bool("Match_Making_MigrateGatheringOwnership_participantsOnly", "participantsOnly (bool)")
F.Messaging_DeliverMessage_oUserMessage_data_bytes = ProtoField.bytes("Messaging_DeliverMessage_oUserMessage_data_bytes", "oUserMessage data bytes (bytes)")
F.Messaging_DeliverMessage_oUserMessage_type_name_len = ProtoField.uint16("Messaging_DeliverMessage_oUserMessage_type_name_len", "oUserMessage_type_name length (String)")
F.Messaging_DeliverMessage_oUserMessage_type_name_data = ProtoField.string("Messaging_DeliverMessage_oUserMessage_type_name_data", "oUserMessage_type_name data (String)")
F.Messaging_DeliverMessage_oUserMessage_len_plus_four = ProtoField.uint32("Messaging_DeliverMessage_oUserMessage_len_plus_four", "oUserMessage_len_plus_four (uint32)")
F.Messaging_DeliverMessage_oUserMessage_data_len = ProtoField.uint32("Messaging_DeliverMessage_oUserMessage_data_len", "oUserMessage_data_len (uint32)")
F.Messaging_DeliverMessage_oModifiedMessage_data_bytes = ProtoField.bytes("Messaging_DeliverMessage_oModifiedMessage_data_bytes", "oModifiedMessage data bytes (bytes)")
F.Messaging_DeliverMessage_oModifiedMessage_type_name_len = ProtoField.uint16("Messaging_DeliverMessage_oModifiedMessage_type_name_len", "oModifiedMessage_type_name length (String)")
F.Messaging_DeliverMessage_oModifiedMessage_type_name_data = ProtoField.string("Messaging_DeliverMessage_oModifiedMessage_type_name_data", "oModifiedMessage_type_name data (String)")
F.Messaging_DeliverMessage_oModifiedMessage_len_plus_four = ProtoField.uint32("Messaging_DeliverMessage_oModifiedMessage_len_plus_four", "oModifiedMessage_len_plus_four (uint32)")
F.Messaging_DeliverMessage_oModifiedMessage_data_len = ProtoField.uint32("Messaging_DeliverMessage_oModifiedMessage_data_len", "oModifiedMessage_data_len (uint32)")
F.Messaging_DeliverMessage_lstSandboxNodeId_len = ProtoField.uint32("Messaging_DeliverMessage_lstSandboxNodeId_len", "lstSandboxNodeId length (uint32)")
F.Messaging_DeliverMessage_lstSandboxNodeId_item = ProtoField.uint32("Messaging_DeliverMessage_lstSandboxNodeId_item", "lstSandboxNodeId (uint32)")
F.Messaging_DeliverMessage_lstParticipants_len = ProtoField.uint32("Messaging_DeliverMessage_lstParticipants_len", "lstParticipants length (uint32)")
F.Messaging_DeliverMessage_lstParticipants_item = ProtoField.uint32("Messaging_DeliverMessage_lstParticipants_item", "lstParticipants (uint32)")
F.Messaging_GetNumberOfMessages_uiNbMessages = ProtoField.uint32("Messaging_GetNumberOfMessages_uiNbMessages", "uiNbMessages (uint32)")
F.Messaging_GetMessagesHeaders_lstMsgHeaders_len = ProtoField.uint32("Messaging_GetMessagesHeaders_lstMsgHeaders_len", "lstMsgHeaders length (uint32)")
F.Messaging_RetrieveAllMessagesWithinRange_lstMessages_len = ProtoField.uint32("Messaging_RetrieveAllMessagesWithinRange_lstMessages_len", "lstMessages length (uint32)")
F.Messaging_RetrieveAllMessagesWithinRange_lstMessages_item_data_bytes = ProtoField.bytes("Messaging_RetrieveAllMessagesWithinRange_lstMessages_item_data_bytes", "lstMessages data bytes (bytes)")
F.Messaging_RetrieveAllMessagesWithinRange_lstMessages_item_type_name_len = ProtoField.uint16("Messaging_RetrieveAllMessagesWithinRange_lstMessages_item_type_name_len", "lstMessages_type_name length (String)")
F.Messaging_RetrieveAllMessagesWithinRange_lstMessages_item_type_name_data = ProtoField.string("Messaging_RetrieveAllMessagesWithinRange_lstMessages_item_type_name_data", "lstMessages_type_name data (String)")
F.Messaging_RetrieveAllMessagesWithinRange_lstMessages_item_len_plus_four = ProtoField.uint32("Messaging_RetrieveAllMessagesWithinRange_lstMessages_item_len_plus_four", "lstMessages_len_plus_four (uint32)")
F.Messaging_RetrieveAllMessagesWithinRange_lstMessages_item_data_len = ProtoField.uint32("Messaging_RetrieveAllMessagesWithinRange_lstMessages_item_data_len", "lstMessages_data_len (uint32)")
F.Messaging_RetrieveMessages_lstMsgIDs_len = ProtoField.uint32("Messaging_RetrieveMessages_lstMsgIDs_len", "lstMsgIDs length (uint32)")
F.Messaging_RetrieveMessages_lstMsgIDs_item = ProtoField.uint32("Messaging_RetrieveMessages_lstMsgIDs_item", "lstMsgIDs (uint32)")
F.Messaging_RetrieveMessages_bLeaveOnServer = ProtoField.bool("Messaging_RetrieveMessages_bLeaveOnServer", "bLeaveOnServer (bool)")
F.Messaging_RetrieveMessages_lstMessages_len = ProtoField.uint32("Messaging_RetrieveMessages_lstMessages_len", "lstMessages length (uint32)")
F.Messaging_RetrieveMessages_lstMessages_item_data_bytes = ProtoField.bytes("Messaging_RetrieveMessages_lstMessages_item_data_bytes", "lstMessages data bytes (bytes)")
F.Messaging_RetrieveMessages_lstMessages_item_type_name_len = ProtoField.uint16("Messaging_RetrieveMessages_lstMessages_item_type_name_len", "lstMessages_type_name length (String)")
F.Messaging_RetrieveMessages_lstMessages_item_type_name_data = ProtoField.string("Messaging_RetrieveMessages_lstMessages_item_type_name_data", "lstMessages_type_name data (String)")
F.Messaging_RetrieveMessages_lstMessages_item_len_plus_four = ProtoField.uint32("Messaging_RetrieveMessages_lstMessages_item_len_plus_four", "lstMessages_len_plus_four (uint32)")
F.Messaging_RetrieveMessages_lstMessages_item_data_len = ProtoField.uint32("Messaging_RetrieveMessages_lstMessages_item_data_len", "lstMessages_data_len (uint32)")
F.Messaging_DeleteMessages_lstMessagesToDelete_len = ProtoField.uint32("Messaging_DeleteMessages_lstMessagesToDelete_len", "lstMessagesToDelete length (uint32)")
F.Messaging_DeleteMessages_lstMessagesToDelete_item = ProtoField.uint32("Messaging_DeleteMessages_lstMessagesToDelete_item", "lstMessagesToDelete (uint32)")
F.Messaging_DeleteAllMessages_uiNbDeletedMessages = ProtoField.uint32("Messaging_DeleteAllMessages_uiNbDeletedMessages", "uiNbDeletedMessages (uint32)")
F.Message_Delivery_DeliverMessage_oUserMessage_data_bytes = ProtoField.bytes("Message_Delivery_DeliverMessage_oUserMessage_data_bytes", "oUserMessage data bytes (bytes)")
F.Message_Delivery_DeliverMessage_oUserMessage_type_name_len = ProtoField.uint16("Message_Delivery_DeliverMessage_oUserMessage_type_name_len", "oUserMessage_type_name length (String)")
F.Message_Delivery_DeliverMessage_oUserMessage_type_name_data = ProtoField.string("Message_Delivery_DeliverMessage_oUserMessage_type_name_data", "oUserMessage_type_name data (String)")
F.Message_Delivery_DeliverMessage_oUserMessage_len_plus_four = ProtoField.uint32("Message_Delivery_DeliverMessage_oUserMessage_len_plus_four", "oUserMessage_len_plus_four (uint32)")
F.Message_Delivery_DeliverMessage_oUserMessage_data_len = ProtoField.uint32("Message_Delivery_DeliverMessage_oUserMessage_data_len", "oUserMessage_data_len (uint32)")
F.Account_Management_CreateAccount_strPrincipalName_len = ProtoField.uint16("Account_Management_CreateAccount_strPrincipalName_len", "strPrincipalName length (String)")
F.Account_Management_CreateAccount_strPrincipalName_data = ProtoField.string("Account_Management_CreateAccount_strPrincipalName_data", "strPrincipalName data (String)")
F.Account_Management_CreateAccount_strKey_len = ProtoField.uint16("Account_Management_CreateAccount_strKey_len", "strKey length (String)")
F.Account_Management_CreateAccount_strKey_data = ProtoField.string("Account_Management_CreateAccount_strKey_data", "strKey data (String)")
F.Account_Management_CreateAccount_uiGroups = ProtoField.uint32("Account_Management_CreateAccount_uiGroups", "uiGroups (uint32)")
F.Account_Management_CreateAccount_strEmail_len = ProtoField.uint16("Account_Management_CreateAccount_strEmail_len", "strEmail length (String)")
F.Account_Management_CreateAccount_strEmail_data = ProtoField.string("Account_Management_CreateAccount_strEmail_data", "strEmail data (String)")
F.Account_Management_CreateAccount_retval = ProtoField.uint32("Account_Management_CreateAccount_retval", "retval (uint32)")
F.Account_Management_DeleteAccount_idPrincipal = ProtoField.uint32("Account_Management_DeleteAccount_idPrincipal", "idPrincipal (uint32)")
F.Account_Management_DisableAccount_idPrincipal = ProtoField.uint32("Account_Management_DisableAccount_idPrincipal", "idPrincipal (uint32)")
F.Account_Management_DisableAccount_dtUntil = ProtoField.uint64("Account_Management_DisableAccount_dtUntil", "dtUntil (uint64)")
F.Account_Management_DisableAccount_strMessage_len = ProtoField.uint16("Account_Management_DisableAccount_strMessage_len", "strMessage length (String)")
F.Account_Management_DisableAccount_strMessage_data = ProtoField.string("Account_Management_DisableAccount_strMessage_data", "strMessage data (String)")
F.Account_Management_DisableAccount_retval = ProtoField.uint32("Account_Management_DisableAccount_retval", "retval (uint32)")
F.Account_Management_ChangePassword_strNewKey_len = ProtoField.uint16("Account_Management_ChangePassword_strNewKey_len", "strNewKey length (String)")
F.Account_Management_ChangePassword_strNewKey_data = ProtoField.string("Account_Management_ChangePassword_strNewKey_data", "strNewKey data (String)")
F.Account_Management_ChangePassword_retval = ProtoField.bool("Account_Management_ChangePassword_retval", "retval (bool)")
F.Account_Management_TestCapability_uiCapability = ProtoField.uint32("Account_Management_TestCapability_uiCapability", "uiCapability (uint32)")
F.Account_Management_TestCapability_retval = ProtoField.bool("Account_Management_TestCapability_retval", "retval (bool)")
F.Account_Management_GetName_idPrincipal = ProtoField.uint32("Account_Management_GetName_idPrincipal", "idPrincipal (uint32)")
F.Account_Management_GetName_strName_len = ProtoField.uint16("Account_Management_GetName_strName_len", "strName length (String)")
F.Account_Management_GetName_strName_data = ProtoField.string("Account_Management_GetName_strName_data", "strName data (String)")
F.Account_Management_GetAccountData_retval = ProtoField.uint32("Account_Management_GetAccountData_retval", "retval (uint32)")
F.Account_Management_GetPrivateData_retval = ProtoField.bool("Account_Management_GetPrivateData_retval", "retval (bool)")
F.Account_Management_GetPrivateData_oData_data_bytes = ProtoField.bytes("Account_Management_GetPrivateData_oData_data_bytes", "oData data bytes (bytes)")
F.Account_Management_GetPrivateData_oData_type_name_len = ProtoField.uint16("Account_Management_GetPrivateData_oData_type_name_len", "oData_type_name length (String)")
F.Account_Management_GetPrivateData_oData_type_name_data = ProtoField.string("Account_Management_GetPrivateData_oData_type_name_data", "oData_type_name data (String)")
F.Account_Management_GetPrivateData_oData_len_plus_four = ProtoField.uint32("Account_Management_GetPrivateData_oData_len_plus_four", "oData_len_plus_four (uint32)")
F.Account_Management_GetPrivateData_oData_data_len = ProtoField.uint32("Account_Management_GetPrivateData_oData_data_len", "oData_data_len (uint32)")
F.Account_Management_GetPublicData_idPrincipal = ProtoField.uint32("Account_Management_GetPublicData_idPrincipal", "idPrincipal (uint32)")
F.Account_Management_GetPublicData_retval = ProtoField.bool("Account_Management_GetPublicData_retval", "retval (bool)")
F.Account_Management_GetPublicData_oData_data_bytes = ProtoField.bytes("Account_Management_GetPublicData_oData_data_bytes", "oData data bytes (bytes)")
F.Account_Management_GetPublicData_oData_type_name_len = ProtoField.uint16("Account_Management_GetPublicData_oData_type_name_len", "oData_type_name length (String)")
F.Account_Management_GetPublicData_oData_type_name_data = ProtoField.string("Account_Management_GetPublicData_oData_type_name_data", "oData_type_name data (String)")
F.Account_Management_GetPublicData_oData_len_plus_four = ProtoField.uint32("Account_Management_GetPublicData_oData_len_plus_four", "oData_len_plus_four (uint32)")
F.Account_Management_GetPublicData_oData_data_len = ProtoField.uint32("Account_Management_GetPublicData_oData_data_len", "oData_data_len (uint32)")
F.Account_Management_GetMultiplePublicData_lstPrincipals_len = ProtoField.uint32("Account_Management_GetMultiplePublicData_lstPrincipals_len", "lstPrincipals length (uint32)")
F.Account_Management_GetMultiplePublicData_lstPrincipals_item = ProtoField.uint32("Account_Management_GetMultiplePublicData_lstPrincipals_item", "lstPrincipals (uint32)")
F.Account_Management_GetMultiplePublicData_retval = ProtoField.bool("Account_Management_GetMultiplePublicData_retval", "retval (bool)")
F.Account_Management_GetMultiplePublicData_oData_len = ProtoField.uint32("Account_Management_GetMultiplePublicData_oData_len", "oData length (uint32)")
F.Account_Management_GetMultiplePublicData_oData_item_data_bytes = ProtoField.bytes("Account_Management_GetMultiplePublicData_oData_item_data_bytes", "oData data bytes (bytes)")
F.Account_Management_GetMultiplePublicData_oData_item_type_name_len = ProtoField.uint16("Account_Management_GetMultiplePublicData_oData_item_type_name_len", "oData_type_name length (String)")
F.Account_Management_GetMultiplePublicData_oData_item_type_name_data = ProtoField.string("Account_Management_GetMultiplePublicData_oData_item_type_name_data", "oData_type_name data (String)")
F.Account_Management_GetMultiplePublicData_oData_item_len_plus_four = ProtoField.uint32("Account_Management_GetMultiplePublicData_oData_item_len_plus_four", "oData_len_plus_four (uint32)")
F.Account_Management_GetMultiplePublicData_oData_item_data_len = ProtoField.uint32("Account_Management_GetMultiplePublicData_oData_item_data_len", "oData_data_len (uint32)")
F.Account_Management_UpdateAccountName_strName_len = ProtoField.uint16("Account_Management_UpdateAccountName_strName_len", "strName length (String)")
F.Account_Management_UpdateAccountName_strName_data = ProtoField.string("Account_Management_UpdateAccountName_strName_data", "strName data (String)")
F.Account_Management_UpdateAccountName_retval = ProtoField.uint32("Account_Management_UpdateAccountName_retval", "retval (uint32)")
F.Account_Management_UpdateAccountEmail_strName_len = ProtoField.uint16("Account_Management_UpdateAccountEmail_strName_len", "strName length (String)")
F.Account_Management_UpdateAccountEmail_strName_data = ProtoField.string("Account_Management_UpdateAccountEmail_strName_data", "strName data (String)")
F.Account_Management_UpdateAccountEmail_retval = ProtoField.uint32("Account_Management_UpdateAccountEmail_retval", "retval (uint32)")
F.Account_Management_UpdateCustomData_oPublicData_data_bytes = ProtoField.bytes("Account_Management_UpdateCustomData_oPublicData_data_bytes", "oPublicData data bytes (bytes)")
F.Account_Management_UpdateCustomData_oPublicData_type_name_len = ProtoField.uint16("Account_Management_UpdateCustomData_oPublicData_type_name_len", "oPublicData_type_name length (String)")
F.Account_Management_UpdateCustomData_oPublicData_type_name_data = ProtoField.string("Account_Management_UpdateCustomData_oPublicData_type_name_data", "oPublicData_type_name data (String)")
F.Account_Management_UpdateCustomData_oPublicData_len_plus_four = ProtoField.uint32("Account_Management_UpdateCustomData_oPublicData_len_plus_four", "oPublicData_len_plus_four (uint32)")
F.Account_Management_UpdateCustomData_oPublicData_data_len = ProtoField.uint32("Account_Management_UpdateCustomData_oPublicData_data_len", "oPublicData_data_len (uint32)")
F.Account_Management_UpdateCustomData_oPrivateData_data_bytes = ProtoField.bytes("Account_Management_UpdateCustomData_oPrivateData_data_bytes", "oPrivateData data bytes (bytes)")
F.Account_Management_UpdateCustomData_oPrivateData_type_name_len = ProtoField.uint16("Account_Management_UpdateCustomData_oPrivateData_type_name_len", "oPrivateData_type_name length (String)")
F.Account_Management_UpdateCustomData_oPrivateData_type_name_data = ProtoField.string("Account_Management_UpdateCustomData_oPrivateData_type_name_data", "oPrivateData_type_name data (String)")
F.Account_Management_UpdateCustomData_oPrivateData_len_plus_four = ProtoField.uint32("Account_Management_UpdateCustomData_oPrivateData_len_plus_four", "oPrivateData_len_plus_four (uint32)")
F.Account_Management_UpdateCustomData_oPrivateData_data_len = ProtoField.uint32("Account_Management_UpdateCustomData_oPrivateData_data_len", "oPrivateData_data_len (uint32)")
F.Account_Management_UpdateCustomData_retval = ProtoField.uint32("Account_Management_UpdateCustomData_retval", "retval (uint32)")
F.Account_Management_FindByNameRegex_uiGroups = ProtoField.uint32("Account_Management_FindByNameRegex_uiGroups", "uiGroups (uint32)")
F.Account_Management_FindByNameRegex_strRegex_len = ProtoField.uint16("Account_Management_FindByNameRegex_strRegex_len", "strRegex length (String)")
F.Account_Management_FindByNameRegex_strRegex_data = ProtoField.string("Account_Management_FindByNameRegex_strRegex_data", "strRegex data (String)")
F.Account_Management_FindByNameRegex_plstAccounts_len = ProtoField.uint32("Account_Management_FindByNameRegex_plstAccounts_len", "plstAccounts length (uint32)")
F.Account_Management_UpdateAccountExpiryDate_idPrincipal = ProtoField.uint32("Account_Management_UpdateAccountExpiryDate_idPrincipal", "idPrincipal (uint32)")
F.Account_Management_UpdateAccountExpiryDate_dtExpiry = ProtoField.uint64("Account_Management_UpdateAccountExpiryDate_dtExpiry", "dtExpiry (uint64)")
F.Account_Management_UpdateAccountExpiryDate_strExpiredMessage_len = ProtoField.uint16("Account_Management_UpdateAccountExpiryDate_strExpiredMessage_len", "strExpiredMessage length (String)")
F.Account_Management_UpdateAccountExpiryDate_strExpiredMessage_data = ProtoField.string("Account_Management_UpdateAccountExpiryDate_strExpiredMessage_data", "strExpiredMessage data (String)")
F.Account_Management_UpdateAccountEffectiveDate_idPrincipal = ProtoField.uint32("Account_Management_UpdateAccountEffectiveDate_idPrincipal", "idPrincipal (uint32)")
F.Account_Management_UpdateAccountEffectiveDate_dtEffectiveFrom = ProtoField.uint64("Account_Management_UpdateAccountEffectiveDate_dtEffectiveFrom", "dtEffectiveFrom (uint64)")
F.Account_Management_UpdateAccountEffectiveDate_strNotEffectiveMessage_len = ProtoField.uint16("Account_Management_UpdateAccountEffectiveDate_strNotEffectiveMessage_len", "strNotEffectiveMessage length (String)")
F.Account_Management_UpdateAccountEffectiveDate_strNotEffectiveMessage_data = ProtoField.string("Account_Management_UpdateAccountEffectiveDate_strNotEffectiveMessage_data", "strNotEffectiveMessage data (String)")
F.Account_Management_UpdateStatus_strStatus_len = ProtoField.uint16("Account_Management_UpdateStatus_strStatus_len", "strStatus length (String)")
F.Account_Management_UpdateStatus_strStatus_data = ProtoField.string("Account_Management_UpdateStatus_strStatus_data", "strStatus data (String)")
F.Account_Management_GetStatus_idPrincipal = ProtoField.uint32("Account_Management_GetStatus_idPrincipal", "idPrincipal (uint32)")
F.Account_Management_GetStatus_strStatus_len = ProtoField.uint16("Account_Management_GetStatus_strStatus_len", "strStatus length (String)")
F.Account_Management_GetStatus_strStatus_data = ProtoField.string("Account_Management_GetStatus_strStatus_data", "strStatus data (String)")
F.Account_Management_GetLastConnectionStats_idPrincipal = ProtoField.uint32("Account_Management_GetLastConnectionStats_idPrincipal", "idPrincipal (uint32)")
F.Account_Management_GetLastConnectionStats_dtLastSessionLogin = ProtoField.uint64("Account_Management_GetLastConnectionStats_dtLastSessionLogin", "dtLastSessionLogin (uint64)")
F.Account_Management_GetLastConnectionStats_dtLastSessionLogout = ProtoField.uint64("Account_Management_GetLastConnectionStats_dtLastSessionLogout", "dtLastSessionLogout (uint64)")
F.Account_Management_GetLastConnectionStats_dtCurrentSessionLogin = ProtoField.uint64("Account_Management_GetLastConnectionStats_dtCurrentSessionLogin", "dtCurrentSessionLogin (uint64)")
F.Account_Management_ResetPassword_retval = ProtoField.bool("Account_Management_ResetPassword_retval", "retval (bool)")
F.Account_Management_CreateAccountWithCustomData_strPrincipalName_len = ProtoField.uint16("Account_Management_CreateAccountWithCustomData_strPrincipalName_len", "strPrincipalName length (String)")
F.Account_Management_CreateAccountWithCustomData_strPrincipalName_data = ProtoField.string("Account_Management_CreateAccountWithCustomData_strPrincipalName_data", "strPrincipalName data (String)")
F.Account_Management_CreateAccountWithCustomData_strKey_len = ProtoField.uint16("Account_Management_CreateAccountWithCustomData_strKey_len", "strKey length (String)")
F.Account_Management_CreateAccountWithCustomData_strKey_data = ProtoField.string("Account_Management_CreateAccountWithCustomData_strKey_data", "strKey data (String)")
F.Account_Management_CreateAccountWithCustomData_uiGroups = ProtoField.uint32("Account_Management_CreateAccountWithCustomData_uiGroups", "uiGroups (uint32)")
F.Account_Management_CreateAccountWithCustomData_strEmail_len = ProtoField.uint16("Account_Management_CreateAccountWithCustomData_strEmail_len", "strEmail length (String)")
F.Account_Management_CreateAccountWithCustomData_strEmail_data = ProtoField.string("Account_Management_CreateAccountWithCustomData_strEmail_data", "strEmail data (String)")
F.Account_Management_CreateAccountWithCustomData_oPublicData_data_bytes = ProtoField.bytes("Account_Management_CreateAccountWithCustomData_oPublicData_data_bytes", "oPublicData data bytes (bytes)")
F.Account_Management_CreateAccountWithCustomData_oPublicData_type_name_len = ProtoField.uint16("Account_Management_CreateAccountWithCustomData_oPublicData_type_name_len", "oPublicData_type_name length (String)")
F.Account_Management_CreateAccountWithCustomData_oPublicData_type_name_data = ProtoField.string("Account_Management_CreateAccountWithCustomData_oPublicData_type_name_data", "oPublicData_type_name data (String)")
F.Account_Management_CreateAccountWithCustomData_oPublicData_len_plus_four = ProtoField.uint32("Account_Management_CreateAccountWithCustomData_oPublicData_len_plus_four", "oPublicData_len_plus_four (uint32)")
F.Account_Management_CreateAccountWithCustomData_oPublicData_data_len = ProtoField.uint32("Account_Management_CreateAccountWithCustomData_oPublicData_data_len", "oPublicData_data_len (uint32)")
F.Account_Management_CreateAccountWithCustomData_oPrivateData_data_bytes = ProtoField.bytes("Account_Management_CreateAccountWithCustomData_oPrivateData_data_bytes", "oPrivateData data bytes (bytes)")
F.Account_Management_CreateAccountWithCustomData_oPrivateData_type_name_len = ProtoField.uint16("Account_Management_CreateAccountWithCustomData_oPrivateData_type_name_len", "oPrivateData_type_name length (String)")
F.Account_Management_CreateAccountWithCustomData_oPrivateData_type_name_data = ProtoField.string("Account_Management_CreateAccountWithCustomData_oPrivateData_type_name_data", "oPrivateData_type_name data (String)")
F.Account_Management_CreateAccountWithCustomData_oPrivateData_len_plus_four = ProtoField.uint32("Account_Management_CreateAccountWithCustomData_oPrivateData_len_plus_four", "oPrivateData_len_plus_four (uint32)")
F.Account_Management_CreateAccountWithCustomData_oPrivateData_data_len = ProtoField.uint32("Account_Management_CreateAccountWithCustomData_oPrivateData_data_len", "oPrivateData_data_len (uint32)")
F.Account_Management_RetrieveAccount_oPublicData_data_bytes = ProtoField.bytes("Account_Management_RetrieveAccount_oPublicData_data_bytes", "oPublicData data bytes (bytes)")
F.Account_Management_RetrieveAccount_oPublicData_type_name_len = ProtoField.uint16("Account_Management_RetrieveAccount_oPublicData_type_name_len", "oPublicData_type_name length (String)")
F.Account_Management_RetrieveAccount_oPublicData_type_name_data = ProtoField.string("Account_Management_RetrieveAccount_oPublicData_type_name_data", "oPublicData_type_name data (String)")
F.Account_Management_RetrieveAccount_oPublicData_len_plus_four = ProtoField.uint32("Account_Management_RetrieveAccount_oPublicData_len_plus_four", "oPublicData_len_plus_four (uint32)")
F.Account_Management_RetrieveAccount_oPublicData_data_len = ProtoField.uint32("Account_Management_RetrieveAccount_oPublicData_data_len", "oPublicData_data_len (uint32)")
F.Account_Management_RetrieveAccount_oPrivateData_data_bytes = ProtoField.bytes("Account_Management_RetrieveAccount_oPrivateData_data_bytes", "oPrivateData data bytes (bytes)")
F.Account_Management_RetrieveAccount_oPrivateData_type_name_len = ProtoField.uint16("Account_Management_RetrieveAccount_oPrivateData_type_name_len", "oPrivateData_type_name length (String)")
F.Account_Management_RetrieveAccount_oPrivateData_type_name_data = ProtoField.string("Account_Management_RetrieveAccount_oPrivateData_type_name_data", "oPrivateData_type_name data (String)")
F.Account_Management_RetrieveAccount_oPrivateData_len_plus_four = ProtoField.uint32("Account_Management_RetrieveAccount_oPrivateData_len_plus_four", "oPrivateData_len_plus_four (uint32)")
F.Account_Management_RetrieveAccount_oPrivateData_data_len = ProtoField.uint32("Account_Management_RetrieveAccount_oPrivateData_data_len", "oPrivateData_data_len (uint32)")
F.Account_Management_UpdateAccount_strKey_len = ProtoField.uint16("Account_Management_UpdateAccount_strKey_len", "strKey length (String)")
F.Account_Management_UpdateAccount_strKey_data = ProtoField.string("Account_Management_UpdateAccount_strKey_data", "strKey data (String)")
F.Account_Management_UpdateAccount_strEmail_len = ProtoField.uint16("Account_Management_UpdateAccount_strEmail_len", "strEmail length (String)")
F.Account_Management_UpdateAccount_strEmail_data = ProtoField.string("Account_Management_UpdateAccount_strEmail_data", "strEmail data (String)")
F.Account_Management_UpdateAccount_oPublicData_data_bytes = ProtoField.bytes("Account_Management_UpdateAccount_oPublicData_data_bytes", "oPublicData data bytes (bytes)")
F.Account_Management_UpdateAccount_oPublicData_type_name_len = ProtoField.uint16("Account_Management_UpdateAccount_oPublicData_type_name_len", "oPublicData_type_name length (String)")
F.Account_Management_UpdateAccount_oPublicData_type_name_data = ProtoField.string("Account_Management_UpdateAccount_oPublicData_type_name_data", "oPublicData_type_name data (String)")
F.Account_Management_UpdateAccount_oPublicData_len_plus_four = ProtoField.uint32("Account_Management_UpdateAccount_oPublicData_len_plus_four", "oPublicData_len_plus_four (uint32)")
F.Account_Management_UpdateAccount_oPublicData_data_len = ProtoField.uint32("Account_Management_UpdateAccount_oPublicData_data_len", "oPublicData_data_len (uint32)")
F.Account_Management_UpdateAccount_oPrivateData_data_bytes = ProtoField.bytes("Account_Management_UpdateAccount_oPrivateData_data_bytes", "oPrivateData data bytes (bytes)")
F.Account_Management_UpdateAccount_oPrivateData_type_name_len = ProtoField.uint16("Account_Management_UpdateAccount_oPrivateData_type_name_len", "oPrivateData_type_name length (String)")
F.Account_Management_UpdateAccount_oPrivateData_type_name_data = ProtoField.string("Account_Management_UpdateAccount_oPrivateData_type_name_data", "oPrivateData_type_name data (String)")
F.Account_Management_UpdateAccount_oPrivateData_len_plus_four = ProtoField.uint32("Account_Management_UpdateAccount_oPrivateData_len_plus_four", "oPrivateData_len_plus_four (uint32)")
F.Account_Management_UpdateAccount_oPrivateData_data_len = ProtoField.uint32("Account_Management_UpdateAccount_oPrivateData_data_len", "oPrivateData_data_len (uint32)")
F.Account_Management_ChangePasswordByGuest_strPrincipalName_len = ProtoField.uint16("Account_Management_ChangePasswordByGuest_strPrincipalName_len", "strPrincipalName length (String)")
F.Account_Management_ChangePasswordByGuest_strPrincipalName_data = ProtoField.string("Account_Management_ChangePasswordByGuest_strPrincipalName_data", "strPrincipalName data (String)")
F.Account_Management_ChangePasswordByGuest_strEmail_len = ProtoField.uint16("Account_Management_ChangePasswordByGuest_strEmail_len", "strEmail length (String)")
F.Account_Management_ChangePasswordByGuest_strEmail_data = ProtoField.string("Account_Management_ChangePasswordByGuest_strEmail_data", "strEmail data (String)")
F.Account_Management_ChangePasswordByGuest_strKey_len = ProtoField.uint16("Account_Management_ChangePasswordByGuest_strKey_len", "strKey length (String)")
F.Account_Management_ChangePasswordByGuest_strKey_data = ProtoField.string("Account_Management_ChangePasswordByGuest_strKey_data", "strKey data (String)")
F.Account_Management_FindByNameLike_uiGroups = ProtoField.uint32("Account_Management_FindByNameLike_uiGroups", "uiGroups (uint32)")
F.Account_Management_FindByNameLike_strLike_len = ProtoField.uint16("Account_Management_FindByNameLike_strLike_len", "strLike length (String)")
F.Account_Management_FindByNameLike_strLike_data = ProtoField.string("Account_Management_FindByNameLike_strLike_data", "strLike data (String)")
F.Account_Management_FindByNameLike_plstAccounts_len = ProtoField.uint32("Account_Management_FindByNameLike_plstAccounts_len", "plstAccounts length (uint32)")
F.Account_Management_CustomCreateAccount_strPrincipalName_len = ProtoField.uint16("Account_Management_CustomCreateAccount_strPrincipalName_len", "strPrincipalName length (String)")
F.Account_Management_CustomCreateAccount_strPrincipalName_data = ProtoField.string("Account_Management_CustomCreateAccount_strPrincipalName_data", "strPrincipalName data (String)")
F.Account_Management_CustomCreateAccount_strKey_len = ProtoField.uint16("Account_Management_CustomCreateAccount_strKey_len", "strKey length (String)")
F.Account_Management_CustomCreateAccount_strKey_data = ProtoField.string("Account_Management_CustomCreateAccount_strKey_data", "strKey data (String)")
F.Account_Management_CustomCreateAccount_uiGroups = ProtoField.uint32("Account_Management_CustomCreateAccount_uiGroups", "uiGroups (uint32)")
F.Account_Management_CustomCreateAccount_strEmail_len = ProtoField.uint16("Account_Management_CustomCreateAccount_strEmail_len", "strEmail length (String)")
F.Account_Management_CustomCreateAccount_strEmail_data = ProtoField.string("Account_Management_CustomCreateAccount_strEmail_data", "strEmail data (String)")
F.Account_Management_CustomCreateAccount_oAuthData_data_bytes = ProtoField.bytes("Account_Management_CustomCreateAccount_oAuthData_data_bytes", "oAuthData data bytes (bytes)")
F.Account_Management_CustomCreateAccount_oAuthData_type_name_len = ProtoField.uint16("Account_Management_CustomCreateAccount_oAuthData_type_name_len", "oAuthData_type_name length (String)")
F.Account_Management_CustomCreateAccount_oAuthData_type_name_data = ProtoField.string("Account_Management_CustomCreateAccount_oAuthData_type_name_data", "oAuthData_type_name data (String)")
F.Account_Management_CustomCreateAccount_oAuthData_len_plus_four = ProtoField.uint32("Account_Management_CustomCreateAccount_oAuthData_len_plus_four", "oAuthData_len_plus_four (uint32)")
F.Account_Management_CustomCreateAccount_oAuthData_data_len = ProtoField.uint32("Account_Management_CustomCreateAccount_oAuthData_data_len", "oAuthData_data_len (uint32)")
F.Account_Management_CustomCreateAccount_pid = ProtoField.uint32("Account_Management_CustomCreateAccount_pid", "pid (uint32)")
F.Account_Management_NintendoCreateAccount_strPrincipalName_len = ProtoField.uint16("Account_Management_NintendoCreateAccount_strPrincipalName_len", "strPrincipalName length (String)")
F.Account_Management_NintendoCreateAccount_strPrincipalName_data = ProtoField.string("Account_Management_NintendoCreateAccount_strPrincipalName_data", "strPrincipalName data (String)")
F.Account_Management_NintendoCreateAccount_strKey_len = ProtoField.uint16("Account_Management_NintendoCreateAccount_strKey_len", "strKey length (String)")
F.Account_Management_NintendoCreateAccount_strKey_data = ProtoField.string("Account_Management_NintendoCreateAccount_strKey_data", "strKey data (String)")
F.Account_Management_NintendoCreateAccount_uiGroups = ProtoField.uint32("Account_Management_NintendoCreateAccount_uiGroups", "uiGroups (uint32)")
F.Account_Management_NintendoCreateAccount_strEmail_len = ProtoField.uint16("Account_Management_NintendoCreateAccount_strEmail_len", "strEmail length (String)")
F.Account_Management_NintendoCreateAccount_strEmail_data = ProtoField.string("Account_Management_NintendoCreateAccount_strEmail_data", "strEmail data (String)")
F.Account_Management_NintendoCreateAccount_oAuthData_data_bytes = ProtoField.bytes("Account_Management_NintendoCreateAccount_oAuthData_data_bytes", "oAuthData data bytes (bytes)")
F.Account_Management_NintendoCreateAccount_oAuthData_type_name_len = ProtoField.uint16("Account_Management_NintendoCreateAccount_oAuthData_type_name_len", "oAuthData_type_name length (String)")
F.Account_Management_NintendoCreateAccount_oAuthData_type_name_data = ProtoField.string("Account_Management_NintendoCreateAccount_oAuthData_type_name_data", "oAuthData_type_name data (String)")
F.Account_Management_NintendoCreateAccount_oAuthData_len_plus_four = ProtoField.uint32("Account_Management_NintendoCreateAccount_oAuthData_len_plus_four", "oAuthData_len_plus_four (uint32)")
F.Account_Management_NintendoCreateAccount_oAuthData_data_len = ProtoField.uint32("Account_Management_NintendoCreateAccount_oAuthData_data_len", "oAuthData_data_len (uint32)")
F.Account_Management_NintendoCreateAccount_pid = ProtoField.uint32("Account_Management_NintendoCreateAccount_pid", "pid (uint32)")
F.Account_Management_NintendoCreateAccount_pidHMAC_len = ProtoField.uint16("Account_Management_NintendoCreateAccount_pidHMAC_len", "pidHMAC length (String)")
F.Account_Management_NintendoCreateAccount_pidHMAC_data = ProtoField.string("Account_Management_NintendoCreateAccount_pidHMAC_data", "pidHMAC data (String)")
F.Account_Management_LookupOrCreateAccount_strPrincipalName_len = ProtoField.uint16("Account_Management_LookupOrCreateAccount_strPrincipalName_len", "strPrincipalName length (String)")
F.Account_Management_LookupOrCreateAccount_strPrincipalName_data = ProtoField.string("Account_Management_LookupOrCreateAccount_strPrincipalName_data", "strPrincipalName data (String)")
F.Account_Management_LookupOrCreateAccount_strKey_len = ProtoField.uint16("Account_Management_LookupOrCreateAccount_strKey_len", "strKey length (String)")
F.Account_Management_LookupOrCreateAccount_strKey_data = ProtoField.string("Account_Management_LookupOrCreateAccount_strKey_data", "strKey data (String)")
F.Account_Management_LookupOrCreateAccount_uiGroups = ProtoField.uint32("Account_Management_LookupOrCreateAccount_uiGroups", "uiGroups (uint32)")
F.Account_Management_LookupOrCreateAccount_strEmail_len = ProtoField.uint16("Account_Management_LookupOrCreateAccount_strEmail_len", "strEmail length (String)")
F.Account_Management_LookupOrCreateAccount_strEmail_data = ProtoField.string("Account_Management_LookupOrCreateAccount_strEmail_data", "strEmail data (String)")
F.Account_Management_LookupOrCreateAccount_oAuthData_data_bytes = ProtoField.bytes("Account_Management_LookupOrCreateAccount_oAuthData_data_bytes", "oAuthData data bytes (bytes)")
F.Account_Management_LookupOrCreateAccount_oAuthData_type_name_len = ProtoField.uint16("Account_Management_LookupOrCreateAccount_oAuthData_type_name_len", "oAuthData_type_name length (String)")
F.Account_Management_LookupOrCreateAccount_oAuthData_type_name_data = ProtoField.string("Account_Management_LookupOrCreateAccount_oAuthData_type_name_data", "oAuthData_type_name data (String)")
F.Account_Management_LookupOrCreateAccount_oAuthData_len_plus_four = ProtoField.uint32("Account_Management_LookupOrCreateAccount_oAuthData_len_plus_four", "oAuthData_len_plus_four (uint32)")
F.Account_Management_LookupOrCreateAccount_oAuthData_data_len = ProtoField.uint32("Account_Management_LookupOrCreateAccount_oAuthData_data_len", "oAuthData_data_len (uint32)")
F.Account_Management_LookupOrCreateAccount_pid = ProtoField.uint32("Account_Management_LookupOrCreateAccount_pid", "pid (uint32)")
F.Account_Management_DisconnectPrincipal_idPrincipal = ProtoField.uint32("Account_Management_DisconnectPrincipal_idPrincipal", "idPrincipal (uint32)")
F.Account_Management_DisconnectPrincipal_retval = ProtoField.bool("Account_Management_DisconnectPrincipal_retval", "retval (bool)")
F.Account_Management_DisconnectAllPrincipals_retval = ProtoField.bool("Account_Management_DisconnectAllPrincipals_retval", "retval (bool)")
F.Data_Store_DeleteObjects_params_len = ProtoField.uint32("Data_Store_DeleteObjects_params_len", "params length (uint32)")
F.Data_Store_DeleteObjects_transactional = ProtoField.bool("Data_Store_DeleteObjects_transactional", "transactional (bool)")
F.Data_Store_DeleteObjects_pResults_len = ProtoField.uint32("Data_Store_DeleteObjects_pResults_len", "pResults length (uint32)")
F.Data_Store_DeleteObjects_pResults_item = ProtoField.uint32("Data_Store_DeleteObjects_pResults_item", "pResults (uint32)")
F.Data_Store_ChangeMetasV1_dataIds_len = ProtoField.uint32("Data_Store_ChangeMetasV1_dataIds_len", "dataIds length (uint32)")
F.Data_Store_ChangeMetasV1_dataIds_item = ProtoField.uint64("Data_Store_ChangeMetasV1_dataIds_item", "dataIds (uint64)")
F.Data_Store_ChangeMetasV1_params_len = ProtoField.uint32("Data_Store_ChangeMetasV1_params_len", "params length (uint32)")
F.Data_Store_ChangeMetasV1_transactional = ProtoField.bool("Data_Store_ChangeMetasV1_transactional", "transactional (bool)")
F.Data_Store_ChangeMetasV1_pResults_len = ProtoField.uint32("Data_Store_ChangeMetasV1_pResults_len", "pResults length (uint32)")
F.Data_Store_ChangeMetasV1_pResults_item = ProtoField.uint32("Data_Store_ChangeMetasV1_pResults_item", "pResults (uint32)")
F.Data_Store_GetMetas_dataIds_len = ProtoField.uint32("Data_Store_GetMetas_dataIds_len", "dataIds length (uint32)")
F.Data_Store_GetMetas_dataIds_item = ProtoField.uint64("Data_Store_GetMetas_dataIds_item", "dataIds (uint64)")
F.Data_Store_GetMetas_pMetaInfo_len = ProtoField.uint32("Data_Store_GetMetas_pMetaInfo_len", "pMetaInfo length (uint32)")
F.Data_Store_GetMetas_pResults_len = ProtoField.uint32("Data_Store_GetMetas_pResults_len", "pResults length (uint32)")
F.Data_Store_GetMetas_pResults_item = ProtoField.uint32("Data_Store_GetMetas_pResults_item", "pResults (uint32)")
F.Data_Store_GetNewArrivedNotificationsV1_pResult_len = ProtoField.uint32("Data_Store_GetNewArrivedNotificationsV1_pResult_len", "pResult length (uint32)")
F.Data_Store_GetNewArrivedNotificationsV1_pHasNext = ProtoField.bool("Data_Store_GetNewArrivedNotificationsV1_pHasNext", "pHasNext (bool)")
F.Data_Store_RateObject_fetchRatings = ProtoField.bool("Data_Store_RateObject_fetchRatings", "fetchRatings (bool)")
F.Data_Store_GetRating_accessPassword = ProtoField.uint64("Data_Store_GetRating_accessPassword", "accessPassword (uint64)")
F.Data_Store_GetRatings_dataIds_len = ProtoField.uint32("Data_Store_GetRatings_dataIds_len", "dataIds length (uint32)")
F.Data_Store_GetRatings_dataIds_item = ProtoField.uint64("Data_Store_GetRatings_dataIds_item", "dataIds (uint64)")
F.Data_Store_GetRatings_accessPassword = ProtoField.uint64("Data_Store_GetRatings_accessPassword", "accessPassword (uint64)")
F.Data_Store_GetRatings_pResults_len = ProtoField.uint32("Data_Store_GetRatings_pResults_len", "pResults length (uint32)")
F.Data_Store_GetRatings_pResults_item = ProtoField.uint32("Data_Store_GetRatings_pResults_item", "pResults (uint32)")
F.Data_Store_ResetRating_updatePassword = ProtoField.uint64("Data_Store_ResetRating_updatePassword", "updatePassword (uint64)")
F.Data_Store_ResetRatings_dataIds_len = ProtoField.uint32("Data_Store_ResetRatings_dataIds_len", "dataIds length (uint32)")
F.Data_Store_ResetRatings_dataIds_item = ProtoField.uint64("Data_Store_ResetRatings_dataIds_item", "dataIds (uint64)")
F.Data_Store_ResetRatings_transactional = ProtoField.bool("Data_Store_ResetRatings_transactional", "transactional (bool)")
F.Data_Store_ResetRatings_pResults_len = ProtoField.uint32("Data_Store_ResetRatings_pResults_len", "pResults length (uint32)")
F.Data_Store_ResetRatings_pResults_item = ProtoField.uint32("Data_Store_ResetRatings_pResults_item", "pResults (uint32)")
F.Data_Store_GetSpecificMetaV1_pMetaInfos_len = ProtoField.uint32("Data_Store_GetSpecificMetaV1_pMetaInfos_len", "pMetaInfos length (uint32)")
F.Data_Store_PostMetaBinary_dataId = ProtoField.uint64("Data_Store_PostMetaBinary_dataId", "dataId (uint64)")
F.Data_Store_GetRatingWithLog_accessPassword = ProtoField.uint64("Data_Store_GetRatingWithLog_accessPassword", "accessPassword (uint64)")
F.Data_Store_GetNewArrivedNotifications_pResult_len = ProtoField.uint32("Data_Store_GetNewArrivedNotifications_pResult_len", "pResult length (uint32)")
F.Data_Store_GetNewArrivedNotifications_pHasNext = ProtoField.bool("Data_Store_GetNewArrivedNotifications_pHasNext", "pHasNext (bool)")
F.Data_Store_GetSpecificMeta_pMetaInfos_len = ProtoField.uint32("Data_Store_GetSpecificMeta_pMetaInfos_len", "pMetaInfos length (uint32)")
F.Data_Store_GetPersistenceInfo_ownerId = ProtoField.uint32("Data_Store_GetPersistenceInfo_ownerId", "ownerId (uint32)")
F.Data_Store_GetPersistenceInfo_persistenceSlotId = ProtoField.uint16("Data_Store_GetPersistenceInfo_persistenceSlotId", "persistenceSlotId (uint16)")
F.Data_Store_GetPersistenceInfos_ownerId = ProtoField.uint32("Data_Store_GetPersistenceInfos_ownerId", "ownerId (uint32)")
F.Data_Store_GetPersistenceInfos_persistenceSlotIds_len = ProtoField.uint32("Data_Store_GetPersistenceInfos_persistenceSlotIds_len", "persistenceSlotIds length (uint32)")
F.Data_Store_GetPersistenceInfos_persistenceSlotIds_item = ProtoField.uint16("Data_Store_GetPersistenceInfos_persistenceSlotIds_item", "persistenceSlotIds (uint16)")
F.Data_Store_GetPersistenceInfos_pPersistenceInfo_len = ProtoField.uint32("Data_Store_GetPersistenceInfos_pPersistenceInfo_len", "pPersistenceInfo length (uint32)")
F.Data_Store_GetPersistenceInfos_pResults_len = ProtoField.uint32("Data_Store_GetPersistenceInfos_pResults_len", "pResults length (uint32)")
F.Data_Store_GetPersistenceInfos_pResults_item = ProtoField.uint32("Data_Store_GetPersistenceInfos_pResults_item", "pResults (uint32)")
F.Data_Store_PerpetuateObject_persistenceSlotId = ProtoField.uint16("Data_Store_PerpetuateObject_persistenceSlotId", "persistenceSlotId (uint16)")
F.Data_Store_PerpetuateObject_dataId = ProtoField.uint64("Data_Store_PerpetuateObject_dataId", "dataId (uint64)")
F.Data_Store_PerpetuateObject_deleteLastObject = ProtoField.bool("Data_Store_PerpetuateObject_deleteLastObject", "deleteLastObject (bool)")
F.Data_Store_UnperpetuateObject_persistenceSlotId = ProtoField.uint16("Data_Store_UnperpetuateObject_persistenceSlotId", "persistenceSlotId (uint16)")
F.Data_Store_UnperpetuateObject_deleteLastObject = ProtoField.bool("Data_Store_UnperpetuateObject_deleteLastObject", "deleteLastObject (bool)")
F.Data_Store_GetPasswordInfo_dataId = ProtoField.uint64("Data_Store_GetPasswordInfo_dataId", "dataId (uint64)")
F.Data_Store_GetPasswordInfos_dataIds_len = ProtoField.uint32("Data_Store_GetPasswordInfos_dataIds_len", "dataIds length (uint32)")
F.Data_Store_GetPasswordInfos_dataIds_item = ProtoField.uint64("Data_Store_GetPasswordInfos_dataIds_item", "dataIds (uint64)")
F.Data_Store_GetPasswordInfos_pPasswordInfos_len = ProtoField.uint32("Data_Store_GetPasswordInfos_pPasswordInfos_len", "pPasswordInfos length (uint32)")
F.Data_Store_GetPasswordInfos_pResults_len = ProtoField.uint32("Data_Store_GetPasswordInfos_pResults_len", "pResults length (uint32)")
F.Data_Store_GetPasswordInfos_pResults_item = ProtoField.uint32("Data_Store_GetPasswordInfos_pResults_item", "pResults (uint32)")
F.Data_Store_GetMetasMultipleParam_params_len = ProtoField.uint32("Data_Store_GetMetasMultipleParam_params_len", "params length (uint32)")
F.Data_Store_GetMetasMultipleParam_pMetaInfo_len = ProtoField.uint32("Data_Store_GetMetasMultipleParam_pMetaInfo_len", "pMetaInfo length (uint32)")
F.Data_Store_GetMetasMultipleParam_pResults_len = ProtoField.uint32("Data_Store_GetMetasMultipleParam_pResults_len", "pResults length (uint32)")
F.Data_Store_GetMetasMultipleParam_pResults_item = ProtoField.uint32("Data_Store_GetMetasMultipleParam_pResults_item", "pResults (uint32)")
F.Data_Store_CompletePostObjects_dataIds_len = ProtoField.uint32("Data_Store_CompletePostObjects_dataIds_len", "dataIds length (uint32)")
F.Data_Store_CompletePostObjects_dataIds_item = ProtoField.uint64("Data_Store_CompletePostObjects_dataIds_item", "dataIds (uint64)")
F.Data_Store_ChangeMetas_dataIds_len = ProtoField.uint32("Data_Store_ChangeMetas_dataIds_len", "dataIds length (uint32)")
F.Data_Store_ChangeMetas_dataIds_item = ProtoField.uint64("Data_Store_ChangeMetas_dataIds_item", "dataIds (uint64)")
F.Data_Store_ChangeMetas_params_len = ProtoField.uint32("Data_Store_ChangeMetas_params_len", "params length (uint32)")
F.Data_Store_ChangeMetas_transactional = ProtoField.bool("Data_Store_ChangeMetas_transactional", "transactional (bool)")
F.Data_Store_ChangeMetas_pResults_len = ProtoField.uint32("Data_Store_ChangeMetas_pResults_len", "pResults length (uint32)")
F.Data_Store_ChangeMetas_pResults_item = ProtoField.uint32("Data_Store_ChangeMetas_pResults_item", "pResults (uint32)")
F.Data_Store_RateObjects_targets_len = ProtoField.uint32("Data_Store_RateObjects_targets_len", "targets length (uint32)")
F.Data_Store_RateObjects_params_len = ProtoField.uint32("Data_Store_RateObjects_params_len", "params length (uint32)")
F.Data_Store_RateObjects_transactional = ProtoField.bool("Data_Store_RateObjects_transactional", "transactional (bool)")
F.Data_Store_RateObjects_fetchRatings = ProtoField.bool("Data_Store_RateObjects_fetchRatings", "fetchRatings (bool)")
F.Data_Store_RateObjects_pRatings_len = ProtoField.uint32("Data_Store_RateObjects_pRatings_len", "pRatings length (uint32)")
F.Data_Store_RateObjects_pResults_len = ProtoField.uint32("Data_Store_RateObjects_pResults_len", "pResults length (uint32)")
F.Data_Store_RateObjects_pResults_item = ProtoField.uint32("Data_Store_RateObjects_pResults_item", "pResults (uint32)")
F.Data_Store_PostMetaBinaryWithDataId_dataId = ProtoField.uint64("Data_Store_PostMetaBinaryWithDataId_dataId", "dataId (uint64)")
F.Data_Store_PostMetaBinariesWithDataId_dataIds_len = ProtoField.uint32("Data_Store_PostMetaBinariesWithDataId_dataIds_len", "dataIds length (uint32)")
F.Data_Store_PostMetaBinariesWithDataId_dataIds_item = ProtoField.uint64("Data_Store_PostMetaBinariesWithDataId_dataIds_item", "dataIds (uint64)")
F.Data_Store_PostMetaBinariesWithDataId_params_len = ProtoField.uint32("Data_Store_PostMetaBinariesWithDataId_params_len", "params length (uint32)")
F.Data_Store_PostMetaBinariesWithDataId_transactional = ProtoField.bool("Data_Store_PostMetaBinariesWithDataId_transactional", "transactional (bool)")
F.Data_Store_PostMetaBinariesWithDataId_pResults_len = ProtoField.uint32("Data_Store_PostMetaBinariesWithDataId_pResults_len", "pResults length (uint32)")
F.Data_Store_PostMetaBinariesWithDataId_pResults_item = ProtoField.uint32("Data_Store_PostMetaBinariesWithDataId_pResults_item", "pResults (uint32)")
F.Data_Store_RateObjectWithPosting_fetchRatings = ProtoField.bool("Data_Store_RateObjectWithPosting_fetchRatings", "fetchRatings (bool)")
F.Data_Store_RateObjectsWithPosting_targets_len = ProtoField.uint32("Data_Store_RateObjectsWithPosting_targets_len", "targets length (uint32)")
F.Data_Store_RateObjectsWithPosting_rateParams_len = ProtoField.uint32("Data_Store_RateObjectsWithPosting_rateParams_len", "rateParams length (uint32)")
F.Data_Store_RateObjectsWithPosting_postParams_len = ProtoField.uint32("Data_Store_RateObjectsWithPosting_postParams_len", "postParams length (uint32)")
F.Data_Store_RateObjectsWithPosting_transactional = ProtoField.bool("Data_Store_RateObjectsWithPosting_transactional", "transactional (bool)")
F.Data_Store_RateObjectsWithPosting_fetchRatings = ProtoField.bool("Data_Store_RateObjectsWithPosting_fetchRatings", "fetchRatings (bool)")
F.Data_Store_RateObjectsWithPosting_pRatings_len = ProtoField.uint32("Data_Store_RateObjectsWithPosting_pRatings_len", "pRatings length (uint32)")
F.Data_Store_RateObjectsWithPosting_pResults_len = ProtoField.uint32("Data_Store_RateObjectsWithPosting_pResults_len", "pResults length (uint32)")
F.Data_Store_RateObjectsWithPosting_pResults_item = ProtoField.uint32("Data_Store_RateObjectsWithPosting_pResults_item", "pResults (uint32)")
F.Data_Store_GetObjectInfos_dataIds_len = ProtoField.uint32("Data_Store_GetObjectInfos_dataIds_len", "dataIds length (uint32)")
F.Data_Store_GetObjectInfos_dataIds_item = ProtoField.uint64("Data_Store_GetObjectInfos_dataIds_item", "dataIds (uint64)")
F.Data_Store_GetObjectInfos_pInfos_len = ProtoField.uint32("Data_Store_GetObjectInfos_pInfos_len", "pInfos length (uint32)")
F.Data_Store_GetObjectInfos_pResults_len = ProtoField.uint32("Data_Store_GetObjectInfos_pResults_len", "pResults length (uint32)")
F.Data_Store_GetObjectInfos_pResults_item = ProtoField.uint32("Data_Store_GetObjectInfos_pResults_item", "pResults (uint32)")
F.Data_Store_AddToBufferQueue_buffer_len = ProtoField.uint16("Data_Store_AddToBufferQueue_buffer_len", "buffer length (Buffer)")
F.Data_Store_AddToBufferQueue_buffer_data = ProtoField.bytes("Data_Store_AddToBufferQueue_buffer_data", "buffer data (Buffer)")
F.Data_Store_AddToBufferQueues_params_len = ProtoField.uint32("Data_Store_AddToBufferQueues_params_len", "params length (uint32)")
F.Data_Store_AddToBufferQueues_buffers_len = ProtoField.uint32("Data_Store_AddToBufferQueues_buffers_len", "buffers length (uint32)")
F.Data_Store_AddToBufferQueues_buffers_item_len = ProtoField.uint16("Data_Store_AddToBufferQueues_buffers_item_len", "buffers length (Buffer)")
F.Data_Store_AddToBufferQueues_buffers_item_data = ProtoField.bytes("Data_Store_AddToBufferQueues_buffers_item_data", "buffers data (Buffer)")
F.Data_Store_AddToBufferQueues_pResults_len = ProtoField.uint32("Data_Store_AddToBufferQueues_pResults_len", "pResults length (uint32)")
F.Data_Store_AddToBufferQueues_pResults_item = ProtoField.uint32("Data_Store_AddToBufferQueues_pResults_item", "pResults (uint32)")
F.Data_Store_GetBufferQueue_pBufferQueue_len = ProtoField.uint32("Data_Store_GetBufferQueue_pBufferQueue_len", "pBufferQueue length (uint32)")
F.Data_Store_GetBufferQueue_pBufferQueue_item_len = ProtoField.uint16("Data_Store_GetBufferQueue_pBufferQueue_item_len", "pBufferQueue length (Buffer)")
F.Data_Store_GetBufferQueue_pBufferQueue_item_data = ProtoField.bytes("Data_Store_GetBufferQueue_pBufferQueue_item_data", "pBufferQueue data (Buffer)")
F.Data_Store_GetBufferQueues_params_len = ProtoField.uint32("Data_Store_GetBufferQueues_params_len", "params length (uint32)")
F.Data_Store_GetBufferQueues_pResults_len = ProtoField.uint32("Data_Store_GetBufferQueues_pResults_len", "pResults length (uint32)")
F.Data_Store_GetBufferQueues_pResults_item = ProtoField.uint32("Data_Store_GetBufferQueues_pResults_item", "pResults (uint32)")
F.Data_Store_ClearBufferQueues_params_len = ProtoField.uint32("Data_Store_ClearBufferQueues_params_len", "params length (uint32)")
F.Data_Store_ClearBufferQueues_pResults_len = ProtoField.uint32("Data_Store_ClearBufferQueues_pResults_len", "pResults length (uint32)")
F.Data_Store_ClearBufferQueues_pResults_item = ProtoField.uint32("Data_Store_ClearBufferQueues_pResults_item", "pResults (uint32)")
F.Data_Store_SearchBalloon_pResults_len = ProtoField.uint32("Data_Store_SearchBalloon_pResults_len", "pResults length (uint32)")
F.Utility_AcquireNexUniqueId_pNexUniqueId = ProtoField.uint64("Utility_AcquireNexUniqueId_pNexUniqueId", "pNexUniqueId (uint64)")
F.Utility_AssociateNexUniqueIdsWithMyPrincipalId_uniqueIdInfo_len = ProtoField.uint32("Utility_AssociateNexUniqueIdsWithMyPrincipalId_uniqueIdInfo_len", "uniqueIdInfo length (uint32)")
F.Utility_GetAssociatedNexUniqueIdsWithMyPrincipalId_pUniqueIdInfo_len = ProtoField.uint32("Utility_GetAssociatedNexUniqueIdsWithMyPrincipalId_pUniqueIdInfo_len", "pUniqueIdInfo length (uint32)")
F.Utility_GetIntegerSettings_integerSettingIndex = ProtoField.uint32("Utility_GetIntegerSettings_integerSettingIndex", "integerSettingIndex (uint32)")
F.Utility_GetStringSettings_stringSettingIndex = ProtoField.uint32("Utility_GetStringSettings_stringSettingIndex", "stringSettingIndex (uint32)")
F.Ranking_UploadScore_uniqueId = ProtoField.uint64("Ranking_UploadScore_uniqueId", "uniqueId (uint64)")
F.Ranking_DeleteScore_category = ProtoField.uint32("Ranking_DeleteScore_category", "category (uint32)")
F.Ranking_DeleteScore_uniqueId = ProtoField.uint64("Ranking_DeleteScore_uniqueId", "uniqueId (uint64)")
F.Ranking_DeleteAllScores_uniqueId = ProtoField.uint64("Ranking_DeleteAllScores_uniqueId", "uniqueId (uint64)")
F.Ranking_UploadCommonData_commonData_len = ProtoField.uint32("Ranking_UploadCommonData_commonData_len", "commonData length (Buffer)")
F.Ranking_UploadCommonData_commonData_data = ProtoField.bytes("Ranking_UploadCommonData_commonData_data", "commonData data (Buffer)")
F.Ranking_UploadCommonData_uniqueId = ProtoField.uint64("Ranking_UploadCommonData_uniqueId", "uniqueId (uint64)")
F.Ranking_DeleteCommonData_uniqueId = ProtoField.uint64("Ranking_DeleteCommonData_uniqueId", "uniqueId (uint64)")
F.Ranking_GetCommonData_uniqueId = ProtoField.uint64("Ranking_GetCommonData_uniqueId", "uniqueId (uint64)")
F.Ranking_GetCommonData_commonData_len = ProtoField.uint32("Ranking_GetCommonData_commonData_len", "commonData length (Buffer)")
F.Ranking_GetCommonData_commonData_data = ProtoField.bytes("Ranking_GetCommonData_commonData_data", "commonData data (Buffer)")
F.Ranking_ChangeAttributes_category = ProtoField.uint32("Ranking_ChangeAttributes_category", "category (uint32)")
F.Ranking_ChangeAttributes_uniqueId = ProtoField.uint64("Ranking_ChangeAttributes_uniqueId", "uniqueId (uint64)")
F.Ranking_ChangeAllAttributes_uniqueId = ProtoField.uint64("Ranking_ChangeAllAttributes_uniqueId", "uniqueId (uint64)")
F.Ranking_GetRanking_rankingMode = ProtoField.uint8("Ranking_GetRanking_rankingMode", "rankingMode (uint8)")
F.Ranking_GetRanking_category = ProtoField.uint32("Ranking_GetRanking_category", "category (uint32)")
F.Ranking_GetRanking_uniqueId = ProtoField.uint64("Ranking_GetRanking_uniqueId", "uniqueId (uint64)")
F.Ranking_GetRanking_principalId = ProtoField.uint32("Ranking_GetRanking_principalId", "principalId (uint32)")
F.Ranking_GetApproxOrder_category = ProtoField.uint32("Ranking_GetApproxOrder_category", "category (uint32)")
F.Ranking_GetApproxOrder_score = ProtoField.uint32("Ranking_GetApproxOrder_score", "score (uint32)")
F.Ranking_GetApproxOrder_uniqueId = ProtoField.uint64("Ranking_GetApproxOrder_uniqueId", "uniqueId (uint64)")
F.Ranking_GetApproxOrder_principalId = ProtoField.uint32("Ranking_GetApproxOrder_principalId", "principalId (uint32)")
F.Ranking_GetApproxOrder_pOrder = ProtoField.uint32("Ranking_GetApproxOrder_pOrder", "pOrder (uint32)")
F.Ranking_GetStats_category = ProtoField.uint32("Ranking_GetStats_category", "category (uint32)")
F.Ranking_GetStats_flags = ProtoField.uint32("Ranking_GetStats_flags", "flags (uint32)")
F.Ranking_GetRankingByPIDList_principalIdList_len = ProtoField.uint32("Ranking_GetRankingByPIDList_principalIdList_len", "principalIdList length (uint32)")
F.Ranking_GetRankingByPIDList_principalIdList_item = ProtoField.uint32("Ranking_GetRankingByPIDList_principalIdList_item", "principalIdList (uint32)")
F.Ranking_GetRankingByPIDList_rankingMode = ProtoField.uint8("Ranking_GetRankingByPIDList_rankingMode", "rankingMode (uint8)")
F.Ranking_GetRankingByPIDList_category = ProtoField.uint32("Ranking_GetRankingByPIDList_category", "category (uint32)")
F.Ranking_GetRankingByPIDList_uniqueId = ProtoField.uint64("Ranking_GetRankingByPIDList_uniqueId", "uniqueId (uint64)")
F.Ranking_GetRankingByUniqueIdList_nexUniqueIdList_len = ProtoField.uint32("Ranking_GetRankingByUniqueIdList_nexUniqueIdList_len", "nexUniqueIdList length (uint32)")
F.Ranking_GetRankingByUniqueIdList_nexUniqueIdList_item = ProtoField.uint64("Ranking_GetRankingByUniqueIdList_nexUniqueIdList_item", "nexUniqueIdList (uint64)")
F.Ranking_GetRankingByUniqueIdList_rankingMode = ProtoField.uint8("Ranking_GetRankingByUniqueIdList_rankingMode", "rankingMode (uint8)")
F.Ranking_GetRankingByUniqueIdList_category = ProtoField.uint32("Ranking_GetRankingByUniqueIdList_category", "category (uint32)")
F.Ranking_GetRankingByUniqueIdList_uniqueId = ProtoField.uint64("Ranking_GetRankingByUniqueIdList_uniqueId", "uniqueId (uint64)")
F.Ranking_GetCachedTopXRanking_category = ProtoField.uint32("Ranking_GetCachedTopXRanking_category", "category (uint32)")
F.Ranking_GetCachedTopXRankings_categories_len = ProtoField.uint32("Ranking_GetCachedTopXRankings_categories_len", "categories length (uint32)")
F.Ranking_GetCachedTopXRankings_categories_item = ProtoField.uint32("Ranking_GetCachedTopXRankings_categories_item", "categories (uint32)")
F.Ranking_GetCachedTopXRankings_orderParams_len = ProtoField.uint32("Ranking_GetCachedTopXRankings_orderParams_len", "orderParams length (uint32)")
F.Ranking_GetCachedTopXRankings_pResults_len = ProtoField.uint32("Ranking_GetCachedTopXRankings_pResults_len", "pResults length (uint32)")
F.Friends_3DS_UpdatePlayedGames_Played_games_len = ProtoField.uint32("Friends_3DS_UpdatePlayedGames_Played_games_len", "Played games length (uint32)")
F.Friends_3DS_UpdatePreference_Unknown = ProtoField.bool("Friends_3DS_UpdatePreference_Unknown", "Unknown (bool)")
F.Friends_3DS_UpdatePreference_Unknown = ProtoField.bool("Friends_3DS_UpdatePreference_Unknown", "Unknown (bool)")
F.Friends_3DS_UpdatePreference_Unknown = ProtoField.bool("Friends_3DS_UpdatePreference_Unknown", "Unknown (bool)")
F.Friends_3DS_GetFriendMii_Friends_len = ProtoField.uint32("Friends_3DS_GetFriendMii_Friends_len", "Friends length (uint32)")
F.Friends_3DS_GetFriendMiiList_Friends_len = ProtoField.uint32("Friends_3DS_GetFriendMiiList_Friends_len", "Friends length (uint32)")
F.Friends_3DS_GetFriendMiiList_Mii_lists_len = ProtoField.uint32("Friends_3DS_GetFriendMiiList_Mii_lists_len", "Mii lists length (uint32)")
F.Friends_3DS_GetFriendRelationships_Unknown_len = ProtoField.uint32("Friends_3DS_GetFriendRelationships_Unknown_len", "Unknown length (uint32)")
F.Friends_3DS_GetFriendRelationships_Unknown_item = ProtoField.uint32("Friends_3DS_GetFriendRelationships_Unknown_item", "Unknown (uint32)")
F.Friends_3DS_GetFriendRelationships_Friend_relationships_len = ProtoField.uint32("Friends_3DS_GetFriendRelationships_Friend_relationships_len", "Friend relationships length (uint32)")
F.Friends_3DS_AddFriendByPrincipalID_Unknown = ProtoField.uint64("Friends_3DS_AddFriendByPrincipalID_Unknown", "Unknown (uint64)")
F.Friends_3DS_AddFriendByPrincipalID_Principal_id = ProtoField.uint32("Friends_3DS_AddFriendByPrincipalID_Principal_id", "Principal id (uint32)")
F.Friends_3DS_GetAllFriends_Friend_relationships_len = ProtoField.uint32("Friends_3DS_GetAllFriends_Friend_relationships_len", "Friend relationships length (uint32)")
F.Friends_3DS_SyncFriend_Unknown = ProtoField.uint64("Friends_3DS_SyncFriend_Unknown", "Unknown (uint64)")
F.Friends_3DS_SyncFriend_Unknown_len = ProtoField.uint32("Friends_3DS_SyncFriend_Unknown_len", "Unknown length (uint32)")
F.Friends_3DS_SyncFriend_Unknown_item = ProtoField.uint32("Friends_3DS_SyncFriend_Unknown_item", "Unknown (uint32)")
F.Friends_3DS_SyncFriend_Unknown_len = ProtoField.uint32("Friends_3DS_SyncFriend_Unknown_len", "Unknown length (uint32)")
F.Friends_3DS_SyncFriend_Unknown_item = ProtoField.uint64("Friends_3DS_SyncFriend_Unknown_item", "Unknown (uint64)")
F.Friends_3DS_SyncFriend_Friend_list_len = ProtoField.uint32("Friends_3DS_SyncFriend_Friend_list_len", "Friend list length (uint32)")
F.Friends_3DS_UpdatePresence_Unknown = ProtoField.bool("Friends_3DS_UpdatePresence_Unknown", "Unknown (bool)")
F.Friends_3DS_UpdateComment_Comment_len = ProtoField.uint16("Friends_3DS_UpdateComment_Comment_len", "Comment length (String)")
F.Friends_3DS_UpdateComment_Comment_data = ProtoField.string("Friends_3DS_UpdateComment_Comment_data", "Comment data (String)")
F.Friends_3DS_GetFriendPresence_Unknown_len = ProtoField.uint32("Friends_3DS_GetFriendPresence_Unknown_len", "Unknown length (uint32)")
F.Friends_3DS_GetFriendPresence_Unknown_item = ProtoField.uint32("Friends_3DS_GetFriendPresence_Unknown_item", "Unknown (uint32)")
F.Friends_3DS_GetFriendPresence_Friend_presence_list_len = ProtoField.uint32("Friends_3DS_GetFriendPresence_Friend_presence_list_len", "Friend presence list length (uint32)")
F.Friends_3DS_GetFriendPicture_Unknown_len = ProtoField.uint32("Friends_3DS_GetFriendPicture_Unknown_len", "Unknown length (uint32)")
F.Friends_3DS_GetFriendPicture_Unknown_item = ProtoField.uint32("Friends_3DS_GetFriendPicture_Unknown_item", "Unknown (uint32)")
F.Friends_3DS_GetFriendPicture_Friend_pictures_len = ProtoField.uint32("Friends_3DS_GetFriendPicture_Friend_pictures_len", "Friend pictures length (uint32)")
F.Friends_3DS_GetFriendPersistentInfo_Unknown_len = ProtoField.uint32("Friends_3DS_GetFriendPersistentInfo_Unknown_len", "Unknown length (uint32)")
F.Friends_3DS_GetFriendPersistentInfo_Unknown_item = ProtoField.uint32("Friends_3DS_GetFriendPersistentInfo_Unknown_item", "Unknown (uint32)")
F.Friends_3DS_GetFriendPersistentInfo_Persistent_info_len = ProtoField.uint32("Friends_3DS_GetFriendPersistentInfo_Persistent_info_len", "Persistent info length (uint32)")
F.Friends_3DS_SendInvitation_Unknown_len = ProtoField.uint32("Friends_3DS_SendInvitation_Unknown_len", "Unknown length (uint32)")
F.Friends_3DS_SendInvitation_Unknown_item = ProtoField.uint32("Friends_3DS_SendInvitation_Unknown_item", "Unknown (uint32)")
F.NAT_Traversal_RequestProbeInitiation_urlTargetList_len = ProtoField.uint32("NAT_Traversal_RequestProbeInitiation_urlTargetList_len", "urlTargetList length (uint32)")
F.NAT_Traversal_RequestProbeInitiation_urlTargetList_item_len = ProtoField.uint16("NAT_Traversal_RequestProbeInitiation_urlTargetList_item_len", "urlTargetList length (String)")
F.NAT_Traversal_RequestProbeInitiation_urlTargetList_item_data = ProtoField.string("NAT_Traversal_RequestProbeInitiation_urlTargetList_item_data", "urlTargetList data (String)")
F.NAT_Traversal_InitiateProbe_urlStationToProbe_len = ProtoField.uint16("NAT_Traversal_InitiateProbe_urlStationToProbe_len", "urlStationToProbe length (String)")
F.NAT_Traversal_InitiateProbe_urlStationToProbe_data = ProtoField.string("NAT_Traversal_InitiateProbe_urlStationToProbe_data", "urlStationToProbe data (String)")
F.NAT_Traversal_RequestProbeInitiationExt_urlTargetList_len = ProtoField.uint32("NAT_Traversal_RequestProbeInitiationExt_urlTargetList_len", "urlTargetList length (uint32)")
F.NAT_Traversal_RequestProbeInitiationExt_urlTargetList_item_len = ProtoField.uint16("NAT_Traversal_RequestProbeInitiationExt_urlTargetList_item_len", "urlTargetList length (String)")
F.NAT_Traversal_RequestProbeInitiationExt_urlTargetList_item_data = ProtoField.string("NAT_Traversal_RequestProbeInitiationExt_urlTargetList_item_data", "urlTargetList data (String)")
F.NAT_Traversal_RequestProbeInitiationExt_urlStationToProbe_len = ProtoField.uint16("NAT_Traversal_RequestProbeInitiationExt_urlStationToProbe_len", "urlStationToProbe length (String)")
F.NAT_Traversal_RequestProbeInitiationExt_urlStationToProbe_data = ProtoField.string("NAT_Traversal_RequestProbeInitiationExt_urlStationToProbe_data", "urlStationToProbe data (String)")
F.NAT_Traversal_ReportNATTraversalResult_cid = ProtoField.uint32("NAT_Traversal_ReportNATTraversalResult_cid", "cid (uint32)")
F.NAT_Traversal_ReportNATTraversalResult_result = ProtoField.bool("NAT_Traversal_ReportNATTraversalResult_result", "result (bool)")
F.NAT_Traversal_ReportNATTraversalResult_rtt = ProtoField.uint32("NAT_Traversal_ReportNATTraversalResult_rtt", "rtt (uint32)")
F.NAT_Traversal_ReportNATProperties_natmapping = ProtoField.uint32("NAT_Traversal_ReportNATProperties_natmapping", "natmapping (uint32)")
F.NAT_Traversal_ReportNATProperties_natfiltering = ProtoField.uint32("NAT_Traversal_ReportNATProperties_natfiltering", "natfiltering (uint32)")
F.NAT_Traversal_ReportNATProperties_rtt = ProtoField.uint32("NAT_Traversal_ReportNATProperties_rtt", "rtt (uint32)")
F.NAT_Traversal_GetRelaySignatureKey_relayMode = ProtoField.int32("NAT_Traversal_GetRelaySignatureKey_relayMode", "relayMode (uint32)")
F.NAT_Traversal_GetRelaySignatureKey_currentUTCTime = ProtoField.uint64("NAT_Traversal_GetRelaySignatureKey_currentUTCTime", "currentUTCTime (uint64)")
F.NAT_Traversal_GetRelaySignatureKey_address_len = ProtoField.uint16("NAT_Traversal_GetRelaySignatureKey_address_len", "address length (String)")
F.NAT_Traversal_GetRelaySignatureKey_address_data = ProtoField.string("NAT_Traversal_GetRelaySignatureKey_address_data", "address data (String)")
F.NAT_Traversal_GetRelaySignatureKey_port = ProtoField.uint16("NAT_Traversal_GetRelaySignatureKey_port", "port (uint16)")
F.NAT_Traversal_GetRelaySignatureKey_relayAddressType = ProtoField.int32("NAT_Traversal_GetRelaySignatureKey_relayAddressType", "relayAddressType (uint32)")
F.NAT_Traversal_GetRelaySignatureKey_gameServerID = ProtoField.uint32("NAT_Traversal_GetRelaySignatureKey_gameServerID", "gameServerID (uint32)")
F.NAT_Traversal_ReportNATTraversalResultDetail_cid = ProtoField.uint32("NAT_Traversal_ReportNATTraversalResultDetail_cid", "cid (uint32)")
F.NAT_Traversal_ReportNATTraversalResultDetail_result = ProtoField.bool("NAT_Traversal_ReportNATTraversalResultDetail_result", "result (bool)")
F.NAT_Traversal_ReportNATTraversalResultDetail_detail = ProtoField.int32("NAT_Traversal_ReportNATTraversalResultDetail_detail", "detail (uint32)")
F.NAT_Traversal_ReportNATTraversalResultDetail_rtt = ProtoField.uint32("NAT_Traversal_ReportNATTraversalResultDetail_rtt", "rtt (uint32)")
F.Secure_Connection_Register_vecMyURLs_len = ProtoField.uint32("Secure_Connection_Register_vecMyURLs_len", "vecMyURLs length (uint32)")
F.Secure_Connection_Register_vecMyURLs_item_len = ProtoField.uint16("Secure_Connection_Register_vecMyURLs_item_len", "vecMyURLs length (String)")
F.Secure_Connection_Register_vecMyURLs_item_data = ProtoField.string("Secure_Connection_Register_vecMyURLs_item_data", "vecMyURLs data (String)")
F.Secure_Connection_Register_retval = ProtoField.uint32("Secure_Connection_Register_retval", "retval (uint32)")
F.Secure_Connection_Register_pidConnectionID = ProtoField.uint32("Secure_Connection_Register_pidConnectionID", "pidConnectionID (uint32)")
F.Secure_Connection_Register_urlPublic_len = ProtoField.uint16("Secure_Connection_Register_urlPublic_len", "urlPublic length (String)")
F.Secure_Connection_Register_urlPublic_data = ProtoField.string("Secure_Connection_Register_urlPublic_data", "urlPublic data (String)")
F.Secure_Connection_RequestConnectionData_cidTarget = ProtoField.uint32("Secure_Connection_RequestConnectionData_cidTarget", "cidTarget (uint32)")
F.Secure_Connection_RequestConnectionData_pidTarget = ProtoField.uint32("Secure_Connection_RequestConnectionData_pidTarget", "pidTarget (uint32)")
F.Secure_Connection_RequestConnectionData_retval = ProtoField.bool("Secure_Connection_RequestConnectionData_retval", "retval (bool)")
F.Secure_Connection_RequestUrls_cidTarget = ProtoField.uint32("Secure_Connection_RequestUrls_cidTarget", "cidTarget (uint32)")
F.Secure_Connection_RequestUrls_pidTarget = ProtoField.uint32("Secure_Connection_RequestUrls_pidTarget", "pidTarget (uint32)")
F.Secure_Connection_RequestUrls_retval = ProtoField.bool("Secure_Connection_RequestUrls_retval", "retval (bool)")
F.Secure_Connection_RequestUrls_plstURLs_len = ProtoField.uint32("Secure_Connection_RequestUrls_plstURLs_len", "plstURLs length (uint32)")
F.Secure_Connection_RequestUrls_plstURLs_item_len = ProtoField.uint16("Secure_Connection_RequestUrls_plstURLs_item_len", "plstURLs length (String)")
F.Secure_Connection_RequestUrls_plstURLs_item_data = ProtoField.string("Secure_Connection_RequestUrls_plstURLs_item_data", "plstURLs data (String)")
F.Secure_Connection_RegisterEx_vecMyURLs_len = ProtoField.uint32("Secure_Connection_RegisterEx_vecMyURLs_len", "vecMyURLs length (uint32)")
F.Secure_Connection_RegisterEx_vecMyURLs_item_len = ProtoField.uint16("Secure_Connection_RegisterEx_vecMyURLs_item_len", "vecMyURLs length (String)")
F.Secure_Connection_RegisterEx_vecMyURLs_item_data = ProtoField.string("Secure_Connection_RegisterEx_vecMyURLs_item_data", "vecMyURLs data (String)")
F.Secure_Connection_UpdateURLs_vecMyURLs_len = ProtoField.uint32("Secure_Connection_UpdateURLs_vecMyURLs_len", "vecMyURLs length (uint32)")
F.Secure_Connection_UpdateURLs_vecMyURLs_item_len = ProtoField.uint16("Secure_Connection_UpdateURLs_vecMyURLs_item_len", "vecMyURLs length (String)")
F.Secure_Connection_UpdateURLs_vecMyURLs_item_data = ProtoField.string("Secure_Connection_UpdateURLs_vecMyURLs_item_data", "vecMyURLs data (String)")
F.Secure_Connection_ReplaceURL_target_len = ProtoField.uint16("Secure_Connection_ReplaceURL_target_len", "target length (String)")
F.Secure_Connection_ReplaceURL_target_data = ProtoField.string("Secure_Connection_ReplaceURL_target_data", "target data (String)")
F.Secure_Connection_ReplaceURL_url_len = ProtoField.uint16("Secure_Connection_ReplaceURL_url_len", "url length (String)")
F.Secure_Connection_ReplaceURL_url_data = ProtoField.string("Secure_Connection_ReplaceURL_url_data", "url data (String)")
F.Secure_Connection_SendReport_reportId = ProtoField.uint32("Secure_Connection_SendReport_reportId", "reportId (uint32)")
F.Secure_Connection_SendReport_reportData_len = ProtoField.uint16("Secure_Connection_SendReport_reportData_len", "reportData length (Buffer)")
F.Secure_Connection_SendReport_reportData_data = ProtoField.bytes("Secure_Connection_SendReport_reportData_data", "reportData data (Buffer)")
F.Matchmake_Extension_CloseParticipation_gid = ProtoField.uint32("Matchmake_Extension_CloseParticipation_gid", "gid (uint32)")
F.Matchmake_Extension_OpenParticipation_gid = ProtoField.uint32("Matchmake_Extension_OpenParticipation_gid", "gid (uint32)")
F.Matchmake_Extension_AutoMatchmake_Postpone_anyGathering_data_bytes = ProtoField.bytes("Matchmake_Extension_AutoMatchmake_Postpone_anyGathering_data_bytes", "anyGathering data bytes (bytes)")
F.Matchmake_Extension_AutoMatchmake_Postpone_anyGathering_type_name_len = ProtoField.uint16("Matchmake_Extension_AutoMatchmake_Postpone_anyGathering_type_name_len", "anyGathering_type_name length (String)")
F.Matchmake_Extension_AutoMatchmake_Postpone_anyGathering_type_name_data = ProtoField.string("Matchmake_Extension_AutoMatchmake_Postpone_anyGathering_type_name_data", "anyGathering_type_name data (String)")
F.Matchmake_Extension_AutoMatchmake_Postpone_anyGathering_len_plus_four = ProtoField.uint32("Matchmake_Extension_AutoMatchmake_Postpone_anyGathering_len_plus_four", "anyGathering_len_plus_four (uint32)")
F.Matchmake_Extension_AutoMatchmake_Postpone_anyGathering_data_len = ProtoField.uint32("Matchmake_Extension_AutoMatchmake_Postpone_anyGathering_data_len", "anyGathering_data_len (uint32)")
F.Matchmake_Extension_AutoMatchmake_Postpone_strMessage_len = ProtoField.uint16("Matchmake_Extension_AutoMatchmake_Postpone_strMessage_len", "strMessage length (String)")
F.Matchmake_Extension_AutoMatchmake_Postpone_strMessage_data = ProtoField.string("Matchmake_Extension_AutoMatchmake_Postpone_strMessage_data", "strMessage data (String)")
F.Matchmake_Extension_AutoMatchmake_Postpone_joinedGathering_data_bytes = ProtoField.bytes("Matchmake_Extension_AutoMatchmake_Postpone_joinedGathering_data_bytes", "joinedGathering data bytes (bytes)")
F.Matchmake_Extension_AutoMatchmake_Postpone_joinedGathering_type_name_len = ProtoField.uint16("Matchmake_Extension_AutoMatchmake_Postpone_joinedGathering_type_name_len", "joinedGathering_type_name length (String)")
F.Matchmake_Extension_AutoMatchmake_Postpone_joinedGathering_type_name_data = ProtoField.string("Matchmake_Extension_AutoMatchmake_Postpone_joinedGathering_type_name_data", "joinedGathering_type_name data (String)")
F.Matchmake_Extension_AutoMatchmake_Postpone_joinedGathering_len_plus_four = ProtoField.uint32("Matchmake_Extension_AutoMatchmake_Postpone_joinedGathering_len_plus_four", "joinedGathering_len_plus_four (uint32)")
F.Matchmake_Extension_AutoMatchmake_Postpone_joinedGathering_data_len = ProtoField.uint32("Matchmake_Extension_AutoMatchmake_Postpone_joinedGathering_data_len", "joinedGathering_data_len (uint32)")
F.Matchmake_Extension_BrowseMatchmakeSession_lstGathering_len = ProtoField.uint32("Matchmake_Extension_BrowseMatchmakeSession_lstGathering_len", "lstGathering length (uint32)")
F.Matchmake_Extension_BrowseMatchmakeSession_lstGathering_item_data_bytes = ProtoField.bytes("Matchmake_Extension_BrowseMatchmakeSession_lstGathering_item_data_bytes", "lstGathering data bytes (bytes)")
F.Matchmake_Extension_BrowseMatchmakeSession_lstGathering_item_type_name_len = ProtoField.uint16("Matchmake_Extension_BrowseMatchmakeSession_lstGathering_item_type_name_len", "lstGathering_type_name length (String)")
F.Matchmake_Extension_BrowseMatchmakeSession_lstGathering_item_type_name_data = ProtoField.string("Matchmake_Extension_BrowseMatchmakeSession_lstGathering_item_type_name_data", "lstGathering_type_name data (String)")
F.Matchmake_Extension_BrowseMatchmakeSession_lstGathering_item_len_plus_four = ProtoField.uint32("Matchmake_Extension_BrowseMatchmakeSession_lstGathering_item_len_plus_four", "lstGathering_len_plus_four (uint32)")
F.Matchmake_Extension_BrowseMatchmakeSession_lstGathering_item_data_len = ProtoField.uint32("Matchmake_Extension_BrowseMatchmakeSession_lstGathering_item_data_len", "lstGathering_data_len (uint32)")
F.Matchmake_Extension_BrowseMatchmakeSessionWithHostUrls_lstGathering_len = ProtoField.uint32("Matchmake_Extension_BrowseMatchmakeSessionWithHostUrls_lstGathering_len", "lstGathering length (uint32)")
F.Matchmake_Extension_BrowseMatchmakeSessionWithHostUrls_lstGathering_item_data_bytes = ProtoField.bytes("Matchmake_Extension_BrowseMatchmakeSessionWithHostUrls_lstGathering_item_data_bytes", "lstGathering data bytes (bytes)")
F.Matchmake_Extension_BrowseMatchmakeSessionWithHostUrls_lstGathering_item_type_name_len = ProtoField.uint16("Matchmake_Extension_BrowseMatchmakeSessionWithHostUrls_lstGathering_item_type_name_len", "lstGathering_type_name length (String)")
F.Matchmake_Extension_BrowseMatchmakeSessionWithHostUrls_lstGathering_item_type_name_data = ProtoField.string("Matchmake_Extension_BrowseMatchmakeSessionWithHostUrls_lstGathering_item_type_name_data", "lstGathering_type_name data (String)")
F.Matchmake_Extension_BrowseMatchmakeSessionWithHostUrls_lstGathering_item_len_plus_four = ProtoField.uint32("Matchmake_Extension_BrowseMatchmakeSessionWithHostUrls_lstGathering_item_len_plus_four", "lstGathering_len_plus_four (uint32)")
F.Matchmake_Extension_BrowseMatchmakeSessionWithHostUrls_lstGathering_item_data_len = ProtoField.uint32("Matchmake_Extension_BrowseMatchmakeSessionWithHostUrls_lstGathering_item_data_len", "lstGathering_data_len (uint32)")
F.Matchmake_Extension_BrowseMatchmakeSessionWithHostUrls_lstGatheringUrls_len = ProtoField.uint32("Matchmake_Extension_BrowseMatchmakeSessionWithHostUrls_lstGatheringUrls_len", "lstGatheringUrls length (uint32)")
F.Matchmake_Extension_CreateMatchmakeSession_anyGathering_data_bytes = ProtoField.bytes("Matchmake_Extension_CreateMatchmakeSession_anyGathering_data_bytes", "anyGathering data bytes (bytes)")
F.Matchmake_Extension_CreateMatchmakeSession_anyGathering_type_name_len = ProtoField.uint16("Matchmake_Extension_CreateMatchmakeSession_anyGathering_type_name_len", "anyGathering_type_name length (String)")
F.Matchmake_Extension_CreateMatchmakeSession_anyGathering_type_name_data = ProtoField.string("Matchmake_Extension_CreateMatchmakeSession_anyGathering_type_name_data", "anyGathering_type_name data (String)")
F.Matchmake_Extension_CreateMatchmakeSession_anyGathering_len_plus_four = ProtoField.uint32("Matchmake_Extension_CreateMatchmakeSession_anyGathering_len_plus_four", "anyGathering_len_plus_four (uint32)")
F.Matchmake_Extension_CreateMatchmakeSession_anyGathering_data_len = ProtoField.uint32("Matchmake_Extension_CreateMatchmakeSession_anyGathering_data_len", "anyGathering_data_len (uint32)")
F.Matchmake_Extension_CreateMatchmakeSession_strMessage_len = ProtoField.uint16("Matchmake_Extension_CreateMatchmakeSession_strMessage_len", "strMessage length (String)")
F.Matchmake_Extension_CreateMatchmakeSession_strMessage_data = ProtoField.string("Matchmake_Extension_CreateMatchmakeSession_strMessage_data", "strMessage data (String)")
F.Matchmake_Extension_CreateMatchmakeSession_participationCount = ProtoField.uint16("Matchmake_Extension_CreateMatchmakeSession_participationCount", "participationCount (uint16)")
F.Matchmake_Extension_CreateMatchmakeSession_gid = ProtoField.uint32("Matchmake_Extension_CreateMatchmakeSession_gid", "gid (uint32)")
F.Matchmake_Extension_CreateMatchmakeSession_sessionKey_len = ProtoField.uint32("Matchmake_Extension_CreateMatchmakeSession_sessionKey_len", "sessionKey length (Buffer)")
F.Matchmake_Extension_CreateMatchmakeSession_sessionKey_data = ProtoField.bytes("Matchmake_Extension_CreateMatchmakeSession_sessionKey_data", "sessionKey data (Buffer)")
F.Matchmake_Extension_JoinMatchmakeSession_gid = ProtoField.uint32("Matchmake_Extension_JoinMatchmakeSession_gid", "gid (uint32)")
F.Matchmake_Extension_JoinMatchmakeSession_strMessage_len = ProtoField.uint16("Matchmake_Extension_JoinMatchmakeSession_strMessage_len", "strMessage length (String)")
F.Matchmake_Extension_JoinMatchmakeSession_strMessage_data = ProtoField.string("Matchmake_Extension_JoinMatchmakeSession_strMessage_data", "strMessage data (String)")
F.Matchmake_Extension_JoinMatchmakeSession_sessionKey_len = ProtoField.uint32("Matchmake_Extension_JoinMatchmakeSession_sessionKey_len", "sessionKey length (Buffer)")
F.Matchmake_Extension_JoinMatchmakeSession_sessionKey_data = ProtoField.bytes("Matchmake_Extension_JoinMatchmakeSession_sessionKey_data", "sessionKey data (Buffer)")
F.Matchmake_Extension_ModifyCurrentGameAttribute_gid = ProtoField.uint32("Matchmake_Extension_ModifyCurrentGameAttribute_gid", "gid (uint32)")
F.Matchmake_Extension_ModifyCurrentGameAttribute_attribIndex = ProtoField.uint32("Matchmake_Extension_ModifyCurrentGameAttribute_attribIndex", "attribIndex (uint32)")
F.Matchmake_Extension_ModifyCurrentGameAttribute_newValue = ProtoField.uint32("Matchmake_Extension_ModifyCurrentGameAttribute_newValue", "newValue (uint32)")
F.Matchmake_Extension_UpdateNotificationData_uiType = ProtoField.uint32("Matchmake_Extension_UpdateNotificationData_uiType", "uiType (uint32)")
F.Matchmake_Extension_UpdateNotificationData_uiParam1 = ProtoField.uint64("Matchmake_Extension_UpdateNotificationData_uiParam1", "uiParam1 (uint64)")
F.Matchmake_Extension_UpdateNotificationData_uiParam2 = ProtoField.uint64("Matchmake_Extension_UpdateNotificationData_uiParam2", "uiParam2 (uint64)")
F.Matchmake_Extension_UpdateNotificationData_strParam_len = ProtoField.uint16("Matchmake_Extension_UpdateNotificationData_strParam_len", "strParam length (String)")
F.Matchmake_Extension_UpdateNotificationData_strParam_data = ProtoField.string("Matchmake_Extension_UpdateNotificationData_strParam_data", "strParam data (String)")
F.Matchmake_Extension_GetFriendNotificationData_uiType = ProtoField.int32("Matchmake_Extension_GetFriendNotificationData_uiType", "uiType (uint32)")
F.Matchmake_Extension_UpdateApplicationBuffer_gid = ProtoField.uint32("Matchmake_Extension_UpdateApplicationBuffer_gid", "gid (uint32)")
F.Matchmake_Extension_UpdateApplicationBuffer_applicationBuffer_len = ProtoField.uint32("Matchmake_Extension_UpdateApplicationBuffer_applicationBuffer_len", "applicationBuffer length (Buffer)")
F.Matchmake_Extension_UpdateApplicationBuffer_applicationBuffer_data = ProtoField.bytes("Matchmake_Extension_UpdateApplicationBuffer_applicationBuffer_data", "applicationBuffer data (Buffer)")
F.Matchmake_Extension_UpdateMatchmakeSessionAttribute_gid = ProtoField.uint32("Matchmake_Extension_UpdateMatchmakeSessionAttribute_gid", "gid (uint32)")
F.Matchmake_Extension_UpdateMatchmakeSessionAttribute_attribs_len = ProtoField.uint32("Matchmake_Extension_UpdateMatchmakeSessionAttribute_attribs_len", "attribs length (uint32)")
F.Matchmake_Extension_UpdateMatchmakeSessionAttribute_attribs_item = ProtoField.uint32("Matchmake_Extension_UpdateMatchmakeSessionAttribute_attribs_item", "attribs (uint32)")
F.Matchmake_Extension_GetlstFriendNotificationData_lstTypes_len = ProtoField.uint32("Matchmake_Extension_GetlstFriendNotificationData_lstTypes_len", "lstTypes length (uint32)")
F.Matchmake_Extension_GetlstFriendNotificationData_lstTypes_item = ProtoField.uint32("Matchmake_Extension_GetlstFriendNotificationData_lstTypes_item", "lstTypes (uint32)")
F.Matchmake_Extension_UpdateMatchmakeSession_anyGathering_data_bytes = ProtoField.bytes("Matchmake_Extension_UpdateMatchmakeSession_anyGathering_data_bytes", "anyGathering data bytes (bytes)")
F.Matchmake_Extension_UpdateMatchmakeSession_anyGathering_type_name_len = ProtoField.uint16("Matchmake_Extension_UpdateMatchmakeSession_anyGathering_type_name_len", "anyGathering_type_name length (String)")
F.Matchmake_Extension_UpdateMatchmakeSession_anyGathering_type_name_data = ProtoField.string("Matchmake_Extension_UpdateMatchmakeSession_anyGathering_type_name_data", "anyGathering_type_name data (String)")
F.Matchmake_Extension_UpdateMatchmakeSession_anyGathering_len_plus_four = ProtoField.uint32("Matchmake_Extension_UpdateMatchmakeSession_anyGathering_len_plus_four", "anyGathering_len_plus_four (uint32)")
F.Matchmake_Extension_UpdateMatchmakeSession_anyGathering_data_len = ProtoField.uint32("Matchmake_Extension_UpdateMatchmakeSession_anyGathering_data_len", "anyGathering_data_len (uint32)")
F.Matchmake_Extension_AutoMatchmakeWithSearchCriteria_Postpone_lstSearchCriteria_len = ProtoField.uint32("Matchmake_Extension_AutoMatchmakeWithSearchCriteria_Postpone_lstSearchCriteria_len", "lstSearchCriteria length (uint32)")
F.Matchmake_Extension_AutoMatchmakeWithSearchCriteria_Postpone_anyGathering_data_bytes = ProtoField.bytes("Matchmake_Extension_AutoMatchmakeWithSearchCriteria_Postpone_anyGathering_data_bytes", "anyGathering data bytes (bytes)")
F.Matchmake_Extension_AutoMatchmakeWithSearchCriteria_Postpone_anyGathering_type_name_len = ProtoField.uint16("Matchmake_Extension_AutoMatchmakeWithSearchCriteria_Postpone_anyGathering_type_name_len", "anyGathering_type_name length (String)")
F.Matchmake_Extension_AutoMatchmakeWithSearchCriteria_Postpone_anyGathering_type_name_data = ProtoField.string("Matchmake_Extension_AutoMatchmakeWithSearchCriteria_Postpone_anyGathering_type_name_data", "anyGathering_type_name data (String)")
F.Matchmake_Extension_AutoMatchmakeWithSearchCriteria_Postpone_anyGathering_len_plus_four = ProtoField.uint32("Matchmake_Extension_AutoMatchmakeWithSearchCriteria_Postpone_anyGathering_len_plus_four", "anyGathering_len_plus_four (uint32)")
F.Matchmake_Extension_AutoMatchmakeWithSearchCriteria_Postpone_anyGathering_data_len = ProtoField.uint32("Matchmake_Extension_AutoMatchmakeWithSearchCriteria_Postpone_anyGathering_data_len", "anyGathering_data_len (uint32)")
F.Matchmake_Extension_AutoMatchmakeWithSearchCriteria_Postpone_strMessage_len = ProtoField.uint16("Matchmake_Extension_AutoMatchmakeWithSearchCriteria_Postpone_strMessage_len", "strMessage length (String)")
F.Matchmake_Extension_AutoMatchmakeWithSearchCriteria_Postpone_strMessage_data = ProtoField.string("Matchmake_Extension_AutoMatchmakeWithSearchCriteria_Postpone_strMessage_data", "strMessage data (String)")
F.Matchmake_Extension_AutoMatchmakeWithSearchCriteria_Postpone_joinedGathering_data_bytes = ProtoField.bytes("Matchmake_Extension_AutoMatchmakeWithSearchCriteria_Postpone_joinedGathering_data_bytes", "joinedGathering data bytes (bytes)")
F.Matchmake_Extension_AutoMatchmakeWithSearchCriteria_Postpone_joinedGathering_type_name_len = ProtoField.uint16("Matchmake_Extension_AutoMatchmakeWithSearchCriteria_Postpone_joinedGathering_type_name_len", "joinedGathering_type_name length (String)")
F.Matchmake_Extension_AutoMatchmakeWithSearchCriteria_Postpone_joinedGathering_type_name_data = ProtoField.string("Matchmake_Extension_AutoMatchmakeWithSearchCriteria_Postpone_joinedGathering_type_name_data", "joinedGathering_type_name data (String)")
F.Matchmake_Extension_AutoMatchmakeWithSearchCriteria_Postpone_joinedGathering_len_plus_four = ProtoField.uint32("Matchmake_Extension_AutoMatchmakeWithSearchCriteria_Postpone_joinedGathering_len_plus_four", "joinedGathering_len_plus_four (uint32)")
F.Matchmake_Extension_AutoMatchmakeWithSearchCriteria_Postpone_joinedGathering_data_len = ProtoField.uint32("Matchmake_Extension_AutoMatchmakeWithSearchCriteria_Postpone_joinedGathering_data_len", "joinedGathering_data_len (uint32)")
F.Matchmake_Extension_GetPlayingSession_lstPid_len = ProtoField.uint32("Matchmake_Extension_GetPlayingSession_lstPid_len", "lstPid length (uint32)")
F.Matchmake_Extension_GetPlayingSession_lstPid_item = ProtoField.uint32("Matchmake_Extension_GetPlayingSession_lstPid_item", "lstPid (uint32)")
F.Matchmake_Extension_GetPlayingSession_lstPlayingSession_len = ProtoField.uint32("Matchmake_Extension_GetPlayingSession_lstPlayingSession_len", "lstPlayingSession length (uint32)")
F.Matchmake_Extension_CreateCommunity_strMessage_len = ProtoField.uint16("Matchmake_Extension_CreateCommunity_strMessage_len", "strMessage length (String)")
F.Matchmake_Extension_CreateCommunity_strMessage_data = ProtoField.string("Matchmake_Extension_CreateCommunity_strMessage_data", "strMessage data (String)")
F.Matchmake_Extension_CreateCommunity_gid = ProtoField.uint32("Matchmake_Extension_CreateCommunity_gid", "gid (uint32)")
F.Matchmake_Extension_JoinCommunity_gid = ProtoField.uint32("Matchmake_Extension_JoinCommunity_gid", "gid (uint32)")
F.Matchmake_Extension_JoinCommunity_strMessage_len = ProtoField.uint16("Matchmake_Extension_JoinCommunity_strMessage_len", "strMessage length (String)")
F.Matchmake_Extension_JoinCommunity_strMessage_data = ProtoField.string("Matchmake_Extension_JoinCommunity_strMessage_data", "strMessage data (String)")
F.Matchmake_Extension_JoinCommunity_strPassword_len = ProtoField.uint16("Matchmake_Extension_JoinCommunity_strPassword_len", "strPassword length (String)")
F.Matchmake_Extension_JoinCommunity_strPassword_data = ProtoField.string("Matchmake_Extension_JoinCommunity_strPassword_data", "strPassword data (String)")
F.Matchmake_Extension_FindCommunityByGatheringId_lstGid_len = ProtoField.uint32("Matchmake_Extension_FindCommunityByGatheringId_lstGid_len", "lstGid length (uint32)")
F.Matchmake_Extension_FindCommunityByGatheringId_lstGid_item = ProtoField.uint32("Matchmake_Extension_FindCommunityByGatheringId_lstGid_item", "lstGid (uint32)")
F.Matchmake_Extension_FindCommunityByGatheringId_lstCommunity_len = ProtoField.uint32("Matchmake_Extension_FindCommunityByGatheringId_lstCommunity_len", "lstCommunity length (uint32)")
F.Matchmake_Extension_FindOfficialCommunity_isAvailableOnly = ProtoField.bool("Matchmake_Extension_FindOfficialCommunity_isAvailableOnly", "isAvailableOnly (bool)")
F.Matchmake_Extension_FindOfficialCommunity_lstCommunity_len = ProtoField.uint32("Matchmake_Extension_FindOfficialCommunity_lstCommunity_len", "lstCommunity length (uint32)")
F.Matchmake_Extension_FindCommunityByParticipant_pid = ProtoField.uint32("Matchmake_Extension_FindCommunityByParticipant_pid", "pid (uint32)")
F.Matchmake_Extension_FindCommunityByParticipant_lstCommunity_len = ProtoField.uint32("Matchmake_Extension_FindCommunityByParticipant_lstCommunity_len", "lstCommunity length (uint32)")
F.Matchmake_Extension_UpdatePrivacySetting_onlineStatus = ProtoField.bool("Matchmake_Extension_UpdatePrivacySetting_onlineStatus", "onlineStatus (bool)")
F.Matchmake_Extension_UpdatePrivacySetting_participationCommunity = ProtoField.bool("Matchmake_Extension_UpdatePrivacySetting_participationCommunity", "participationCommunity (bool)")
F.Matchmake_Extension_GetMyBlockList_lstPrincipalId_len = ProtoField.uint32("Matchmake_Extension_GetMyBlockList_lstPrincipalId_len", "lstPrincipalId length (uint32)")
F.Matchmake_Extension_GetMyBlockList_lstPrincipalId_item = ProtoField.uint32("Matchmake_Extension_GetMyBlockList_lstPrincipalId_item", "lstPrincipalId (uint32)")
F.Matchmake_Extension_AddToBlockList_lstPrincipalId_len = ProtoField.uint32("Matchmake_Extension_AddToBlockList_lstPrincipalId_len", "lstPrincipalId length (uint32)")
F.Matchmake_Extension_AddToBlockList_lstPrincipalId_item = ProtoField.uint32("Matchmake_Extension_AddToBlockList_lstPrincipalId_item", "lstPrincipalId (uint32)")
F.Matchmake_Extension_RemoveFromBlockList_lstPrincipalId_len = ProtoField.uint32("Matchmake_Extension_RemoveFromBlockList_lstPrincipalId_len", "lstPrincipalId length (uint32)")
F.Matchmake_Extension_RemoveFromBlockList_lstPrincipalId_item = ProtoField.uint32("Matchmake_Extension_RemoveFromBlockList_lstPrincipalId_item", "lstPrincipalId (uint32)")
F.Matchmake_Extension_ReportViolation_pid = ProtoField.uint32("Matchmake_Extension_ReportViolation_pid", "pid (uint32)")
F.Matchmake_Extension_ReportViolation_userName_len = ProtoField.uint16("Matchmake_Extension_ReportViolation_userName_len", "userName length (String)")
F.Matchmake_Extension_ReportViolation_userName_data = ProtoField.string("Matchmake_Extension_ReportViolation_userName_data", "userName data (String)")
F.Matchmake_Extension_ReportViolation_violationCode = ProtoField.uint32("Matchmake_Extension_ReportViolation_violationCode", "violationCode (uint32)")
F.Matchmake_Extension_IsViolationUser_flag = ProtoField.bool("Matchmake_Extension_IsViolationUser_flag", "flag (bool)")
F.Matchmake_Extension_IsViolationUser_score = ProtoField.uint32("Matchmake_Extension_IsViolationUser_score", "score (uint32)")
F.Matchmake_Extension_JoinMatchmakeSessionEx_gid = ProtoField.uint32("Matchmake_Extension_JoinMatchmakeSessionEx_gid", "gid (uint32)")
F.Matchmake_Extension_JoinMatchmakeSessionEx_strMessage_len = ProtoField.uint16("Matchmake_Extension_JoinMatchmakeSessionEx_strMessage_len", "strMessage length (String)")
F.Matchmake_Extension_JoinMatchmakeSessionEx_strMessage_data = ProtoField.string("Matchmake_Extension_JoinMatchmakeSessionEx_strMessage_data", "strMessage data (String)")
F.Matchmake_Extension_JoinMatchmakeSessionEx_dontCareMyBlockList = ProtoField.bool("Matchmake_Extension_JoinMatchmakeSessionEx_dontCareMyBlockList", "dontCareMyBlockList (bool)")
F.Matchmake_Extension_JoinMatchmakeSessionEx_participationCount = ProtoField.uint16("Matchmake_Extension_JoinMatchmakeSessionEx_participationCount", "participationCount (uint16)")
F.Matchmake_Extension_JoinMatchmakeSessionEx_sessionKey_len = ProtoField.uint32("Matchmake_Extension_JoinMatchmakeSessionEx_sessionKey_len", "sessionKey length (Buffer)")
F.Matchmake_Extension_JoinMatchmakeSessionEx_sessionKey_data = ProtoField.bytes("Matchmake_Extension_JoinMatchmakeSessionEx_sessionKey_data", "sessionKey data (Buffer)")
F.Matchmake_Extension_GetSimplePlayingSession_lstPrincipalId_len = ProtoField.uint32("Matchmake_Extension_GetSimplePlayingSession_lstPrincipalId_len", "lstPrincipalId length (uint32)")
F.Matchmake_Extension_GetSimplePlayingSession_lstPrincipalId_item = ProtoField.uint32("Matchmake_Extension_GetSimplePlayingSession_lstPrincipalId_item", "lstPrincipalId (uint32)")
F.Matchmake_Extension_GetSimplePlayingSession_includeLoginUser = ProtoField.bool("Matchmake_Extension_GetSimplePlayingSession_includeLoginUser", "includeLoginUser (bool)")
F.Matchmake_Extension_GetSimplePlayingSession_lstSimplePlayingSession_len = ProtoField.uint32("Matchmake_Extension_GetSimplePlayingSession_lstSimplePlayingSession_len", "lstSimplePlayingSession length (uint32)")
F.Matchmake_Extension_GetSimpleCommunity_gatheringIdList_len = ProtoField.uint32("Matchmake_Extension_GetSimpleCommunity_gatheringIdList_len", "gatheringIdList length (uint32)")
F.Matchmake_Extension_GetSimpleCommunity_gatheringIdList_item = ProtoField.uint32("Matchmake_Extension_GetSimpleCommunity_gatheringIdList_item", "gatheringIdList (uint32)")
F.Matchmake_Extension_GetSimpleCommunity_lstSimpleCommunityList_len = ProtoField.uint32("Matchmake_Extension_GetSimpleCommunity_lstSimpleCommunityList_len", "lstSimpleCommunityList length (uint32)")
F.Matchmake_Extension_AutoMatchmakeWithGatheringId_Postpone_lstGid_len = ProtoField.uint32("Matchmake_Extension_AutoMatchmakeWithGatheringId_Postpone_lstGid_len", "lstGid length (uint32)")
F.Matchmake_Extension_AutoMatchmakeWithGatheringId_Postpone_lstGid_item = ProtoField.uint32("Matchmake_Extension_AutoMatchmakeWithGatheringId_Postpone_lstGid_item", "lstGid (uint32)")
F.Matchmake_Extension_AutoMatchmakeWithGatheringId_Postpone_anyGathering_data_bytes = ProtoField.bytes("Matchmake_Extension_AutoMatchmakeWithGatheringId_Postpone_anyGathering_data_bytes", "anyGathering data bytes (bytes)")
F.Matchmake_Extension_AutoMatchmakeWithGatheringId_Postpone_anyGathering_type_name_len = ProtoField.uint16("Matchmake_Extension_AutoMatchmakeWithGatheringId_Postpone_anyGathering_type_name_len", "anyGathering_type_name length (String)")
F.Matchmake_Extension_AutoMatchmakeWithGatheringId_Postpone_anyGathering_type_name_data = ProtoField.string("Matchmake_Extension_AutoMatchmakeWithGatheringId_Postpone_anyGathering_type_name_data", "anyGathering_type_name data (String)")
F.Matchmake_Extension_AutoMatchmakeWithGatheringId_Postpone_anyGathering_len_plus_four = ProtoField.uint32("Matchmake_Extension_AutoMatchmakeWithGatheringId_Postpone_anyGathering_len_plus_four", "anyGathering_len_plus_four (uint32)")
F.Matchmake_Extension_AutoMatchmakeWithGatheringId_Postpone_anyGathering_data_len = ProtoField.uint32("Matchmake_Extension_AutoMatchmakeWithGatheringId_Postpone_anyGathering_data_len", "anyGathering_data_len (uint32)")
F.Matchmake_Extension_AutoMatchmakeWithGatheringId_Postpone_strMessage_len = ProtoField.uint16("Matchmake_Extension_AutoMatchmakeWithGatheringId_Postpone_strMessage_len", "strMessage length (String)")
F.Matchmake_Extension_AutoMatchmakeWithGatheringId_Postpone_strMessage_data = ProtoField.string("Matchmake_Extension_AutoMatchmakeWithGatheringId_Postpone_strMessage_data", "strMessage data (String)")
F.Matchmake_Extension_AutoMatchmakeWithGatheringId_Postpone_joinedGathering_data_bytes = ProtoField.bytes("Matchmake_Extension_AutoMatchmakeWithGatheringId_Postpone_joinedGathering_data_bytes", "joinedGathering data bytes (bytes)")
F.Matchmake_Extension_AutoMatchmakeWithGatheringId_Postpone_joinedGathering_type_name_len = ProtoField.uint16("Matchmake_Extension_AutoMatchmakeWithGatheringId_Postpone_joinedGathering_type_name_len", "joinedGathering_type_name length (String)")
F.Matchmake_Extension_AutoMatchmakeWithGatheringId_Postpone_joinedGathering_type_name_data = ProtoField.string("Matchmake_Extension_AutoMatchmakeWithGatheringId_Postpone_joinedGathering_type_name_data", "joinedGathering_type_name data (String)")
F.Matchmake_Extension_AutoMatchmakeWithGatheringId_Postpone_joinedGathering_len_plus_four = ProtoField.uint32("Matchmake_Extension_AutoMatchmakeWithGatheringId_Postpone_joinedGathering_len_plus_four", "joinedGathering_len_plus_four (uint32)")
F.Matchmake_Extension_AutoMatchmakeWithGatheringId_Postpone_joinedGathering_data_len = ProtoField.uint32("Matchmake_Extension_AutoMatchmakeWithGatheringId_Postpone_joinedGathering_data_len", "joinedGathering_data_len (uint32)")
F.Matchmake_Extension_UpdateProgressScore_gid = ProtoField.uint32("Matchmake_Extension_UpdateProgressScore_gid", "gid (uint32)")
F.Matchmake_Extension_UpdateProgressScore_progressScore = ProtoField.uint8("Matchmake_Extension_UpdateProgressScore_progressScore", "progressScore (uint8)")
F.Matchmake_Extension_DebugNotifyEvent_pid = ProtoField.uint32("Matchmake_Extension_DebugNotifyEvent_pid", "pid (uint32)")
F.Matchmake_Extension_DebugNotifyEvent_mainType = ProtoField.uint32("Matchmake_Extension_DebugNotifyEvent_mainType", "mainType (uint32)")
F.Matchmake_Extension_DebugNotifyEvent_subType = ProtoField.uint32("Matchmake_Extension_DebugNotifyEvent_subType", "subType (uint32)")
F.Matchmake_Extension_DebugNotifyEvent_param1 = ProtoField.uint64("Matchmake_Extension_DebugNotifyEvent_param1", "param1 (uint64)")
F.Matchmake_Extension_DebugNotifyEvent_param2 = ProtoField.uint64("Matchmake_Extension_DebugNotifyEvent_param2", "param2 (uint64)")
F.Matchmake_Extension_DebugNotifyEvent_stringParam_len = ProtoField.uint16("Matchmake_Extension_DebugNotifyEvent_stringParam_len", "stringParam length (String)")
F.Matchmake_Extension_DebugNotifyEvent_stringParam_data = ProtoField.string("Matchmake_Extension_DebugNotifyEvent_stringParam_data", "stringParam data (String)")
F.Matchmake_Extension_GenerateMatchmakeSessionSystemPassword_gid = ProtoField.uint32("Matchmake_Extension_GenerateMatchmakeSessionSystemPassword_gid", "gid (uint32)")
F.Matchmake_Extension_GenerateMatchmakeSessionSystemPassword_password_len = ProtoField.uint16("Matchmake_Extension_GenerateMatchmakeSessionSystemPassword_password_len", "password length (String)")
F.Matchmake_Extension_GenerateMatchmakeSessionSystemPassword_password_data = ProtoField.string("Matchmake_Extension_GenerateMatchmakeSessionSystemPassword_password_data", "password data (String)")
F.Matchmake_Extension_ClearMatchmakeSessionSystemPassword_gid = ProtoField.uint32("Matchmake_Extension_ClearMatchmakeSessionSystemPassword_gid", "gid (uint32)")
F.Matchmake_Extension_FindMatchmakeSessionByGatheringIdDetail_gid = ProtoField.uint32("Matchmake_Extension_FindMatchmakeSessionByGatheringIdDetail_gid", "gid (uint32)")
F.Matchmake_Extension_BrowseMatchmakeSessionNoHolder_lstMatchmakeSession_len = ProtoField.uint32("Matchmake_Extension_BrowseMatchmakeSessionNoHolder_lstMatchmakeSession_len", "lstMatchmakeSession length (uint32)")
F.Matchmake_Extension_BrowseMatchmakeSessionWithHostUrlsNoHolder_lstMatchmakeSession_len = ProtoField.uint32("Matchmake_Extension_BrowseMatchmakeSessionWithHostUrlsNoHolder_lstMatchmakeSession_len", "lstMatchmakeSession length (uint32)")
F.Matchmake_Extension_BrowseMatchmakeSessionWithHostUrlsNoHolder_lstGatheringUrls_len = ProtoField.uint32("Matchmake_Extension_BrowseMatchmakeSessionWithHostUrlsNoHolder_lstGatheringUrls_len", "lstGatheringUrls length (uint32)")
F.Matchmake_Extension_RequestMatchmaking_requestId = ProtoField.uint64("Matchmake_Extension_RequestMatchmaking_requestId", "requestId (uint64)")
F.Matchmake_Extension_WithdrawMatchmaking_requestId = ProtoField.uint64("Matchmake_Extension_WithdrawMatchmaking_requestId", "requestId (uint64)")
F.Matchmake_Extension_FindMatchmakeSessionByGatheringId_lstGid_len = ProtoField.uint32("Matchmake_Extension_FindMatchmakeSessionByGatheringId_lstGid_len", "lstGid length (uint32)")
F.Matchmake_Extension_FindMatchmakeSessionByGatheringId_lstGid_item = ProtoField.uint32("Matchmake_Extension_FindMatchmakeSessionByGatheringId_lstGid_item", "lstGid (uint32)")
F.Matchmake_Extension_FindMatchmakeSessionByGatheringId_lstMatchmakeSession_len = ProtoField.uint32("Matchmake_Extension_FindMatchmakeSessionByGatheringId_lstMatchmakeSession_len", "lstMatchmakeSession length (uint32)")
F.Matchmake_Extension_FindMatchmakeSessionBySingleGatheringId_gid = ProtoField.uint32("Matchmake_Extension_FindMatchmakeSessionBySingleGatheringId_gid", "gid (uint32)")
F.Matchmake_Extension_FindMatchmakeSessionByOwner_id = ProtoField.uint32("Matchmake_Extension_FindMatchmakeSessionByOwner_id", "id (uint32)")
F.Matchmake_Extension_FindMatchmakeSessionByOwner_lstMatchmakeSession_len = ProtoField.uint32("Matchmake_Extension_FindMatchmakeSessionByOwner_lstMatchmakeSession_len", "lstMatchmakeSession length (uint32)")
F.Matchmake_Extension_FindMatchmakeSessionByParticipant_lstSession_len = ProtoField.uint32("Matchmake_Extension_FindMatchmakeSessionByParticipant_lstSession_len", "lstSession length (uint32)")
F.Matchmake_Extension_BrowseMatchmakeSessionNoHolderNoResultRange_lstMatchmakeSession_len = ProtoField.uint32("Matchmake_Extension_BrowseMatchmakeSessionNoHolderNoResultRange_lstMatchmakeSession_len", "lstMatchmakeSession length (uint32)")
F.Matchmake_Extension_BrowseMatchmakeSessionWithHostUrlsNoHolderNoResultRange_lstMatchmakeSession_len = ProtoField.uint32("Matchmake_Extension_BrowseMatchmakeSessionWithHostUrlsNoHolderNoResultRange_lstMatchmakeSession_len", "lstMatchmakeSession length (uint32)")
F.Matchmake_Extension_BrowseMatchmakeSessionWithHostUrlsNoHolderNoResultRange_lstGatheringUrls_len = ProtoField.uint32("Matchmake_Extension_BrowseMatchmakeSessionWithHostUrlsNoHolderNoResultRange_lstGatheringUrls_len", "lstGatheringUrls length (uint32)")
F.Persistent_Store_FindByGroup_uiGroup = ProtoField.uint32("Persistent_Store_FindByGroup_uiGroup", "uiGroup (uint32)")
F.Persistent_Store_FindByGroup_lstTags_len = ProtoField.uint32("Persistent_Store_FindByGroup_lstTags_len", "lstTags length (uint32)")
F.Persistent_Store_FindByGroup_lstTags_item_len = ProtoField.uint16("Persistent_Store_FindByGroup_lstTags_item_len", "lstTags length (String)")
F.Persistent_Store_FindByGroup_lstTags_item_data = ProtoField.string("Persistent_Store_FindByGroup_lstTags_item_data", "lstTags data (String)")
F.Persistent_Store_InsertItem_uiGroup = ProtoField.uint32("Persistent_Store_InsertItem_uiGroup", "uiGroup (uint32)")
F.Persistent_Store_InsertItem_strTag_len = ProtoField.uint16("Persistent_Store_InsertItem_strTag_len", "strTag length (String)")
F.Persistent_Store_InsertItem_strTag_data = ProtoField.string("Persistent_Store_InsertItem_strTag_data", "strTag data (String)")
F.Persistent_Store_InsertItem_bufData_len = ProtoField.uint32("Persistent_Store_InsertItem_bufData_len", "bufData length (Buffer)")
F.Persistent_Store_InsertItem_bufData_data = ProtoField.bytes("Persistent_Store_InsertItem_bufData_data", "bufData data (Buffer)")
F.Persistent_Store_InsertItem_bReplace = ProtoField.bool("Persistent_Store_InsertItem_bReplace", "bReplace (bool)")
F.Persistent_Store_InsertItem_bResult = ProtoField.bool("Persistent_Store_InsertItem_bResult", "bResult (bool)")
F.Persistent_Store_RemoveItem_uiGroup = ProtoField.uint32("Persistent_Store_RemoveItem_uiGroup", "uiGroup (uint32)")
F.Persistent_Store_RemoveItem_strTag_len = ProtoField.uint16("Persistent_Store_RemoveItem_strTag_len", "strTag length (String)")
F.Persistent_Store_RemoveItem_strTag_data = ProtoField.string("Persistent_Store_RemoveItem_strTag_data", "strTag data (String)")
F.Persistent_Store_RemoveItem_bResult = ProtoField.bool("Persistent_Store_RemoveItem_bResult", "bResult (bool)")
F.Persistent_Store_GetItem_uiGroup = ProtoField.uint32("Persistent_Store_GetItem_uiGroup", "uiGroup (uint32)")
F.Persistent_Store_GetItem_strTag_len = ProtoField.uint16("Persistent_Store_GetItem_strTag_len", "strTag length (String)")
F.Persistent_Store_GetItem_strTag_data = ProtoField.string("Persistent_Store_GetItem_strTag_data", "strTag data (String)")
F.Persistent_Store_GetItem_bufData_len = ProtoField.uint32("Persistent_Store_GetItem_bufData_len", "bufData length (Buffer)")
F.Persistent_Store_GetItem_bufData_data = ProtoField.bytes("Persistent_Store_GetItem_bufData_data", "bufData data (Buffer)")
F.Persistent_Store_GetItem_bResult = ProtoField.bool("Persistent_Store_GetItem_bResult", "bResult (bool)")
F.Persistent_Store_InsertCustomItem_uiGroup = ProtoField.uint32("Persistent_Store_InsertCustomItem_uiGroup", "uiGroup (uint32)")
F.Persistent_Store_InsertCustomItem_strTag_len = ProtoField.uint16("Persistent_Store_InsertCustomItem_strTag_len", "strTag length (String)")
F.Persistent_Store_InsertCustomItem_strTag_data = ProtoField.string("Persistent_Store_InsertCustomItem_strTag_data", "strTag data (String)")
F.Persistent_Store_InsertCustomItem_hData_data_bytes = ProtoField.bytes("Persistent_Store_InsertCustomItem_hData_data_bytes", "hData data bytes (bytes)")
F.Persistent_Store_InsertCustomItem_hData_type_name_len = ProtoField.uint16("Persistent_Store_InsertCustomItem_hData_type_name_len", "hData_type_name length (String)")
F.Persistent_Store_InsertCustomItem_hData_type_name_data = ProtoField.string("Persistent_Store_InsertCustomItem_hData_type_name_data", "hData_type_name data (String)")
F.Persistent_Store_InsertCustomItem_hData_len_plus_four = ProtoField.uint32("Persistent_Store_InsertCustomItem_hData_len_plus_four", "hData_len_plus_four (uint32)")
F.Persistent_Store_InsertCustomItem_hData_data_len = ProtoField.uint32("Persistent_Store_InsertCustomItem_hData_data_len", "hData_data_len (uint32)")
F.Persistent_Store_InsertCustomItem_bReplace = ProtoField.bool("Persistent_Store_InsertCustomItem_bReplace", "bReplace (bool)")
F.Persistent_Store_GetCustomItem_uiGroup = ProtoField.uint32("Persistent_Store_GetCustomItem_uiGroup", "uiGroup (uint32)")
F.Persistent_Store_GetCustomItem_strTag_len = ProtoField.uint16("Persistent_Store_GetCustomItem_strTag_len", "strTag length (String)")
F.Persistent_Store_GetCustomItem_strTag_data = ProtoField.string("Persistent_Store_GetCustomItem_strTag_data", "strTag data (String)")
F.Persistent_Store_GetCustomItem_hData_data_bytes = ProtoField.bytes("Persistent_Store_GetCustomItem_hData_data_bytes", "hData data bytes (bytes)")
F.Persistent_Store_GetCustomItem_hData_type_name_len = ProtoField.uint16("Persistent_Store_GetCustomItem_hData_type_name_len", "hData_type_name length (String)")
F.Persistent_Store_GetCustomItem_hData_type_name_data = ProtoField.string("Persistent_Store_GetCustomItem_hData_type_name_data", "hData_type_name data (String)")
F.Persistent_Store_GetCustomItem_hData_len_plus_four = ProtoField.uint32("Persistent_Store_GetCustomItem_hData_len_plus_four", "hData_len_plus_four (uint32)")
F.Persistent_Store_GetCustomItem_hData_data_len = ProtoField.uint32("Persistent_Store_GetCustomItem_hData_data_len", "hData_data_len (uint32)")
F.Persistent_Store_FindItemsBySQLQuery_uiGroup = ProtoField.uint32("Persistent_Store_FindItemsBySQLQuery_uiGroup", "uiGroup (uint32)")
F.Persistent_Store_FindItemsBySQLQuery_strTag_len = ProtoField.uint16("Persistent_Store_FindItemsBySQLQuery_strTag_len", "strTag length (String)")
F.Persistent_Store_FindItemsBySQLQuery_strTag_data = ProtoField.string("Persistent_Store_FindItemsBySQLQuery_strTag_data", "strTag data (String)")
F.Persistent_Store_FindItemsBySQLQuery_strQuery_len = ProtoField.uint16("Persistent_Store_FindItemsBySQLQuery_strQuery_len", "strQuery length (String)")
F.Persistent_Store_FindItemsBySQLQuery_strQuery_data = ProtoField.string("Persistent_Store_FindItemsBySQLQuery_strQuery_data", "strQuery data (String)")
F.Persistent_Store_FindItemsBySQLQuery_lstData_len = ProtoField.uint32("Persistent_Store_FindItemsBySQLQuery_lstData_len", "lstData length (uint32)")
F.Persistent_Store_FindItemsBySQLQuery_lstData_item_data_bytes = ProtoField.bytes("Persistent_Store_FindItemsBySQLQuery_lstData_item_data_bytes", "lstData data bytes (bytes)")
F.Persistent_Store_FindItemsBySQLQuery_lstData_item_type_name_len = ProtoField.uint16("Persistent_Store_FindItemsBySQLQuery_lstData_item_type_name_len", "lstData_type_name length (String)")
F.Persistent_Store_FindItemsBySQLQuery_lstData_item_type_name_data = ProtoField.string("Persistent_Store_FindItemsBySQLQuery_lstData_item_type_name_data", "lstData_type_name data (String)")
F.Persistent_Store_FindItemsBySQLQuery_lstData_item_len_plus_four = ProtoField.uint32("Persistent_Store_FindItemsBySQLQuery_lstData_item_len_plus_four", "lstData_len_plus_four (uint32)")
F.Persistent_Store_FindItemsBySQLQuery_lstData_item_data_len = ProtoField.uint32("Persistent_Store_FindItemsBySQLQuery_lstData_item_data_len", "lstData_data_len (uint32)")
F.Authentication_Login_strUserName_len = ProtoField.uint16("Authentication_Login_strUserName_len", "strUserName length (String)")
F.Authentication_Login_strUserName_data = ProtoField.string("Authentication_Login_strUserName_data", "strUserName data (String)")
F.Authentication_Login_retval = ProtoField.uint32("Authentication_Login_retval", "retval (uint32)")
F.Authentication_Login_pidPrincipal = ProtoField.uint32("Authentication_Login_pidPrincipal", "pidPrincipal (uint32)")
F.Authentication_Login_pbufResponse_len = ProtoField.uint32("Authentication_Login_pbufResponse_len", "pbufResponse length (Buffer)")
F.Authentication_Login_pbufResponse_data = ProtoField.bytes("Authentication_Login_pbufResponse_data", "pbufResponse data (Buffer)")
F.Authentication_Login_strReturnMsg_len = ProtoField.uint16("Authentication_Login_strReturnMsg_len", "strReturnMsg length (String)")
F.Authentication_Login_strReturnMsg_data = ProtoField.string("Authentication_Login_strReturnMsg_data", "strReturnMsg data (String)")
F.Authentication_LoginEx_strUserName_len = ProtoField.uint16("Authentication_LoginEx_strUserName_len", "strUserName length (String)")
F.Authentication_LoginEx_strUserName_data = ProtoField.string("Authentication_LoginEx_strUserName_data", "strUserName data (String)")
F.Authentication_LoginEx_retval = ProtoField.uint32("Authentication_LoginEx_retval", "retval (uint32)")
F.Authentication_LoginEx_pidPrincipal = ProtoField.uint32("Authentication_LoginEx_pidPrincipal", "pidPrincipal (uint32)")
F.Authentication_LoginEx_pbufResponse_len = ProtoField.uint32("Authentication_LoginEx_pbufResponse_len", "pbufResponse length (Buffer)")
F.Authentication_LoginEx_pbufResponse_data = ProtoField.bytes("Authentication_LoginEx_pbufResponse_data", "pbufResponse data (Buffer)")
F.Authentication_LoginEx_strReturnMsg_len = ProtoField.uint16("Authentication_LoginEx_strReturnMsg_len", "strReturnMsg length (String)")
F.Authentication_LoginEx_strReturnMsg_data = ProtoField.string("Authentication_LoginEx_strReturnMsg_data", "strReturnMsg data (String)")
F.Authentication_LoginEx_pSourceKey_len = ProtoField.uint16("Authentication_LoginEx_pSourceKey_len", "pSourceKey length (String)")
F.Authentication_LoginEx_pSourceKey_data = ProtoField.string("Authentication_LoginEx_pSourceKey_data", "pSourceKey data (String)")
F.Authentication_RequestTicket_idSource = ProtoField.uint32("Authentication_RequestTicket_idSource", "idSource (uint32)")
F.Authentication_RequestTicket_idTarget = ProtoField.uint32("Authentication_RequestTicket_idTarget", "idTarget (uint32)")
F.Authentication_RequestTicket_retval = ProtoField.uint32("Authentication_RequestTicket_retval", "retval (uint32)")
F.Authentication_RequestTicket_bufResponse_len = ProtoField.uint32("Authentication_RequestTicket_bufResponse_len", "bufResponse length (Buffer)")
F.Authentication_RequestTicket_bufResponse_data = ProtoField.bytes("Authentication_RequestTicket_bufResponse_data", "bufResponse data (Buffer)")
F.Authentication_GetPID_strUserName_len = ProtoField.uint16("Authentication_GetPID_strUserName_len", "strUserName length (String)")
F.Authentication_GetPID_strUserName_data = ProtoField.string("Authentication_GetPID_strUserName_data", "strUserName data (String)")
F.Authentication_GetPID_retval = ProtoField.uint32("Authentication_GetPID_retval", "retval (uint32)")
F.Authentication_GetName_id = ProtoField.uint32("Authentication_GetName_id", "id (uint32)")
F.Authentication_GetName_retval_len = ProtoField.uint16("Authentication_GetName_retval_len", "retval length (String)")
F.Authentication_GetName_retval_data = ProtoField.string("Authentication_GetName_retval_data", "retval data (String)")
F.Authentication_LoginWithContext_loginData_data_bytes = ProtoField.bytes("Authentication_LoginWithContext_loginData_data_bytes", "loginData data bytes (bytes)")
F.Authentication_LoginWithContext_loginData_type_name_len = ProtoField.uint16("Authentication_LoginWithContext_loginData_type_name_len", "loginData_type_name length (String)")
F.Authentication_LoginWithContext_loginData_type_name_data = ProtoField.string("Authentication_LoginWithContext_loginData_type_name_data", "loginData_type_name data (String)")
F.Authentication_LoginWithContext_loginData_len_plus_four = ProtoField.uint32("Authentication_LoginWithContext_loginData_len_plus_four", "loginData_len_plus_four (uint32)")
F.Authentication_LoginWithContext_loginData_data_len = ProtoField.uint32("Authentication_LoginWithContext_loginData_data_len", "loginData_data_len (uint32)")
F.Authentication_LoginWithContext_retval = ProtoField.uint32("Authentication_LoginWithContext_retval", "retval (uint32)")
F.Authentication_LoginWithContext_pidPrincipal = ProtoField.uint32("Authentication_LoginWithContext_pidPrincipal", "pidPrincipal (uint32)")
F.Authentication_LoginWithContext_pbufResponse_len = ProtoField.uint32("Authentication_LoginWithContext_pbufResponse_len", "pbufResponse length (Buffer)")
F.Authentication_LoginWithContext_pbufResponse_data = ProtoField.bytes("Authentication_LoginWithContext_pbufResponse_data", "pbufResponse data (Buffer)")
F.Friends_Wii_U_GetAllInformation_Birthday = ProtoField.uint64("Friends_Wii_U_GetAllInformation_Birthday", "Birthday (uint64)")
F.Friends_Wii_U_GetAllInformation_Friend_list_len = ProtoField.uint32("Friends_Wii_U_GetAllInformation_Friend_list_len", "Friend list length (uint32)")
F.Friends_Wii_U_GetAllInformation_Sent_friend_requests_len = ProtoField.uint32("Friends_Wii_U_GetAllInformation_Sent_friend_requests_len", "Sent friend requests length (uint32)")
F.Friends_Wii_U_GetAllInformation_Received_friend_requests_len = ProtoField.uint32("Friends_Wii_U_GetAllInformation_Received_friend_requests_len", "Received friend requests length (uint32)")
F.Friends_Wii_U_GetAllInformation_Blacklist_len = ProtoField.uint32("Friends_Wii_U_GetAllInformation_Blacklist_len", "Blacklist length (uint32)")
F.Friends_Wii_U_GetAllInformation_Unknown = ProtoField.bool("Friends_Wii_U_GetAllInformation_Unknown", "Unknown (bool)")
F.Friends_Wii_U_GetAllInformation_Notifications_len = ProtoField.uint32("Friends_Wii_U_GetAllInformation_Notifications_len", "Notifications length (uint32)")
F.Friends_Wii_U_GetAllInformation_Unknown = ProtoField.bool("Friends_Wii_U_GetAllInformation_Unknown", "Unknown (bool)")
F.Friends_Wii_U_AddFriend_Pid = ProtoField.uint32("Friends_Wii_U_AddFriend_Pid", "Pid (uint32)")
F.Friends_Wii_U_AddFriendByName_Name_len = ProtoField.uint16("Friends_Wii_U_AddFriendByName_Name_len", "Name length (String)")
F.Friends_Wii_U_AddFriendByName_Name_data = ProtoField.string("Friends_Wii_U_AddFriendByName_Name_data", "Name data (String)")
F.Friends_Wii_U_RemoveFriend_Pid = ProtoField.uint32("Friends_Wii_U_RemoveFriend_Pid", "Pid (uint32)")
F.Friends_Wii_U_AddFriendRequest_Unknown = ProtoField.uint32("Friends_Wii_U_AddFriendRequest_Unknown", "Unknown (uint32)")
F.Friends_Wii_U_AddFriendRequest_Unknown = ProtoField.uint8("Friends_Wii_U_AddFriendRequest_Unknown", "Unknown (uint8)")
F.Friends_Wii_U_AddFriendRequest_Unknown_len = ProtoField.uint16("Friends_Wii_U_AddFriendRequest_Unknown_len", "Unknown length (String)")
F.Friends_Wii_U_AddFriendRequest_Unknown_data = ProtoField.string("Friends_Wii_U_AddFriendRequest_Unknown_data", "Unknown data (String)")
F.Friends_Wii_U_AddFriendRequest_Unknown = ProtoField.uint8("Friends_Wii_U_AddFriendRequest_Unknown", "Unknown (uint8)")
F.Friends_Wii_U_AddFriendRequest_Unknown_len = ProtoField.uint16("Friends_Wii_U_AddFriendRequest_Unknown_len", "Unknown length (String)")
F.Friends_Wii_U_AddFriendRequest_Unknown_data = ProtoField.string("Friends_Wii_U_AddFriendRequest_Unknown_data", "Unknown data (String)")
F.Friends_Wii_U_AddFriendRequest_Unknown = ProtoField.uint64("Friends_Wii_U_AddFriendRequest_Unknown", "Unknown (uint64)")
F.Friends_Wii_U_CancelFriendRequest_Id = ProtoField.uint64("Friends_Wii_U_CancelFriendRequest_Id", "Id (uint64)")
F.Friends_Wii_U_AcceptFriendRequest_Id = ProtoField.uint64("Friends_Wii_U_AcceptFriendRequest_Id", "Id (uint64)")
F.Friends_Wii_U_DeleteFriendRequest_Id = ProtoField.uint64("Friends_Wii_U_DeleteFriendRequest_Id", "Id (uint64)")
F.Friends_Wii_U_DenyFriendRequest_Id = ProtoField.uint64("Friends_Wii_U_DenyFriendRequest_Id", "Id (uint64)")
F.Friends_Wii_U_MarkFriendRequestsAsReceived_Friend_requests_len = ProtoField.uint32("Friends_Wii_U_MarkFriendRequestsAsReceived_Friend_requests_len", "Friend requests length (uint32)")
F.Friends_Wii_U_MarkFriendRequestsAsReceived_Friend_requests_item = ProtoField.uint64("Friends_Wii_U_MarkFriendRequestsAsReceived_Friend_requests_item", "Friend requests (uint64)")
F.Friends_Wii_U_RemoveBlackList_Pid = ProtoField.uint32("Friends_Wii_U_RemoveBlackList_Pid", "Pid (uint32)")
F.Friends_Wii_U_UpdateMii_Unknown = ProtoField.uint64("Friends_Wii_U_UpdateMii_Unknown", "Unknown (uint64)")
F.Friends_Wii_U_UpdateComment_Unknown = ProtoField.uint64("Friends_Wii_U_UpdateComment_Unknown", "Unknown (uint64)")
F.Friends_Wii_U_GetBasicInfo_Pids_len = ProtoField.uint32("Friends_Wii_U_GetBasicInfo_Pids_len", "Pids length (uint32)")
F.Friends_Wii_U_GetBasicInfo_Pids_item = ProtoField.uint32("Friends_Wii_U_GetBasicInfo_Pids_item", "Pids (uint32)")
F.Friends_Wii_U_GetBasicInfo_Infos_len = ProtoField.uint32("Friends_Wii_U_GetBasicInfo_Infos_len", "Infos length (uint32)")
F.Friends_Wii_U_DeleteFriendFlags_Unknown_len = ProtoField.uint32("Friends_Wii_U_DeleteFriendFlags_Unknown_len", "Unknown length (uint32)")
F.Friends_Wii_U_CheckSettingStatus_Unknown = ProtoField.uint8("Friends_Wii_U_CheckSettingStatus_Unknown", "Unknown (uint8)")
F.Friends_Wii_U_GetRequestBlockSettings_Unknown_len = ProtoField.uint32("Friends_Wii_U_GetRequestBlockSettings_Unknown_len", "Unknown length (uint32)")
F.Friends_Wii_U_GetRequestBlockSettings_Unknown_item = ProtoField.uint32("Friends_Wii_U_GetRequestBlockSettings_Unknown_item", "Unknown (uint32)")
F.Friends_Wii_U_GetRequestBlockSettings_Settings_len = ProtoField.uint32("Friends_Wii_U_GetRequestBlockSettings_Settings_len", "Settings length (uint32)")
F.Simple_Authentication_LoginWithTokenEx_strToken_len = ProtoField.uint16("Simple_Authentication_LoginWithTokenEx_strToken_len", "strToken length (String)")
F.Simple_Authentication_LoginWithTokenEx_strToken_data = ProtoField.string("Simple_Authentication_LoginWithTokenEx_strToken_data", "strToken data (String)")
F.Simple_Authentication_LoginWithTokenEx_oAnyData_data_bytes = ProtoField.bytes("Simple_Authentication_LoginWithTokenEx_oAnyData_data_bytes", "oAnyData data bytes (bytes)")
F.Simple_Authentication_LoginWithTokenEx_oAnyData_type_name_len = ProtoField.uint16("Simple_Authentication_LoginWithTokenEx_oAnyData_type_name_len", "oAnyData_type_name length (String)")
F.Simple_Authentication_LoginWithTokenEx_oAnyData_type_name_data = ProtoField.string("Simple_Authentication_LoginWithTokenEx_oAnyData_type_name_data", "oAnyData_type_name data (String)")
F.Simple_Authentication_LoginWithTokenEx_oAnyData_len_plus_four = ProtoField.uint32("Simple_Authentication_LoginWithTokenEx_oAnyData_len_plus_four", "oAnyData_len_plus_four (uint32)")
F.Simple_Authentication_LoginWithTokenEx_oAnyData_data_len = ProtoField.uint32("Simple_Authentication_LoginWithTokenEx_oAnyData_data_len", "oAnyData_data_len (uint32)")
F.Simple_Authentication_LoginWithTokenEx_retval = ProtoField.uint32("Simple_Authentication_LoginWithTokenEx_retval", "retval (uint32)")
F.Simple_Authentication_LoginWithTokenEx_pidPrincipal = ProtoField.uint32("Simple_Authentication_LoginWithTokenEx_pidPrincipal", "pidPrincipal (uint32)")
F.Simple_Authentication_LoginWithTokenEx_strReturnMsg_len = ProtoField.uint16("Simple_Authentication_LoginWithTokenEx_strReturnMsg_len", "strReturnMsg length (String)")
F.Simple_Authentication_LoginWithTokenEx_strReturnMsg_data = ProtoField.string("Simple_Authentication_LoginWithTokenEx_strReturnMsg_data", "strReturnMsg data (String)")
F.Match_Making_Ext_EndParticipation_idGathering = ProtoField.uint32("Match_Making_Ext_EndParticipation_idGathering", "idGathering (uint32)")
F.Match_Making_Ext_EndParticipation_strMessage_len = ProtoField.uint16("Match_Making_Ext_EndParticipation_strMessage_len", "strMessage length (String)")
F.Match_Making_Ext_EndParticipation_strMessage_data = ProtoField.string("Match_Making_Ext_EndParticipation_strMessage_data", "strMessage data (String)")
F.Match_Making_Ext_EndParticipation_retval = ProtoField.bool("Match_Making_Ext_EndParticipation_retval", "retval (bool)")
F.Match_Making_Ext_GetParticipants_idGathering = ProtoField.uint32("Match_Making_Ext_GetParticipants_idGathering", "idGathering (uint32)")
F.Match_Making_Ext_GetParticipants_bOnlyActive = ProtoField.bool("Match_Making_Ext_GetParticipants_bOnlyActive", "bOnlyActive (bool)")
F.Match_Making_Ext_GetParticipants_lstParticipants_len = ProtoField.uint32("Match_Making_Ext_GetParticipants_lstParticipants_len", "lstParticipants length (uint32)")
F.Match_Making_Ext_GetParticipants_lstParticipants_item = ProtoField.uint32("Match_Making_Ext_GetParticipants_lstParticipants_item", "lstParticipants (uint32)")
F.Match_Making_Ext_GetDetailedParticipants_idGathering = ProtoField.uint32("Match_Making_Ext_GetDetailedParticipants_idGathering", "idGathering (uint32)")
F.Match_Making_Ext_GetDetailedParticipants_bOnlyActiv = ProtoField.bool("Match_Making_Ext_GetDetailedParticipants_bOnlyActiv", "bOnlyActiv (bool)")
F.Match_Making_Ext_GetParticipantsURLs_lstGatherings_len = ProtoField.uint32("Match_Making_Ext_GetParticipantsURLs_lstGatherings_len", "lstGatherings length (uint32)")
F.Match_Making_Ext_GetParticipantsURLs_lstGatherings_item = ProtoField.uint32("Match_Making_Ext_GetParticipantsURLs_lstGatherings_item", "lstGatherings (uint32)")
F.Match_Making_Ext_GetParticipantsURLs_lstGatheringURLs_len = ProtoField.uint32("Match_Making_Ext_GetParticipantsURLs_lstGatheringURLs_len", "lstGatheringURLs length (uint32)")
F.Match_Making_Ext_GetGatheringRelations_id = ProtoField.uint32("Match_Making_Ext_GetGatheringRelations_id", "id (uint32)")
F.Match_Making_Ext_GetGatheringRelations_descr_len = ProtoField.uint16("Match_Making_Ext_GetGatheringRelations_descr_len", "descr length (String)")
F.Match_Making_Ext_GetGatheringRelations_descr_data = ProtoField.string("Match_Making_Ext_GetGatheringRelations_descr_data", "descr data (String)")
F.Match_Making_Ext_GetGatheringRelations_retval_len = ProtoField.uint16("Match_Making_Ext_GetGatheringRelations_retval_len", "retval length (String)")
F.Match_Making_Ext_GetGatheringRelations_retval_data = ProtoField.string("Match_Making_Ext_GetGatheringRelations_retval_data", "retval data (String)")
F.Match_Making_Ext_DeleteFromDeletions_lstDeletions_len = ProtoField.uint32("Match_Making_Ext_DeleteFromDeletions_lstDeletions_len", "lstDeletions length (uint32)")
F.Match_Making_Ext_DeleteFromDeletions_lstDeletions_item = ProtoField.uint32("Match_Making_Ext_DeleteFromDeletions_lstDeletions_item", "lstDeletions (uint32)")
F.Match_Making_Ext_DeleteFromDeletions_pid = ProtoField.uint32("Match_Making_Ext_DeleteFromDeletions_pid", "pid (uint32)")
F.Monitoring_PingDaemon_retval = ProtoField.bool("Monitoring_PingDaemon_retval", "retval (bool)")
F.Monitoring_GetClusterMembers_strValues_len = ProtoField.uint32("Monitoring_GetClusterMembers_strValues_len", "strValues length (uint32)")
F.Monitoring_GetClusterMembers_strValues_item_len = ProtoField.uint16("Monitoring_GetClusterMembers_strValues_item_len", "strValues length (String)")
F.Monitoring_GetClusterMembers_strValues_item_data = ProtoField.string("Monitoring_GetClusterMembers_strValues_item_data", "strValues data (String)")
F.Remote_Log_Device_Log_Message_len = ProtoField.uint16("Remote_Log_Device_Log_Message_len", "Message length (String)")
F.Remote_Log_Device_Log_Message_data = ProtoField.string("Remote_Log_Device_Log_Message_data", "Message data (String)")
F.Friends_AddFriend_uiPlayer = ProtoField.uint32("Friends_AddFriend_uiPlayer", "uiPlayer (uint32)")
F.Friends_AddFriend_uiDetails = ProtoField.uint32("Friends_AddFriend_uiDetails", "uiDetails (uint32)")
F.Friends_AddFriend_strMessage_len = ProtoField.uint16("Friends_AddFriend_strMessage_len", "strMessage length (String)")
F.Friends_AddFriend_strMessage_data = ProtoField.string("Friends_AddFriend_strMessage_data", "strMessage data (String)")
F.Friends_AddFriend_retval = ProtoField.bool("Friends_AddFriend_retval", "retval (bool)")
F.Friends_AddFriendByName_strPlayerName_len = ProtoField.uint16("Friends_AddFriendByName_strPlayerName_len", "strPlayerName length (String)")
F.Friends_AddFriendByName_strPlayerName_data = ProtoField.string("Friends_AddFriendByName_strPlayerName_data", "strPlayerName data (String)")
F.Friends_AddFriendByName_uiDetails = ProtoField.uint32("Friends_AddFriendByName_uiDetails", "uiDetails (uint32)")
F.Friends_AddFriendByName_strMessage_len = ProtoField.uint16("Friends_AddFriendByName_strMessage_len", "strMessage length (String)")
F.Friends_AddFriendByName_strMessage_data = ProtoField.string("Friends_AddFriendByName_strMessage_data", "strMessage data (String)")
F.Friends_AddFriendByName_retval = ProtoField.bool("Friends_AddFriendByName_retval", "retval (bool)")
F.Friends_AddFriendWithDetails_uiPlayer = ProtoField.uint32("Friends_AddFriendWithDetails_uiPlayer", "uiPlayer (uint32)")
F.Friends_AddFriendWithDetails_uiDetails = ProtoField.uint32("Friends_AddFriendWithDetails_uiDetails", "uiDetails (uint32)")
F.Friends_AddFriendWithDetails_strMessage_len = ProtoField.uint16("Friends_AddFriendWithDetails_strMessage_len", "strMessage length (String)")
F.Friends_AddFriendWithDetails_strMessage_data = ProtoField.string("Friends_AddFriendWithDetails_strMessage_data", "strMessage data (String)")
F.Friends_AddFriendByNameWithDetails_uiPlayer = ProtoField.uint32("Friends_AddFriendByNameWithDetails_uiPlayer", "uiPlayer (uint32)")
F.Friends_AddFriendByNameWithDetails_uiDetails = ProtoField.uint32("Friends_AddFriendByNameWithDetails_uiDetails", "uiDetails (uint32)")
F.Friends_AddFriendByNameWithDetails_strMessage_len = ProtoField.uint16("Friends_AddFriendByNameWithDetails_strMessage_len", "strMessage length (String)")
F.Friends_AddFriendByNameWithDetails_strMessage_data = ProtoField.string("Friends_AddFriendByNameWithDetails_strMessage_data", "strMessage data (String)")
F.Friends_AcceptFriendship_uiPlayer = ProtoField.uint32("Friends_AcceptFriendship_uiPlayer", "uiPlayer (uint32)")
F.Friends_AcceptFriendship_retval = ProtoField.bool("Friends_AcceptFriendship_retval", "retval (bool)")
F.Friends_DeclineFriendship_uiPlayer = ProtoField.uint32("Friends_DeclineFriendship_uiPlayer", "uiPlayer (uint32)")
F.Friends_DeclineFriendship_retval = ProtoField.bool("Friends_DeclineFriendship_retval", "retval (bool)")
F.Friends_BlackList_uiPlayer = ProtoField.uint32("Friends_BlackList_uiPlayer", "uiPlayer (uint32)")
F.Friends_BlackList_uiDetails = ProtoField.uint32("Friends_BlackList_uiDetails", "uiDetails (uint32)")
F.Friends_BlackList_retval = ProtoField.bool("Friends_BlackList_retval", "retval (bool)")
F.Friends_BlackListByName_strPlayerName_len = ProtoField.uint16("Friends_BlackListByName_strPlayerName_len", "strPlayerName length (String)")
F.Friends_BlackListByName_strPlayerName_data = ProtoField.string("Friends_BlackListByName_strPlayerName_data", "strPlayerName data (String)")
F.Friends_BlackListByName_uiDetails = ProtoField.uint32("Friends_BlackListByName_uiDetails", "uiDetails (uint32)")
F.Friends_BlackListByName_retval = ProtoField.bool("Friends_BlackListByName_retval", "retval (bool)")
F.Friends_ClearRelationship_uiPlayer = ProtoField.uint32("Friends_ClearRelationship_uiPlayer", "uiPlayer (uint32)")
F.Friends_ClearRelationship_retval = ProtoField.bool("Friends_ClearRelationship_retval", "retval (bool)")
F.Friends_UpdateDetails_uiPlayer = ProtoField.uint32("Friends_UpdateDetails_uiPlayer", "uiPlayer (uint32)")
F.Friends_UpdateDetails_uiDetails = ProtoField.uint32("Friends_UpdateDetails_uiDetails", "uiDetails (uint32)")
F.Friends_UpdateDetails_retval = ProtoField.bool("Friends_UpdateDetails_retval", "retval (bool)")
F.Friends_GetList_byRelationship = ProtoField.uint8("Friends_GetList_byRelationship", "byRelationship (uint8)")
F.Friends_GetList_bReversed = ProtoField.bool("Friends_GetList_bReversed", "bReversed (bool)")
F.Friends_GetList_lstFriendsList_len = ProtoField.uint32("Friends_GetList_lstFriendsList_len", "lstFriendsList length (uint32)")
F.Friends_GetList_lstFriendsList_item = ProtoField.uint32("Friends_GetList_lstFriendsList_item", "lstFriendsList (uint32)")
F.Friends_GetDetailedList_byRelationship = ProtoField.uint8("Friends_GetDetailedList_byRelationship", "byRelationship (uint8)")
F.Friends_GetDetailedList_bReversed = ProtoField.bool("Friends_GetDetailedList_bReversed", "bReversed (bool)")
F.Friends_GetDetailedList_lstFriendsList_len = ProtoField.uint32("Friends_GetDetailedList_lstFriendsList_len", "lstFriendsList length (uint32)")
F.Friends_GetRelationships_uiTotalCount = ProtoField.uint32("Friends_GetRelationships_uiTotalCount", "uiTotalCount (uint32)")
F.Friends_GetRelationships_lstRelationshipsList_len = ProtoField.uint32("Friends_GetRelationships_lstRelationshipsList_len", "lstRelationshipsList length (uint32)")
function do_Sint8(conn, tree, tvb, off, field_name)
tree:add_le(F[field_name], tvb(off,1))return off + 1, tvb(off,1):le_int()
end
function do_Sint16(conn, tree, tvb, off, field_name)
tree:add_le(F[field_name], tvb(off,2))return off + 2, tvb(off,2):le_int()
end
function do_Sint32(conn, tree, tvb, off, field_name)
tree:add_le(F[field_name], tvb(off,4))return off + 4, tvb(off,4):le_int()
end
function do_Sint64(conn, tree, tvb, off, field_name)
tree:add_le(F[field_name], tvb(off,8))return off + 8
end
function do_Int32(conn, tree, tvb, off, field_name)
tree:add_le(F[field_name], tvb(off,4))return off + 4, tvb(off,4):le_int()
end
function do_byte(conn, tree, tvb, off, field_name)
tree:add_le(F[field_name], tvb(off,1))return off + 1, tvb(off,1):le_uint()
end
function do_Uint8(conn, tree, tvb, off, field_name)
tree:add_le(F[field_name], tvb(off,1))return off + 1, tvb(off,1):le_uint()
end
function do_Uint16(conn, tree, tvb, off, field_name)
tree:add_le(F[field_name], tvb(off,2))return off + 2, tvb(off,2):le_uint()
end
function do_Uint32(conn, tree, tvb, off, field_name)
tree:add_le(F[field_name], tvb(off,4))return off + 4, tvb(off,4):le_uint()
end
function do_Uint64(conn, tree, tvb, off, field_name)
tree:add_le(F[field_name], tvb(off,8))return off + 8
end
function do_PID(conn, tree, tvb, off, field_name)
tree:add_le(F[field_name], tvb(off,4))return off + 4, tvb(off,4):le_uint()
end
function do_Result(conn, tree, tvb, off, field_name)
tree:add_le(F[field_name], tvb(off,4))return off + 4, tvb(off,4):le_uint()
end
function do_DateTime(conn, tree, tvb, off, field_name)
tree:add_le(F[field_name], tvb(off,8))return off + 8
end
function do_Buffer(conn, tree, tvb, off, field_name)
local Buffer_len = tvb(off,4):le_uint()
	tree:add_le(F[field_name.."_len"], tvb(off, 4))
	if Buffer_len ~= 0 then
		tree:add(F[field_name.."_data"], tvb(off+4, Buffer_len))
		return off + 4 + Buffer_len, tvb(off+4, Buffer_len)
	else
		return off + 4
	end
	
end
function do_qBuffer(conn, tree, tvb, off, field_name)
local qBuffer_len = tvb(off,2):le_uint()
	tree:add_le(F[field_name.."_len"], tvb(off, 2))
	if qBuffer_len ~= 0 then
		tree:add(F[field_name.."_data"], tvb(off+2, qBuffer_len))
		return off + 2 + qBuffer_len, tvb(off+2, qBuffer_len)
	else
		return off + 2
	end
	
end
function do_String(conn, tree, tvb, off, field_name)
local String_len = tvb(off,2):le_uint()
	tree:add_le(F[field_name.. "_len"], tvb(off, 2))
	tree:add(F[field_name.. "_data"], tvb(off+2, String_len))
	return off + 2 + String_len, tvb(off+2, String_len-1):string()
end
function do_StationURL(conn, tree, tvb, off, field_name)
local StationURL_len = tvb(off,2):le_uint()
	tree:add_le(F[field_name.. "_len"], tvb(off, 2))
	tree:add(F[field_name.. "_data"], tvb(off+2, StationURL_len))
	return off + 2 + StationURL_len, tvb(off+2, StationURL_len-1):string()
end
function do_Bool(conn, tree, tvb, off, field_name)
tree:add(F[field_name], tvb(off,1))
	return off + 1, (tvb(off,1)~= 0)
end
function do_Float(conn, tree, tvb, off, field_name)
tree:add_le(F[field_name], tvb(off,4))
	return off + 4, tvb(off,4):le_float()
end
function do_Double(conn, tree, tvb, off, field_name)
tree:add_le(F[field_name], tvb(off,8))
	return off + 8, tvb(off,8):le_float()
end
function do_Data(conn, tree, tvb, off, field_name)
local Data_container = tree:add(F.Data, tvb(off, 0))
	Data_container:set_text("Data")
	off, Data_type_name = do_String(conn, Data_container, tvb, off, 'Data_type_name')
off, Data_len_plus_four = do_Uint32(conn, Data_container, tvb, off, 'Data_len_plus_four')
off, Data_data = do_Buffer(conn, Data_container, tvb, off, 'Data_data')

return off
end

			function do_Structure(conn, tree, tvb, off, field_name)
				local Structure_container = tree:add(F.Structure, tvb(off, 0))
				Structure_container:set_text("Structure")
				return off + conn['struct_header_len']
			end
		function do_DataStoreRatingInfo(conn, tree, tvb, off, field_name)
local DataStoreRatingInfo_container = tree:add(F.DataStoreRatingInfo, tvb(off, 0))
	DataStoreRatingInfo_container:set_text("DataStoreRatingInfo")
	off = do_Structure(conn, DataStoreRatingInfo_container, tvb, off, 'DataStoreRatingInfo_Base')
off, DataStoreRatingInfo_totalValue = do_Sint64(conn, DataStoreRatingInfo_container, tvb, off, 'DataStoreRatingInfo_totalValue')
off, DataStoreRatingInfo_count = do_Uint32(conn, DataStoreRatingInfo_container, tvb, off, 'DataStoreRatingInfo_count')
off, DataStoreRatingInfo_initialValue = do_Sint64(conn, DataStoreRatingInfo_container, tvb, off, 'DataStoreRatingInfo_initialValue')

return off
end
function do_MiiV2(conn, tree, tvb, off, field_name)
local MiiV2_container = tree:add(F.MiiV2, tvb(off, 0))
	MiiV2_container:set_text("MiiV2")
	off, MiiV2_Name = do_String(conn, MiiV2_container, tvb, off, 'MiiV2_Name')
off, MiiV2_Unknown = do_Uint8(conn, MiiV2_container, tvb, off, 'MiiV2_Unknown')
off, MiiV2_Unknown2 = do_Uint8(conn, MiiV2_container, tvb, off, 'MiiV2_Unknown2')
off, MiiV2_Mii_data_FFLStoreData = do_Buffer(conn, MiiV2_container, tvb, off, 'MiiV2_Mii_data_FFLStoreData')
off, MiiV2_Unknown3 = do_DateTime(conn, MiiV2_container, tvb, off, 'MiiV2_Unknown3')

return off
end
function do_Gathering(conn, tree, tvb, off, field_name)
local Gathering_container = tree:add(F.Gathering, tvb(off, 0))
	Gathering_container:set_text("Gathering")
	off = do_Structure(conn, Gathering_container, tvb, off, 'Gathering_Base')
off, Gathering_m_idMyself = do_Uint32(conn, Gathering_container, tvb, off, 'Gathering_m_idMyself')
off, Gathering_m_pidOwner = do_PID(conn, Gathering_container, tvb, off, 'Gathering_m_pidOwner')
off, Gathering_m_pidHost = do_PID(conn, Gathering_container, tvb, off, 'Gathering_m_pidHost')
off, Gathering_m_uiMinParticipants = do_Uint16(conn, Gathering_container, tvb, off, 'Gathering_m_uiMinParticipants')
off, Gathering_m_uiMaxParticipants = do_Uint16(conn, Gathering_container, tvb, off, 'Gathering_m_uiMaxParticipants')
off, Gathering_m_uiParticipationPolicy = do_Uint32(conn, Gathering_container, tvb, off, 'Gathering_m_uiParticipationPolicy')
off, Gathering_m_uiPolicyArgument = do_Uint32(conn, Gathering_container, tvb, off, 'Gathering_m_uiPolicyArgument')
off, Gathering_m_uiFlags = do_Uint32(conn, Gathering_container, tvb, off, 'Gathering_m_uiFlags')
off, Gathering_m_uiState = do_Uint32(conn, Gathering_container, tvb, off, 'Gathering_m_uiState')
off, Gathering_m_strDescription = do_String(conn, Gathering_container, tvb, off, 'Gathering_m_strDescription')

return off
end
function do_MatchmakeParam(conn, tree, tvb, off, field_name)
local MatchmakeParam_container = tree:add(F.MatchmakeParam, tvb(off, 0))
	MatchmakeParam_container:set_text("MatchmakeParam")
	off = do_Structure(conn, MatchmakeParam_container, tvb, off, 'MatchmakeParam_Base')
--[[ Stubbed! Missing type Map<String, Variant>]]

return off
end
function do_ResultRange(conn, tree, tvb, off, field_name)
local ResultRange_container = tree:add(F.ResultRange, tvb(off, 0))
	ResultRange_container:set_text("ResultRange")
	off = do_Structure(conn, ResultRange_container, tvb, off, 'ResultRange_Base')
off, ResultRange_m_uiOffset = do_Uint32(conn, ResultRange_container, tvb, off, 'ResultRange_m_uiOffset')
off, ResultRange_m_uiSize = do_Uint32(conn, ResultRange_container, tvb, off, 'ResultRange_m_uiSize')

return off
end
function do_DataStoreRatingInitParam(conn, tree, tvb, off, field_name)
local DataStoreRatingInitParam_container = tree:add(F.DataStoreRatingInitParam, tvb(off, 0))
	DataStoreRatingInitParam_container:set_text("DataStoreRatingInitParam")
	off = do_Structure(conn, DataStoreRatingInitParam_container, tvb, off, 'DataStoreRatingInitParam_Base')
off, DataStoreRatingInitParam_flag = do_Uint8(conn, DataStoreRatingInitParam_container, tvb, off, 'DataStoreRatingInitParam_flag')
off, DataStoreRatingInitParam_internalFlag = do_Uint8(conn, DataStoreRatingInitParam_container, tvb, off, 'DataStoreRatingInitParam_internalFlag')
off, DataStoreRatingInitParam_lockType = do_Uint8(conn, DataStoreRatingInitParam_container, tvb, off, 'DataStoreRatingInitParam_lockType')
off, DataStoreRatingInitParam_initialValue = do_Sint64(conn, DataStoreRatingInitParam_container, tvb, off, 'DataStoreRatingInitParam_initialValue')
off, DataStoreRatingInitParam_rangeMin = do_Sint32(conn, DataStoreRatingInitParam_container, tvb, off, 'DataStoreRatingInitParam_rangeMin')
off, DataStoreRatingInitParam_rangeMax = do_Sint32(conn, DataStoreRatingInitParam_container, tvb, off, 'DataStoreRatingInitParam_rangeMax')
off, DataStoreRatingInitParam_periodHour = do_Sint8(conn, DataStoreRatingInitParam_container, tvb, off, 'DataStoreRatingInitParam_periodHour')
off, DataStoreRatingInitParam_periodDuration = do_Sint16(conn, DataStoreRatingInitParam_container, tvb, off, 'DataStoreRatingInitParam_periodDuration')

return off
end
function do_DataStorePermission(conn, tree, tvb, off, field_name)
local DataStorePermission_container = tree:add(F.DataStorePermission, tvb(off, 0))
	DataStorePermission_container:set_text("DataStorePermission")
	off = do_Structure(conn, DataStorePermission_container, tvb, off, 'DataStorePermission_Base')
off, DataStorePermission_permission = do_Uint8(conn, DataStorePermission_container, tvb, off, 'DataStorePermission_permission')
-- list !! Uint64
	local DataStorePermission_recipientIds_len = tvb(off, 4):le_uint()
	subDataStorePermission_container = DataStorePermission_container:add_le(F.DataStorePermission_recipientIds_len, tvb(off,4))
	off = off + 4
	for i=1,DataStorePermission_recipientIds_len do
	off, DataStorePermission_recipientIds_item = do_Uint64(conn, subDataStorePermission_container, tvb, off, 'DataStorePermission_recipientIds_item')

	end
	

return off
end
function do_DataStoreRatingInfoWithSlot(conn, tree, tvb, off, field_name)
local DataStoreRatingInfoWithSlot_container = tree:add(F.DataStoreRatingInfoWithSlot, tvb(off, 0))
	DataStoreRatingInfoWithSlot_container:set_text("DataStoreRatingInfoWithSlot")
	off = do_Structure(conn, DataStoreRatingInfoWithSlot_container, tvb, off, 'DataStoreRatingInfoWithSlot_Base')
off, DataStoreRatingInfoWithSlot_slot = do_Sint8(conn, DataStoreRatingInfoWithSlot_container, tvb, off, 'DataStoreRatingInfoWithSlot_slot')
off = do_DataStoreRatingInfo(conn, DataStoreRatingInfoWithSlot_container, tvb, off, 'DataStoreRatingInfoWithSlot_rating')

return off
end
function do_GameKey(conn, tree, tvb, off, field_name)
local GameKey_container = tree:add(F.GameKey, tvb(off, 0))
	GameKey_container:set_text("GameKey")
	off, GameKey_Title_id = do_Uint64(conn, GameKey_container, tvb, off, 'GameKey_Title_id')
off, GameKey_Title_version = do_Uint16(conn, GameKey_container, tvb, off, 'GameKey_Title_version')

return off
end
function do_PrincipalBasicInfo(conn, tree, tvb, off, field_name)
local PrincipalBasicInfo_container = tree:add(F.PrincipalBasicInfo, tvb(off, 0))
	PrincipalBasicInfo_container:set_text("PrincipalBasicInfo")
	off, PrincipalBasicInfo_Pid = do_PID(conn, PrincipalBasicInfo_container, tvb, off, 'PrincipalBasicInfo_Pid')
off, PrincipalBasicInfo_NNID = do_String(conn, PrincipalBasicInfo_container, tvb, off, 'PrincipalBasicInfo_NNID')
off = do_MiiV2(conn, PrincipalBasicInfo_container, tvb, off, 'PrincipalBasicInfo_Mii')
off, PrincipalBasicInfo_Unknown = do_Uint8(conn, PrincipalBasicInfo_container, tvb, off, 'PrincipalBasicInfo_Unknown')

return off
end
function do_MessageRecipient(conn, tree, tvb, off, field_name)
local MessageRecipient_container = tree:add(F.MessageRecipient, tvb(off, 0))
	MessageRecipient_container:set_text("MessageRecipient")
	off, MessageRecipient_m_uiRecipientType = do_Uint32(conn, MessageRecipient_container, tvb, off, 'MessageRecipient_m_uiRecipientType')
off, MessageRecipient_m_principalId = do_PID(conn, MessageRecipient_container, tvb, off, 'MessageRecipient_m_principalId')
off, MessageRecipient_m_gatheringId = do_Uint32(conn, MessageRecipient_container, tvb, off, 'MessageRecipient_m_gatheringId')

return off
end
function do_MatchmakeSession(conn, tree, tvb, off, field_name)
local MatchmakeSession_container = tree:add(F.MatchmakeSession, tvb(off, 0))
	MatchmakeSession_container:set_text("MatchmakeSession")
	off = do_Structure(conn, MatchmakeSession_container, tvb, off, 'MatchmakeSession_Base')
off = do_Gathering(conn, MatchmakeSession_container, tvb, off, 'MatchmakeSession_Base2')
off, MatchmakeSession_m_GameMode = do_Uint32(conn, MatchmakeSession_container, tvb, off, 'MatchmakeSession_m_GameMode')
-- list !! Uint32
	local MatchmakeSession_m_Attribs_len = tvb(off, 4):le_uint()
	subMatchmakeSession_container = MatchmakeSession_container:add_le(F.MatchmakeSession_m_Attribs_len, tvb(off,4))
	off = off + 4
	for i=1,MatchmakeSession_m_Attribs_len do
	off, MatchmakeSession_m_Attribs_item = do_Uint32(conn, subMatchmakeSession_container, tvb, off, 'MatchmakeSession_m_Attribs_item')

	end
	
off, MatchmakeSession_m_OpenParticipation = do_Bool(conn, MatchmakeSession_container, tvb, off, 'MatchmakeSession_m_OpenParticipation')
off, MatchmakeSession_m_MatchmakeSystemType = do_Uint32(conn, MatchmakeSession_container, tvb, off, 'MatchmakeSession_m_MatchmakeSystemType')
off, MatchmakeSession_m_ApplicationBuffer = do_Buffer(conn, MatchmakeSession_container, tvb, off, 'MatchmakeSession_m_ApplicationBuffer')
off, MatchmakeSession_m_ParticipationCount = do_Uint32(conn, MatchmakeSession_container, tvb, off, 'MatchmakeSession_m_ParticipationCount')
off, MatchmakeSession_m_ProgressScore = do_Uint8(conn, MatchmakeSession_container, tvb, off, 'MatchmakeSession_m_ProgressScore')
off, MatchmakeSession_m_SessionKey = do_Buffer(conn, MatchmakeSession_container, tvb, off, 'MatchmakeSession_m_SessionKey')
off, MatchmakeSession_m_Option0 = do_Uint32(conn, MatchmakeSession_container, tvb, off, 'MatchmakeSession_m_Option0')
off = do_MatchmakeParam(conn, MatchmakeSession_container, tvb, off, 'MatchmakeSession_m_MatchmakeParam')
off, MatchmakeSession_m_StartedTime = do_DateTime(conn, MatchmakeSession_container, tvb, off, 'MatchmakeSession_m_StartedTime')
off, MatchmakeSession_m_UserPassword = do_String(conn, MatchmakeSession_container, tvb, off, 'MatchmakeSession_m_UserPassword')
off, MatchmakeSession_m_ReferGid = do_Uint32(conn, MatchmakeSession_container, tvb, off, 'MatchmakeSession_m_ReferGid')
off, MatchmakeSession_m_UserPasswordEnabled = do_Bool(conn, MatchmakeSession_container, tvb, off, 'MatchmakeSession_m_UserPasswordEnabled')
off, MatchmakeSession_m_SystemPasswordEnabled = do_Bool(conn, MatchmakeSession_container, tvb, off, 'MatchmakeSession_m_SystemPasswordEnabled')
off, MatchmakeSession_m_Codeword = do_String(conn, MatchmakeSession_container, tvb, off, 'MatchmakeSession_m_Codeword')

return off
end
function do_MatchmakeBlockListParam(conn, tree, tvb, off, field_name)
local MatchmakeBlockListParam_container = tree:add(F.MatchmakeBlockListParam, tvb(off, 0))
	MatchmakeBlockListParam_container:set_text("MatchmakeBlockListParam")
	off = do_Structure(conn, MatchmakeBlockListParam_container, tvb, off, 'MatchmakeBlockListParam_Base')
off, MatchmakeBlockListParam_optionFlag = do_Uint32(conn, MatchmakeBlockListParam_container, tvb, off, 'MatchmakeBlockListParam_optionFlag')

return off
end
function do_MatchmakeSessionSearchCriteria(conn, tree, tvb, off, field_name)
local MatchmakeSessionSearchCriteria_container = tree:add(F.MatchmakeSessionSearchCriteria, tvb(off, 0))
	MatchmakeSessionSearchCriteria_container:set_text("MatchmakeSessionSearchCriteria")
	off = do_Structure(conn, MatchmakeSessionSearchCriteria_container, tvb, off, 'MatchmakeSessionSearchCriteria_Base')
-- list !! String
	local MatchmakeSessionSearchCriteria_m_Attribs_len = tvb(off, 4):le_uint()
	subMatchmakeSessionSearchCriteria_container = MatchmakeSessionSearchCriteria_container:add_le(F.MatchmakeSessionSearchCriteria_m_Attribs_len, tvb(off,4))
	off = off + 4
	for i=1,MatchmakeSessionSearchCriteria_m_Attribs_len do
	off, MatchmakeSessionSearchCriteria_m_Attribs_item = do_String(conn, subMatchmakeSessionSearchCriteria_container, tvb, off, 'MatchmakeSessionSearchCriteria_m_Attribs_item')

	end
	
off, MatchmakeSessionSearchCriteria_m_GameMode = do_String(conn, MatchmakeSessionSearchCriteria_container, tvb, off, 'MatchmakeSessionSearchCriteria_m_GameMode')
off, MatchmakeSessionSearchCriteria_m_MinParticipants = do_String(conn, MatchmakeSessionSearchCriteria_container, tvb, off, 'MatchmakeSessionSearchCriteria_m_MinParticipants')
off, MatchmakeSessionSearchCriteria_m_MaxParticipants = do_String(conn, MatchmakeSessionSearchCriteria_container, tvb, off, 'MatchmakeSessionSearchCriteria_m_MaxParticipants')
off, MatchmakeSessionSearchCriteria_m_MatchmakeSystemType = do_String(conn, MatchmakeSessionSearchCriteria_container, tvb, off, 'MatchmakeSessionSearchCriteria_m_MatchmakeSystemType')
off, MatchmakeSessionSearchCriteria_m_VacantOnly = do_Bool(conn, MatchmakeSessionSearchCriteria_container, tvb, off, 'MatchmakeSessionSearchCriteria_m_VacantOnly')
off, MatchmakeSessionSearchCriteria_m_ExcludeLocked = do_Bool(conn, MatchmakeSessionSearchCriteria_container, tvb, off, 'MatchmakeSessionSearchCriteria_m_ExcludeLocked')
off, MatchmakeSessionSearchCriteria_m_ExcludeNonHostPid = do_Bool(conn, MatchmakeSessionSearchCriteria_container, tvb, off, 'MatchmakeSessionSearchCriteria_m_ExcludeNonHostPid')
off, MatchmakeSessionSearchCriteria_m_SelectionMethod = do_Uint32(conn, MatchmakeSessionSearchCriteria_container, tvb, off, 'MatchmakeSessionSearchCriteria_m_SelectionMethod')
off, MatchmakeSessionSearchCriteria_m_VacantParticipants = do_Uint16(conn, MatchmakeSessionSearchCriteria_container, tvb, off, 'MatchmakeSessionSearchCriteria_m_VacantParticipants')
off = do_MatchmakeParam(conn, MatchmakeSessionSearchCriteria_container, tvb, off, 'MatchmakeSessionSearchCriteria_m_MatchmakeParam')
off, MatchmakeSessionSearchCriteria_m_ExcludeUserPasswordSet = do_Bool(conn, MatchmakeSessionSearchCriteria_container, tvb, off, 'MatchmakeSessionSearchCriteria_m_ExcludeUserPasswordSet')
off, MatchmakeSessionSearchCriteria_m_ExcludeSystemPasswordSet = do_Bool(conn, MatchmakeSessionSearchCriteria_container, tvb, off, 'MatchmakeSessionSearchCriteria_m_ExcludeSystemPasswordSet')
off, MatchmakeSessionSearchCriteria_m_ReferGid = do_Uint32(conn, MatchmakeSessionSearchCriteria_container, tvb, off, 'MatchmakeSessionSearchCriteria_m_ReferGid')
off, MatchmakeSessionSearchCriteria_m_Codeword = do_String(conn, MatchmakeSessionSearchCriteria_container, tvb, off, 'MatchmakeSessionSearchCriteria_m_Codeword')
off = do_ResultRange(conn, MatchmakeSessionSearchCriteria_container, tvb, off, 'MatchmakeSessionSearchCriteria_m_ResultRange')

return off
end
function do_DataStorePersistenceTarget(conn, tree, tvb, off, field_name)
local DataStorePersistenceTarget_container = tree:add(F.DataStorePersistenceTarget, tvb(off, 0))
	DataStorePersistenceTarget_container:set_text("DataStorePersistenceTarget")
	off = do_Structure(conn, DataStorePersistenceTarget_container, tvb, off, 'DataStorePersistenceTarget_Base')
off, DataStorePersistenceTarget_ownerId = do_PID(conn, DataStorePersistenceTarget_container, tvb, off, 'DataStorePersistenceTarget_ownerId')
off, DataStorePersistenceTarget_persistenceSlotId = do_Uint16(conn, DataStorePersistenceTarget_container, tvb, off, 'DataStorePersistenceTarget_persistenceSlotId')

return off
end
function do_DataStoreKeyValue(conn, tree, tvb, off, field_name)
local DataStoreKeyValue_container = tree:add(F.DataStoreKeyValue, tvb(off, 0))
	DataStoreKeyValue_container:set_text("DataStoreKeyValue")
	off = do_Structure(conn, DataStoreKeyValue_container, tvb, off, 'DataStoreKeyValue_Base')
off, DataStoreKeyValue_key = do_String(conn, DataStoreKeyValue_container, tvb, off, 'DataStoreKeyValue_key')
off, DataStoreKeyValue_value = do_String(conn, DataStoreKeyValue_container, tvb, off, 'DataStoreKeyValue_value')

return off
end
function do_DataStoreRatingInitParamWithSlot(conn, tree, tvb, off, field_name)
local DataStoreRatingInitParamWithSlot_container = tree:add(F.DataStoreRatingInitParamWithSlot, tvb(off, 0))
	DataStoreRatingInitParamWithSlot_container:set_text("DataStoreRatingInitParamWithSlot")
	off = do_Structure(conn, DataStoreRatingInitParamWithSlot_container, tvb, off, 'DataStoreRatingInitParamWithSlot_Base')
off, DataStoreRatingInitParamWithSlot_slot = do_Sint8(conn, DataStoreRatingInitParamWithSlot_container, tvb, off, 'DataStoreRatingInitParamWithSlot_slot')
off = do_DataStoreRatingInitParam(conn, DataStoreRatingInitParamWithSlot_container, tvb, off, 'DataStoreRatingInitParamWithSlot_param')

return off
end
function do_DataStorePersistenceInitParam(conn, tree, tvb, off, field_name)
local DataStorePersistenceInitParam_container = tree:add(F.DataStorePersistenceInitParam, tvb(off, 0))
	DataStorePersistenceInitParam_container:set_text("DataStorePersistenceInitParam")
	off = do_Structure(conn, DataStorePersistenceInitParam_container, tvb, off, 'DataStorePersistenceInitParam_Base')
off, DataStorePersistenceInitParam_persistenceSlotId = do_Uint16(conn, DataStorePersistenceInitParam_container, tvb, off, 'DataStorePersistenceInitParam_persistenceSlotId')
off, DataStorePersistenceInitParam_deleteLastObject = do_Bool(conn, DataStorePersistenceInitParam_container, tvb, off, 'DataStorePersistenceInitParam_deleteLastObject')

return off
end
function do_DataStoreChangeMetaCompareParam(conn, tree, tvb, off, field_name)
local DataStoreChangeMetaCompareParam_container = tree:add(F.DataStoreChangeMetaCompareParam, tvb(off, 0))
	DataStoreChangeMetaCompareParam_container:set_text("DataStoreChangeMetaCompareParam")
	off = do_Structure(conn, DataStoreChangeMetaCompareParam_container, tvb, off, 'DataStoreChangeMetaCompareParam_Base')
off, DataStoreChangeMetaCompareParam_comparisonFlag = do_Uint32(conn, DataStoreChangeMetaCompareParam_container, tvb, off, 'DataStoreChangeMetaCompareParam_comparisonFlag')
off, DataStoreChangeMetaCompareParam_name = do_String(conn, DataStoreChangeMetaCompareParam_container, tvb, off, 'DataStoreChangeMetaCompareParam_name')
off = do_DataStorePermission(conn, DataStoreChangeMetaCompareParam_container, tvb, off, 'DataStoreChangeMetaCompareParam_permission')
off = do_DataStorePermission(conn, DataStoreChangeMetaCompareParam_container, tvb, off, 'DataStoreChangeMetaCompareParam_delPermission')
off, DataStoreChangeMetaCompareParam_period = do_Uint16(conn, DataStoreChangeMetaCompareParam_container, tvb, off, 'DataStoreChangeMetaCompareParam_period')
off, DataStoreChangeMetaCompareParam_metaBinary = do_qBuffer(conn, DataStoreChangeMetaCompareParam_container, tvb, off, 'DataStoreChangeMetaCompareParam_metaBinary')
-- list !! String
	local DataStoreChangeMetaCompareParam_tags_len = tvb(off, 4):le_uint()
	subDataStoreChangeMetaCompareParam_container = DataStoreChangeMetaCompareParam_container:add_le(F.DataStoreChangeMetaCompareParam_tags_len, tvb(off,4))
	off = off + 4
	for i=1,DataStoreChangeMetaCompareParam_tags_len do
	off, DataStoreChangeMetaCompareParam_tags_item = do_String(conn, subDataStoreChangeMetaCompareParam_container, tvb, off, 'DataStoreChangeMetaCompareParam_tags_item')

	end
	
off, DataStoreChangeMetaCompareParam_referredCnt = do_Uint32(conn, DataStoreChangeMetaCompareParam_container, tvb, off, 'DataStoreChangeMetaCompareParam_referredCnt')
off, DataStoreChangeMetaCompareParam_dataType = do_Uint16(conn, DataStoreChangeMetaCompareParam_container, tvb, off, 'DataStoreChangeMetaCompareParam_dataType')
off, DataStoreChangeMetaCompareParam_status = do_Uint8(conn, DataStoreChangeMetaCompareParam_container, tvb, off, 'DataStoreChangeMetaCompareParam_status')

return off
end
function do_DataStoreMetaInfo(conn, tree, tvb, off, field_name)
local DataStoreMetaInfo_container = tree:add(F.DataStoreMetaInfo, tvb(off, 0))
	DataStoreMetaInfo_container:set_text("DataStoreMetaInfo")
	off = do_Structure(conn, DataStoreMetaInfo_container, tvb, off, 'DataStoreMetaInfo_Base')
off, DataStoreMetaInfo_dataId = do_Uint64(conn, DataStoreMetaInfo_container, tvb, off, 'DataStoreMetaInfo_dataId')
off, DataStoreMetaInfo_ownerId = do_PID(conn, DataStoreMetaInfo_container, tvb, off, 'DataStoreMetaInfo_ownerId')
off, DataStoreMetaInfo_size = do_Uint32(conn, DataStoreMetaInfo_container, tvb, off, 'DataStoreMetaInfo_size')
off, DataStoreMetaInfo_name = do_String(conn, DataStoreMetaInfo_container, tvb, off, 'DataStoreMetaInfo_name')
off, DataStoreMetaInfo_dataType = do_Uint16(conn, DataStoreMetaInfo_container, tvb, off, 'DataStoreMetaInfo_dataType')
off, DataStoreMetaInfo_metaBinary = do_qBuffer(conn, DataStoreMetaInfo_container, tvb, off, 'DataStoreMetaInfo_metaBinary')
off = do_DataStorePermission(conn, DataStoreMetaInfo_container, tvb, off, 'DataStoreMetaInfo_permission')
off = do_DataStorePermission(conn, DataStoreMetaInfo_container, tvb, off, 'DataStoreMetaInfo_delPermission')
off, DataStoreMetaInfo_createdTime = do_DateTime(conn, DataStoreMetaInfo_container, tvb, off, 'DataStoreMetaInfo_createdTime')
off, DataStoreMetaInfo_updatedTime = do_DateTime(conn, DataStoreMetaInfo_container, tvb, off, 'DataStoreMetaInfo_updatedTime')
off, DataStoreMetaInfo_period = do_Uint16(conn, DataStoreMetaInfo_container, tvb, off, 'DataStoreMetaInfo_period')
off, DataStoreMetaInfo_status = do_Uint8(conn, DataStoreMetaInfo_container, tvb, off, 'DataStoreMetaInfo_status')
off, DataStoreMetaInfo_referredCnt = do_Uint32(conn, DataStoreMetaInfo_container, tvb, off, 'DataStoreMetaInfo_referredCnt')
off, DataStoreMetaInfo_referDataId = do_Uint32(conn, DataStoreMetaInfo_container, tvb, off, 'DataStoreMetaInfo_referDataId')
off, DataStoreMetaInfo_flag = do_Uint32(conn, DataStoreMetaInfo_container, tvb, off, 'DataStoreMetaInfo_flag')
off, DataStoreMetaInfo_referredTime = do_DateTime(conn, DataStoreMetaInfo_container, tvb, off, 'DataStoreMetaInfo_referredTime')
off, DataStoreMetaInfo_expireTime = do_DateTime(conn, DataStoreMetaInfo_container, tvb, off, 'DataStoreMetaInfo_expireTime')
-- list !! String
	local DataStoreMetaInfo_tags_len = tvb(off, 4):le_uint()
	subDataStoreMetaInfo_container = DataStoreMetaInfo_container:add_le(F.DataStoreMetaInfo_tags_len, tvb(off,4))
	off = off + 4
	for i=1,DataStoreMetaInfo_tags_len do
	off, DataStoreMetaInfo_tags_item = do_String(conn, subDataStoreMetaInfo_container, tvb, off, 'DataStoreMetaInfo_tags_item')

	end
	
-- list !! DataStoreRatingInfoWithSlot
	local DataStoreMetaInfo_ratings_len = tvb(off, 4):le_uint()
	subDataStoreMetaInfo_container = DataStoreMetaInfo_container:add_le(F.DataStoreMetaInfo_ratings_len, tvb(off,4))
	off = off + 4
	for i=1,DataStoreMetaInfo_ratings_len do
	off = do_DataStoreRatingInfoWithSlot(conn, subDataStoreMetaInfo_container, tvb, off, 'DataStoreMetaInfo_ratings_item')

	end
	

return off
end
function do_DataStoreSearchBalloonResult(conn, tree, tvb, off, field_name)
local DataStoreSearchBalloonResult_container = tree:add(F.DataStoreSearchBalloonResult, tvb(off, 0))
	DataStoreSearchBalloonResult_container:set_text("DataStoreSearchBalloonResult")
	off = do_Structure(conn, DataStoreSearchBalloonResult_container, tvb, off, 'DataStoreSearchBalloonResult_Base')
off, DataStoreSearchBalloonResult_dataId = do_Uint64(conn, DataStoreSearchBalloonResult_container, tvb, off, 'DataStoreSearchBalloonResult_dataId')
off, DataStoreSearchBalloonResult_ownerId = do_Uint64(conn, DataStoreSearchBalloonResult_container, tvb, off, 'DataStoreSearchBalloonResult_ownerId')
off, DataStoreSearchBalloonResult_size = do_Uint32(conn, DataStoreSearchBalloonResult_container, tvb, off, 'DataStoreSearchBalloonResult_size')
off, DataStoreSearchBalloonResult_name = do_String(conn, DataStoreSearchBalloonResult_container, tvb, off, 'DataStoreSearchBalloonResult_name')
off, DataStoreSearchBalloonResult_dataType = do_Uint16(conn, DataStoreSearchBalloonResult_container, tvb, off, 'DataStoreSearchBalloonResult_dataType')
off, DataStoreSearchBalloonResult_metaBinary = do_qBuffer(conn, DataStoreSearchBalloonResult_container, tvb, off, 'DataStoreSearchBalloonResult_metaBinary')
off, DataStoreSearchBalloonResult_createdTime = do_DateTime(conn, DataStoreSearchBalloonResult_container, tvb, off, 'DataStoreSearchBalloonResult_createdTime')
off, DataStoreSearchBalloonResult_updatedTime = do_DateTime(conn, DataStoreSearchBalloonResult_container, tvb, off, 'DataStoreSearchBalloonResult_updatedTime')
off, DataStoreSearchBalloonResult_ownerDataId = do_Uint64(conn, DataStoreSearchBalloonResult_container, tvb, off, 'DataStoreSearchBalloonResult_ownerDataId')
off, DataStoreSearchBalloonResult_ownerName = do_String(conn, DataStoreSearchBalloonResult_container, tvb, off, 'DataStoreSearchBalloonResult_ownerName')
off, DataStoreSearchBalloonResult_isFriendBalloon = do_Bool(conn, DataStoreSearchBalloonResult_container, tvb, off, 'DataStoreSearchBalloonResult_isFriendBalloon')
--[[ Stubbed! Missing type Map<Sint8, DataStoreRatingInfo>]]
--[[ Stubbed! Missing type Map<Sint8, DataStoreRatingInfo>]]

return off
end
function do_DataStoreFetchMyInfosBalloonResult(conn, tree, tvb, off, field_name)
local DataStoreFetchMyInfosBalloonResult_container = tree:add(F.DataStoreFetchMyInfosBalloonResult, tvb(off, 0))
	DataStoreFetchMyInfosBalloonResult_container:set_text("DataStoreFetchMyInfosBalloonResult")
	off = do_Structure(conn, DataStoreFetchMyInfosBalloonResult_container, tvb, off, 'DataStoreFetchMyInfosBalloonResult_Base')
off, DataStoreFetchMyInfosBalloonResult_dataId = do_Uint64(conn, DataStoreFetchMyInfosBalloonResult_container, tvb, off, 'DataStoreFetchMyInfosBalloonResult_dataId')
off, DataStoreFetchMyInfosBalloonResult_dataType = do_Uint16(conn, DataStoreFetchMyInfosBalloonResult_container, tvb, off, 'DataStoreFetchMyInfosBalloonResult_dataType')
off, DataStoreFetchMyInfosBalloonResult_metaBinary = do_qBuffer(conn, DataStoreFetchMyInfosBalloonResult_container, tvb, off, 'DataStoreFetchMyInfosBalloonResult_metaBinary')
off, DataStoreFetchMyInfosBalloonResult_createdTime = do_DateTime(conn, DataStoreFetchMyInfosBalloonResult_container, tvb, off, 'DataStoreFetchMyInfosBalloonResult_createdTime')
off, DataStoreFetchMyInfosBalloonResult_updatedTime = do_DateTime(conn, DataStoreFetchMyInfosBalloonResult_container, tvb, off, 'DataStoreFetchMyInfosBalloonResult_updatedTime')
off, DataStoreFetchMyInfosBalloonResult_isCleared = do_Bool(conn, DataStoreFetchMyInfosBalloonResult_container, tvb, off, 'DataStoreFetchMyInfosBalloonResult_isCleared')
--[[ Stubbed! Missing type Map<Sint8, DataStoreRatingInfo>]]
--[[ Stubbed! Missing type Map<Sint8, List<qBuffer>>]]

return off
end
function do_DataStoreFetchMyInfosAchievementResult(conn, tree, tvb, off, field_name)
local DataStoreFetchMyInfosAchievementResult_container = tree:add(F.DataStoreFetchMyInfosAchievementResult, tvb(off, 0))
	DataStoreFetchMyInfosAchievementResult_container:set_text("DataStoreFetchMyInfosAchievementResult")
	off = do_Structure(conn, DataStoreFetchMyInfosAchievementResult_container, tvb, off, 'DataStoreFetchMyInfosAchievementResult_Base')
off, DataStoreFetchMyInfosAchievementResult_dataId = do_Uint64(conn, DataStoreFetchMyInfosAchievementResult_container, tvb, off, 'DataStoreFetchMyInfosAchievementResult_dataId')
off, DataStoreFetchMyInfosAchievementResult_dataType = do_Uint16(conn, DataStoreFetchMyInfosAchievementResult_container, tvb, off, 'DataStoreFetchMyInfosAchievementResult_dataType')
off, DataStoreFetchMyInfosAchievementResult_metaBinary = do_qBuffer(conn, DataStoreFetchMyInfosAchievementResult_container, tvb, off, 'DataStoreFetchMyInfosAchievementResult_metaBinary')
off, DataStoreFetchMyInfosAchievementResult_createdTime = do_DateTime(conn, DataStoreFetchMyInfosAchievementResult_container, tvb, off, 'DataStoreFetchMyInfosAchievementResult_createdTime')
--[[ Stubbed! Missing type Map<Sint8, DataStoreRatingInfo>]]
--[[ Stubbed! Missing type Map<Sint8, List<qBuffer>>]]

return off
end
function do_RankingRankData(conn, tree, tvb, off, field_name)
local RankingRankData_container = tree:add(F.RankingRankData, tvb(off, 0))
	RankingRankData_container:set_text("RankingRankData")
	off = do_Structure(conn, RankingRankData_container, tvb, off, 'RankingRankData_Base')
off, RankingRankData_principalId = do_PID(conn, RankingRankData_container, tvb, off, 'RankingRankData_principalId')
off, RankingRankData_uniqueId = do_Uint64(conn, RankingRankData_container, tvb, off, 'RankingRankData_uniqueId')
off, RankingRankData_order = do_Uint32(conn, RankingRankData_container, tvb, off, 'RankingRankData_order')
off, RankingRankData_category = do_Uint32(conn, RankingRankData_container, tvb, off, 'RankingRankData_category')
off, RankingRankData_score = do_Uint32(conn, RankingRankData_container, tvb, off, 'RankingRankData_score')
-- list !! byte
	local RankingRankData_groups_len = tvb(off, 4):le_uint()
	subRankingRankData_container = RankingRankData_container:add_le(F.RankingRankData_groups_len, tvb(off,4))
	off = off + 4
	for i=1,RankingRankData_groups_len do
	off, RankingRankData_groups_item = do_byte(conn, subRankingRankData_container, tvb, off, 'RankingRankData_groups_item')

	end
	
off, RankingRankData_param = do_Uint64(conn, RankingRankData_container, tvb, off, 'RankingRankData_param')
off, RankingRankData_commonData = do_Buffer(conn, RankingRankData_container, tvb, off, 'RankingRankData_commonData')

return off
end
function do_Mii(conn, tree, tvb, off, field_name)
local Mii_container = tree:add(F.Mii, tvb(off, 0))
	Mii_container:set_text("Mii")
	off, Mii_Unknown = do_String(conn, Mii_container, tvb, off, 'Mii_Unknown')
off, Mii_Unknown2 = do_Bool(conn, Mii_container, tvb, off, 'Mii_Unknown2')
off, Mii_Unknown3 = do_Uint8(conn, Mii_container, tvb, off, 'Mii_Unknown3')
off, Mii_Mii_data = do_Buffer(conn, Mii_container, tvb, off, 'Mii_Mii_data')

return off
end
function do_MiiList(conn, tree, tvb, off, field_name)
local MiiList_container = tree:add(F.MiiList, tvb(off, 0))
	MiiList_container:set_text("MiiList")
	off, MiiList_Unknown = do_String(conn, MiiList_container, tvb, off, 'MiiList_Unknown')
off, MiiList_Unknown2 = do_Bool(conn, MiiList_container, tvb, off, 'MiiList_Unknown2')
off, MiiList_Unknown3 = do_Uint8(conn, MiiList_container, tvb, off, 'MiiList_Unknown3')
-- list !! Buffer
	local MiiList_Mii_data_list_len = tvb(off, 4):le_uint()
	subMiiList_container = MiiList_container:add_le(F.MiiList_Mii_data_list_len, tvb(off,4))
	off = off + 4
	for i=1,MiiList_Mii_data_list_len do
	off, MiiList_Mii_data_list_item = do_Buffer(conn, subMiiList_container, tvb, off, 'MiiList_Mii_data_list_item')

	end
	

return off
end
function do_NintendoPresence(conn, tree, tvb, off, field_name)
local NintendoPresence_container = tree:add(F.NintendoPresence, tvb(off, 0))
	NintendoPresence_container:set_text("NintendoPresence")
	off, NintendoPresence_m_changedBitFlag = do_Uint32(conn, NintendoPresence_container, tvb, off, 'NintendoPresence_m_changedBitFlag')
off = do_GameKey(conn, NintendoPresence_container, tvb, off, 'NintendoPresence_m_gameKey')
off, NintendoPresence_m_gameModeDescription = do_String(conn, NintendoPresence_container, tvb, off, 'NintendoPresence_m_gameModeDescription')
off, NintendoPresence_m_joinAvailabilityFlag = do_Uint32(conn, NintendoPresence_container, tvb, off, 'NintendoPresence_m_joinAvailabilityFlag')
off, NintendoPresence_m_matchmakeSystemType = do_Uint8(conn, NintendoPresence_container, tvb, off, 'NintendoPresence_m_matchmakeSystemType')
off, NintendoPresence_m_joinGameID = do_Uint32(conn, NintendoPresence_container, tvb, off, 'NintendoPresence_m_joinGameID')
off, NintendoPresence_m_joinGameMode = do_Uint32(conn, NintendoPresence_container, tvb, off, 'NintendoPresence_m_joinGameMode')
off, NintendoPresence_m_ownerPrincipalID = do_PID(conn, NintendoPresence_container, tvb, off, 'NintendoPresence_m_ownerPrincipalID')
off, NintendoPresence_m_joinGroupID = do_Uint32(conn, NintendoPresence_container, tvb, off, 'NintendoPresence_m_joinGroupID')
off, NintendoPresence_m_applicationArg = do_Buffer(conn, NintendoPresence_container, tvb, off, 'NintendoPresence_m_applicationArg')

return off
end
function do_NNAInfo(conn, tree, tvb, off, field_name)
local NNAInfo_container = tree:add(F.NNAInfo, tvb(off, 0))
	NNAInfo_container:set_text("NNAInfo")
	off = do_PrincipalBasicInfo(conn, NNAInfo_container, tvb, off, 'NNAInfo_Principal_basic_info')
off, NNAInfo_Unknown = do_Uint8(conn, NNAInfo_container, tvb, off, 'NNAInfo_Unknown')
off, NNAInfo_Unknown2 = do_Uint8(conn, NNAInfo_container, tvb, off, 'NNAInfo_Unknown2')

return off
end
function do_NintendoPresenceV2(conn, tree, tvb, off, field_name)
local NintendoPresenceV2_container = tree:add(F.NintendoPresenceV2, tvb(off, 0))
	NintendoPresenceV2_container:set_text("NintendoPresenceV2")
	off, NintendoPresenceV2_Changed_flags = do_Uint32(conn, NintendoPresenceV2_container, tvb, off, 'NintendoPresenceV2_Changed_flags')
off, NintendoPresenceV2_Is_online = do_Bool(conn, NintendoPresenceV2_container, tvb, off, 'NintendoPresenceV2_Is_online')
off = do_GameKey(conn, NintendoPresenceV2_container, tvb, off, 'NintendoPresenceV2_Game_key')
off, NintendoPresenceV2_Unknown_1 = do_Uint8(conn, NintendoPresenceV2_container, tvb, off, 'NintendoPresenceV2_Unknown_1')
off, NintendoPresenceV2_Message = do_String(conn, NintendoPresenceV2_container, tvb, off, 'NintendoPresenceV2_Message')
off, NintendoPresenceV2_Unknown_2 = do_Uint32(conn, NintendoPresenceV2_container, tvb, off, 'NintendoPresenceV2_Unknown_2')
off, NintendoPresenceV2_Unknown_3 = do_Uint8(conn, NintendoPresenceV2_container, tvb, off, 'NintendoPresenceV2_Unknown_3')
off, NintendoPresenceV2_Game_server_id = do_Uint32(conn, NintendoPresenceV2_container, tvb, off, 'NintendoPresenceV2_Game_server_id')
off, NintendoPresenceV2_Unknown_4 = do_Uint32(conn, NintendoPresenceV2_container, tvb, off, 'NintendoPresenceV2_Unknown_4')
off, NintendoPresenceV2_Pid = do_PID(conn, NintendoPresenceV2_container, tvb, off, 'NintendoPresenceV2_Pid')
off, NintendoPresenceV2_Gathering_id = do_Uint32(conn, NintendoPresenceV2_container, tvb, off, 'NintendoPresenceV2_Gathering_id')
off, NintendoPresenceV2_Application_data = do_Buffer(conn, NintendoPresenceV2_container, tvb, off, 'NintendoPresenceV2_Application_data')
off, NintendoPresenceV2_Unknown_5 = do_Uint8(conn, NintendoPresenceV2_container, tvb, off, 'NintendoPresenceV2_Unknown_5')
off, NintendoPresenceV2_Unknown_6 = do_Uint8(conn, NintendoPresenceV2_container, tvb, off, 'NintendoPresenceV2_Unknown_6')
off, NintendoPresenceV2_Unknown_7 = do_Uint8(conn, NintendoPresenceV2_container, tvb, off, 'NintendoPresenceV2_Unknown_7')

return off
end
function do_Comment(conn, tree, tvb, off, field_name)
local Comment_container = tree:add(F.Comment, tvb(off, 0))
	Comment_container:set_text("Comment")
	off, Comment_Unknown = do_Uint8(conn, Comment_container, tvb, off, 'Comment_Unknown')
off, Comment_Status_message = do_String(conn, Comment_container, tvb, off, 'Comment_Status_message')
off, Comment_Last_changed_on = do_DateTime(conn, Comment_container, tvb, off, 'Comment_Last_changed_on')

return off
end
function do_FriendRequestMessage(conn, tree, tvb, off, field_name)
local FriendRequestMessage_container = tree:add(F.FriendRequestMessage, tvb(off, 0))
	FriendRequestMessage_container:set_text("FriendRequestMessage")
	off, FriendRequestMessage_Unknown = do_Uint64(conn, FriendRequestMessage_container, tvb, off, 'FriendRequestMessage_Unknown')
off, FriendRequestMessage_Unknown2 = do_Uint8(conn, FriendRequestMessage_container, tvb, off, 'FriendRequestMessage_Unknown2')
off, FriendRequestMessage_Unknown3 = do_Uint8(conn, FriendRequestMessage_container, tvb, off, 'FriendRequestMessage_Unknown3')
off, FriendRequestMessage_Message = do_String(conn, FriendRequestMessage_container, tvb, off, 'FriendRequestMessage_Message')
off, FriendRequestMessage_Unknown4 = do_Uint8(conn, FriendRequestMessage_container, tvb, off, 'FriendRequestMessage_Unknown4')
off, FriendRequestMessage_Unknown5 = do_String(conn, FriendRequestMessage_container, tvb, off, 'FriendRequestMessage_Unknown5')
off = do_GameKey(conn, FriendRequestMessage_container, tvb, off, 'FriendRequestMessage_Game_key')
off, FriendRequestMessage_Unknown6 = do_DateTime(conn, FriendRequestMessage_container, tvb, off, 'FriendRequestMessage_Unknown6')
off, FriendRequestMessage_Expires_on = do_DateTime(conn, FriendRequestMessage_container, tvb, off, 'FriendRequestMessage_Expires_on')

return off
end
function do_UserMessage(conn, tree, tvb, off, field_name)
local UserMessage_container = tree:add(F.UserMessage, tvb(off, 0))
	UserMessage_container:set_text("UserMessage")
	off, UserMessage_m_uiID = do_Uint32(conn, UserMessage_container, tvb, off, 'UserMessage_m_uiID')
off, UserMessage_m_uiParentID = do_Uint32(conn, UserMessage_container, tvb, off, 'UserMessage_m_uiParentID')
off, UserMessage_m_pidSender = do_PID(conn, UserMessage_container, tvb, off, 'UserMessage_m_pidSender')
off, UserMessage_m_receptiontime = do_DateTime(conn, UserMessage_container, tvb, off, 'UserMessage_m_receptiontime')
off, UserMessage_m_uiLifeTime = do_Uint32(conn, UserMessage_container, tvb, off, 'UserMessage_m_uiLifeTime')
off, UserMessage_m_uiFlags = do_Uint32(conn, UserMessage_container, tvb, off, 'UserMessage_m_uiFlags')
off, UserMessage_m_strSubject = do_String(conn, UserMessage_container, tvb, off, 'UserMessage_m_strSubject')
off, UserMessage_m_strSender = do_String(conn, UserMessage_container, tvb, off, 'UserMessage_m_strSender')
off = do_MessageRecipient(conn, UserMessage_container, tvb, off, 'UserMessage_m_messageRecipient')

return off
end
function do_BasicAccountInfo(conn, tree, tvb, off, field_name)
local BasicAccountInfo_container = tree:add(F.BasicAccountInfo, tvb(off, 0))
	BasicAccountInfo_container:set_text("BasicAccountInfo")
	off = do_Structure(conn, BasicAccountInfo_container, tvb, off, 'BasicAccountInfo_Base')
off, BasicAccountInfo_m_pidOwner = do_PID(conn, BasicAccountInfo_container, tvb, off, 'BasicAccountInfo_m_pidOwner')
off, BasicAccountInfo_m_strName = do_String(conn, BasicAccountInfo_container, tvb, off, 'BasicAccountInfo_m_strName')

return off
end
function do_AccountData(conn, tree, tvb, off, field_name)
local AccountData_container = tree:add(F.AccountData, tvb(off, 0))
	AccountData_container:set_text("AccountData")
	off = do_Structure(conn, AccountData_container, tvb, off, 'AccountData_Base')
off, AccountData_m_pid = do_PID(conn, AccountData_container, tvb, off, 'AccountData_m_pid')
off, AccountData_m_strName = do_String(conn, AccountData_container, tvb, off, 'AccountData_m_strName')
off, AccountData_m_uiGroups = do_Uint32(conn, AccountData_container, tvb, off, 'AccountData_m_uiGroups')
off, AccountData_m_strEmail = do_String(conn, AccountData_container, tvb, off, 'AccountData_m_strEmail')
off, AccountData_m_dtCreationDate = do_DateTime(conn, AccountData_container, tvb, off, 'AccountData_m_dtCreationDate')
off, AccountData_m_dtEffectiveDate = do_DateTime(conn, AccountData_container, tvb, off, 'AccountData_m_dtEffectiveDate')
off, AccountData_m_strNotEffectiveMsg = do_String(conn, AccountData_container, tvb, off, 'AccountData_m_strNotEffectiveMsg')
off, AccountData_m_dtExpiryDate = do_DateTime(conn, AccountData_container, tvb, off, 'AccountData_m_dtExpiryDate')
off, AccountData_m_strExpiredMsg = do_String(conn, AccountData_container, tvb, off, 'AccountData_m_strExpiredMsg')

return off
end
function do_PersistentGathering(conn, tree, tvb, off, field_name)
local PersistentGathering_container = tree:add(F.PersistentGathering, tvb(off, 0))
	PersistentGathering_container:set_text("PersistentGathering")
	off = do_Structure(conn, PersistentGathering_container, tvb, off, 'PersistentGathering_Base')
off = do_Gathering(conn, PersistentGathering_container, tvb, off, 'PersistentGathering_Base2')
off, PersistentGathering_m_CommunityType = do_Uint32(conn, PersistentGathering_container, tvb, off, 'PersistentGathering_m_CommunityType')
off, PersistentGathering_m_Password = do_String(conn, PersistentGathering_container, tvb, off, 'PersistentGathering_m_Password')
-- list !! Uint32
	local PersistentGathering_m_Attribs_len = tvb(off, 4):le_uint()
	subPersistentGathering_container = PersistentGathering_container:add_le(F.PersistentGathering_m_Attribs_len, tvb(off,4))
	off = off + 4
	for i=1,PersistentGathering_m_Attribs_len do
	off, PersistentGathering_m_Attribs_item = do_Uint32(conn, subPersistentGathering_container, tvb, off, 'PersistentGathering_m_Attribs_item')

	end
	
off, PersistentGathering_m_ApplicationBuffer = do_Buffer(conn, PersistentGathering_container, tvb, off, 'PersistentGathering_m_ApplicationBuffer')
off, PersistentGathering_m_ParticipationStartDate = do_DateTime(conn, PersistentGathering_container, tvb, off, 'PersistentGathering_m_ParticipationStartDate')
off, PersistentGathering_m_ParticipationEndDate = do_DateTime(conn, PersistentGathering_container, tvb, off, 'PersistentGathering_m_ParticipationEndDate')
off, PersistentGathering_m_MatchmakeSessionCount = do_Uint32(conn, PersistentGathering_container, tvb, off, 'PersistentGathering_m_MatchmakeSessionCount')
off, PersistentGathering_m_ParticipationCount = do_Uint32(conn, PersistentGathering_container, tvb, off, 'PersistentGathering_m_ParticipationCount')

return off
end
function do_CreateMatchmakeSessionParam(conn, tree, tvb, off, field_name)
local CreateMatchmakeSessionParam_container = tree:add(F.CreateMatchmakeSessionParam, tvb(off, 0))
	CreateMatchmakeSessionParam_container:set_text("CreateMatchmakeSessionParam")
	off = do_Structure(conn, CreateMatchmakeSessionParam_container, tvb, off, 'CreateMatchmakeSessionParam_Base')
off = do_MatchmakeSession(conn, CreateMatchmakeSessionParam_container, tvb, off, 'CreateMatchmakeSessionParam_sourceMatchmakeSession')
-- list !! PID
	local CreateMatchmakeSessionParam_additionalParticipants_len = tvb(off, 4):le_uint()
	subCreateMatchmakeSessionParam_container = CreateMatchmakeSessionParam_container:add_le(F.CreateMatchmakeSessionParam_additionalParticipants_len, tvb(off,4))
	off = off + 4
	for i=1,CreateMatchmakeSessionParam_additionalParticipants_len do
	off, CreateMatchmakeSessionParam_additionalParticipants_item = do_PID(conn, subCreateMatchmakeSessionParam_container, tvb, off, 'CreateMatchmakeSessionParam_additionalParticipants_item')

	end
	
off, CreateMatchmakeSessionParam_gidForParticipationCheck = do_Uint32(conn, CreateMatchmakeSessionParam_container, tvb, off, 'CreateMatchmakeSessionParam_gidForParticipationCheck')
off, CreateMatchmakeSessionParam_createMatchmakeSessionOption = do_Uint32(conn, CreateMatchmakeSessionParam_container, tvb, off, 'CreateMatchmakeSessionParam_createMatchmakeSessionOption')
off, CreateMatchmakeSessionParam_joinMessage = do_String(conn, CreateMatchmakeSessionParam_container, tvb, off, 'CreateMatchmakeSessionParam_joinMessage')
off, CreateMatchmakeSessionParam_participationCount = do_Uint16(conn, CreateMatchmakeSessionParam_container, tvb, off, 'CreateMatchmakeSessionParam_participationCount')

return off
end
function do_JoinMatchmakeSessionParam(conn, tree, tvb, off, field_name)
local JoinMatchmakeSessionParam_container = tree:add(F.JoinMatchmakeSessionParam, tvb(off, 0))
	JoinMatchmakeSessionParam_container:set_text("JoinMatchmakeSessionParam")
	off = do_Structure(conn, JoinMatchmakeSessionParam_container, tvb, off, 'JoinMatchmakeSessionParam_Base')
off, JoinMatchmakeSessionParam_gid = do_Uint32(conn, JoinMatchmakeSessionParam_container, tvb, off, 'JoinMatchmakeSessionParam_gid')
-- list !! PID
	local JoinMatchmakeSessionParam_additionalParticipants_len = tvb(off, 4):le_uint()
	subJoinMatchmakeSessionParam_container = JoinMatchmakeSessionParam_container:add_le(F.JoinMatchmakeSessionParam_additionalParticipants_len, tvb(off,4))
	off = off + 4
	for i=1,JoinMatchmakeSessionParam_additionalParticipants_len do
	off, JoinMatchmakeSessionParam_additionalParticipants_item = do_PID(conn, subJoinMatchmakeSessionParam_container, tvb, off, 'JoinMatchmakeSessionParam_additionalParticipants_item')

	end
	
off, JoinMatchmakeSessionParam_gidForParticipationCheck = do_Uint32(conn, JoinMatchmakeSessionParam_container, tvb, off, 'JoinMatchmakeSessionParam_gidForParticipationCheck')
off, JoinMatchmakeSessionParam_joinMatchmakeSessionOption = do_Uint32(conn, JoinMatchmakeSessionParam_container, tvb, off, 'JoinMatchmakeSessionParam_joinMatchmakeSessionOption')
off, JoinMatchmakeSessionParam_joinMatchmakeSessionBehavior = do_Uint8(conn, JoinMatchmakeSessionParam_container, tvb, off, 'JoinMatchmakeSessionParam_joinMatchmakeSessionBehavior')
off, JoinMatchmakeSessionParam_strUserPassword = do_String(conn, JoinMatchmakeSessionParam_container, tvb, off, 'JoinMatchmakeSessionParam_strUserPassword')
off, JoinMatchmakeSessionParam_strSystemPassword = do_String(conn, JoinMatchmakeSessionParam_container, tvb, off, 'JoinMatchmakeSessionParam_strSystemPassword')
off, JoinMatchmakeSessionParam_joinMessage = do_String(conn, JoinMatchmakeSessionParam_container, tvb, off, 'JoinMatchmakeSessionParam_joinMessage')
off, JoinMatchmakeSessionParam_participationCount = do_Uint16(conn, JoinMatchmakeSessionParam_container, tvb, off, 'JoinMatchmakeSessionParam_participationCount')
off, JoinMatchmakeSessionParam_extraParticipants = do_Uint16(conn, JoinMatchmakeSessionParam_container, tvb, off, 'JoinMatchmakeSessionParam_extraParticipants')
off = do_MatchmakeBlockListParam(conn, JoinMatchmakeSessionParam_container, tvb, off, 'JoinMatchmakeSessionParam_blockListParam')

return off
end
function do_UpdateMatchmakeSessionParam(conn, tree, tvb, off, field_name)
local UpdateMatchmakeSessionParam_container = tree:add(F.UpdateMatchmakeSessionParam, tvb(off, 0))
	UpdateMatchmakeSessionParam_container:set_text("UpdateMatchmakeSessionParam")
	off = do_Structure(conn, UpdateMatchmakeSessionParam_container, tvb, off, 'UpdateMatchmakeSessionParam_Base')
off, UpdateMatchmakeSessionParam_gid = do_Uint32(conn, UpdateMatchmakeSessionParam_container, tvb, off, 'UpdateMatchmakeSessionParam_gid')
off, UpdateMatchmakeSessionParam_modificationFlag = do_Uint32(conn, UpdateMatchmakeSessionParam_container, tvb, off, 'UpdateMatchmakeSessionParam_modificationFlag')
-- list !! Uint32
	local UpdateMatchmakeSessionParam_attributes_len = tvb(off, 4):le_uint()
	subUpdateMatchmakeSessionParam_container = UpdateMatchmakeSessionParam_container:add_le(F.UpdateMatchmakeSessionParam_attributes_len, tvb(off,4))
	off = off + 4
	for i=1,UpdateMatchmakeSessionParam_attributes_len do
	off, UpdateMatchmakeSessionParam_attributes_item = do_Uint32(conn, subUpdateMatchmakeSessionParam_container, tvb, off, 'UpdateMatchmakeSessionParam_attributes_item')

	end
	
off, UpdateMatchmakeSessionParam_openParticipation = do_Bool(conn, UpdateMatchmakeSessionParam_container, tvb, off, 'UpdateMatchmakeSessionParam_openParticipation')
off, UpdateMatchmakeSessionParam_applicationBuffer = do_Buffer(conn, UpdateMatchmakeSessionParam_container, tvb, off, 'UpdateMatchmakeSessionParam_applicationBuffer')
off, UpdateMatchmakeSessionParam_progressScore = do_Uint8(conn, UpdateMatchmakeSessionParam_container, tvb, off, 'UpdateMatchmakeSessionParam_progressScore')
off = do_MatchmakeParam(conn, UpdateMatchmakeSessionParam_container, tvb, off, 'UpdateMatchmakeSessionParam_matchmakeParam')
off, UpdateMatchmakeSessionParam_startedTime = do_DateTime(conn, UpdateMatchmakeSessionParam_container, tvb, off, 'UpdateMatchmakeSessionParam_startedTime')
off, UpdateMatchmakeSessionParam_userPassword = do_String(conn, UpdateMatchmakeSessionParam_container, tvb, off, 'UpdateMatchmakeSessionParam_userPassword')
off, UpdateMatchmakeSessionParam_gameMode = do_Uint32(conn, UpdateMatchmakeSessionParam_container, tvb, off, 'UpdateMatchmakeSessionParam_gameMode')
off, UpdateMatchmakeSessionParam_description = do_String(conn, UpdateMatchmakeSessionParam_container, tvb, off, 'UpdateMatchmakeSessionParam_description')
off, UpdateMatchmakeSessionParam_minParticipants = do_Uint16(conn, UpdateMatchmakeSessionParam_container, tvb, off, 'UpdateMatchmakeSessionParam_minParticipants')
off, UpdateMatchmakeSessionParam_maxParticipants = do_Uint16(conn, UpdateMatchmakeSessionParam_container, tvb, off, 'UpdateMatchmakeSessionParam_maxParticipants')
off, UpdateMatchmakeSessionParam_matchmakeSystemType = do_Uint32(conn, UpdateMatchmakeSessionParam_container, tvb, off, 'UpdateMatchmakeSessionParam_matchmakeSystemType')
off, UpdateMatchmakeSessionParam_participationPolicy = do_Uint32(conn, UpdateMatchmakeSessionParam_container, tvb, off, 'UpdateMatchmakeSessionParam_participationPolicy')
off, UpdateMatchmakeSessionParam_policyArgument = do_Uint32(conn, UpdateMatchmakeSessionParam_container, tvb, off, 'UpdateMatchmakeSessionParam_policyArgument')
off, UpdateMatchmakeSessionParam_codeword = do_String(conn, UpdateMatchmakeSessionParam_container, tvb, off, 'UpdateMatchmakeSessionParam_codeword')

return off
end
function do_AutoMatchmakeParam(conn, tree, tvb, off, field_name)
local AutoMatchmakeParam_container = tree:add(F.AutoMatchmakeParam, tvb(off, 0))
	AutoMatchmakeParam_container:set_text("AutoMatchmakeParam")
	off = do_Structure(conn, AutoMatchmakeParam_container, tvb, off, 'AutoMatchmakeParam_Base')
off = do_MatchmakeSession(conn, AutoMatchmakeParam_container, tvb, off, 'AutoMatchmakeParam_sourceMatchmakeSession')
-- list !! PID
	local AutoMatchmakeParam_additionalParticipants_len = tvb(off, 4):le_uint()
	subAutoMatchmakeParam_container = AutoMatchmakeParam_container:add_le(F.AutoMatchmakeParam_additionalParticipants_len, tvb(off,4))
	off = off + 4
	for i=1,AutoMatchmakeParam_additionalParticipants_len do
	off, AutoMatchmakeParam_additionalParticipants_item = do_PID(conn, subAutoMatchmakeParam_container, tvb, off, 'AutoMatchmakeParam_additionalParticipants_item')

	end
	
off, AutoMatchmakeParam_gidForParticipationCheck = do_Uint32(conn, AutoMatchmakeParam_container, tvb, off, 'AutoMatchmakeParam_gidForParticipationCheck')
off, AutoMatchmakeParam_autoMatchmakeOption = do_Uint32(conn, AutoMatchmakeParam_container, tvb, off, 'AutoMatchmakeParam_autoMatchmakeOption')
off, AutoMatchmakeParam_joinMessage = do_String(conn, AutoMatchmakeParam_container, tvb, off, 'AutoMatchmakeParam_joinMessage')
off, AutoMatchmakeParam_participationCount = do_Uint16(conn, AutoMatchmakeParam_container, tvb, off, 'AutoMatchmakeParam_participationCount')
-- list !! MatchmakeSessionSearchCriteria
	local AutoMatchmakeParam_lstSearchCriteria_len = tvb(off, 4):le_uint()
	subAutoMatchmakeParam_container = AutoMatchmakeParam_container:add_le(F.AutoMatchmakeParam_lstSearchCriteria_len, tvb(off,4))
	off = off + 4
	for i=1,AutoMatchmakeParam_lstSearchCriteria_len do
	off = do_MatchmakeSessionSearchCriteria(conn, subAutoMatchmakeParam_container, tvb, off, 'AutoMatchmakeParam_lstSearchCriteria_item')

	end
	
-- list !! Uint32
	local AutoMatchmakeParam_targetGids_len = tvb(off, 4):le_uint()
	subAutoMatchmakeParam_container = AutoMatchmakeParam_container:add_le(F.AutoMatchmakeParam_targetGids_len, tvb(off,4))
	off = off + 4
	for i=1,AutoMatchmakeParam_targetGids_len do
	off, AutoMatchmakeParam_targetGids_item = do_Uint32(conn, subAutoMatchmakeParam_container, tvb, off, 'AutoMatchmakeParam_targetGids_item')

	end
	
off = do_MatchmakeBlockListParam(conn, AutoMatchmakeParam_container, tvb, off, 'AutoMatchmakeParam_blockListParam')

return off
end
function do_FindMatchmakeSessionByParticipantParam(conn, tree, tvb, off, field_name)
local FindMatchmakeSessionByParticipantParam_container = tree:add(F.FindMatchmakeSessionByParticipantParam, tvb(off, 0))
	FindMatchmakeSessionByParticipantParam_container:set_text("FindMatchmakeSessionByParticipantParam")
	-- list !! PID
	local FindMatchmakeSessionByParticipantParam_m_principalIdList_len = tvb(off, 4):le_uint()
	subFindMatchmakeSessionByParticipantParam_container = FindMatchmakeSessionByParticipantParam_container:add_le(F.FindMatchmakeSessionByParticipantParam_m_principalIdList_len, tvb(off,4))
	off = off + 4
	for i=1,FindMatchmakeSessionByParticipantParam_m_principalIdList_len do
	off, FindMatchmakeSessionByParticipantParam_m_principalIdList_item = do_PID(conn, subFindMatchmakeSessionByParticipantParam_container, tvb, off, 'FindMatchmakeSessionByParticipantParam_m_principalIdList_item')

	end
	
off, FindMatchmakeSessionByParticipantParam_m_resultOptions = do_Uint32(conn, FindMatchmakeSessionByParticipantParam_container, tvb, off, 'FindMatchmakeSessionByParticipantParam_m_resultOptions')
off = do_MatchmakeBlockListParam(conn, FindMatchmakeSessionByParticipantParam_container, tvb, off, 'FindMatchmakeSessionByParticipantParam_m_blockListParam')

return off
end
function do_FindMatchmakeSessionByParticipantResult(conn, tree, tvb, off, field_name)
local FindMatchmakeSessionByParticipantResult_container = tree:add(F.FindMatchmakeSessionByParticipantResult, tvb(off, 0))
	FindMatchmakeSessionByParticipantResult_container:set_text("FindMatchmakeSessionByParticipantResult")
	off, FindMatchmakeSessionByParticipantResult_m_principalId = do_PID(conn, FindMatchmakeSessionByParticipantResult_container, tvb, off, 'FindMatchmakeSessionByParticipantResult_m_principalId')
off = do_MatchmakeSession(conn, FindMatchmakeSessionByParticipantResult_container, tvb, off, 'FindMatchmakeSessionByParticipantResult_m_session')

return off
end
function do_GatheringURLs(conn, tree, tvb, off, field_name)
local GatheringURLs_container = tree:add(F.GatheringURLs, tvb(off, 0))
	GatheringURLs_container:set_text("GatheringURLs")
	off = do_Structure(conn, GatheringURLs_container, tvb, off, 'GatheringURLs_Base')
off, GatheringURLs_m_gid = do_Uint32(conn, GatheringURLs_container, tvb, off, 'GatheringURLs_m_gid')
-- list !! StationURL
	local GatheringURLs_m_lstStationURLs_len = tvb(off, 4):le_uint()
	subGatheringURLs_container = GatheringURLs_container:add_le(F.GatheringURLs_m_lstStationURLs_len, tvb(off,4))
	off = off + 4
	for i=1,GatheringURLs_m_lstStationURLs_len do
	off, GatheringURLs_m_lstStationURLs_item = do_StationURL(conn, subGatheringURLs_container, tvb, off, 'GatheringURLs_m_lstStationURLs_item')

	end
	

return off
end
function do_Gathering_Stats(conn, tree, tvb, off, field_name)
local Gathering_Stats_container = tree:add(F.Gathering_Stats, tvb(off, 0))
	Gathering_Stats_container:set_text("Gathering_Stats")
	off = do_Structure(conn, Gathering_Stats_container, tvb, off, 'Gathering_Stats_Base')
off, Gathering_Stats_m_pidParticipant = do_Uint32(conn, Gathering_Stats_container, tvb, off, 'Gathering_Stats_m_pidParticipant')
off, Gathering_Stats_m_uiFlags = do_Uint32(conn, Gathering_Stats_container, tvb, off, 'Gathering_Stats_m_uiFlags')
-- list !! Float
	local Gathering_Stats_m_lstValues_len = tvb(off, 4):le_uint()
	subGathering_Stats_container = Gathering_Stats_container:add_le(F.Gathering_Stats_m_lstValues_len, tvb(off,4))
	off = off + 4
	for i=1,Gathering_Stats_m_lstValues_len do
	off, Gathering_Stats_m_lstValues_item = do_Float(conn, subGathering_Stats_container, tvb, off, 'Gathering_Stats_m_lstValues_item')

	end
	

return off
end
function do_Invitation(conn, tree, tvb, off, field_name)
local Invitation_container = tree:add(F.Invitation, tvb(off, 0))
	Invitation_container:set_text("Invitation")
	off = do_Structure(conn, Invitation_container, tvb, off, 'Invitation_Base')
off, Invitation_m_idGathering = do_Uint32(conn, Invitation_container, tvb, off, 'Invitation_m_idGathering')
off, Invitation_m_idGuest = do_Uint32(conn, Invitation_container, tvb, off, 'Invitation_m_idGuest')
off, Invitation_m_strMessage = do_String(conn, Invitation_container, tvb, off, 'Invitation_m_strMessage')

return off
end
function do_Participant_Details(conn, tree, tvb, off, field_name)
local Participant_Details_container = tree:add(F.Participant_Details, tvb(off, 0))
	Participant_Details_container:set_text("Participant_Details")
	off = do_Structure(conn, Participant_Details_container, tvb, off, 'Participant_Details_Base')
off, Participant_Details_m_idParticipant = do_Uint32(conn, Participant_Details_container, tvb, off, 'Participant_Details_m_idParticipant')
off, Participant_Details_m_strName = do_String(conn, Participant_Details_container, tvb, off, 'Participant_Details_m_strName')
off, Participant_Details_m_strMessage = do_String(conn, Participant_Details_container, tvb, off, 'Participant_Details_m_strMessage')
off, Participant_Details_m_uiParticipants = do_Uint16(conn, Participant_Details_container, tvb, off, 'Participant_Details_m_uiParticipants')

return off
end
function do_Deletion_Entry(conn, tree, tvb, off, field_name)
local Deletion_Entry_container = tree:add(F.Deletion_Entry, tvb(off, 0))
	Deletion_Entry_container:set_text("Deletion_Entry")
	off = do_Structure(conn, Deletion_Entry_container, tvb, off, 'Deletion_Entry_Base')
off, Deletion_Entry_m_idGathering = do_Uint32(conn, Deletion_Entry_container, tvb, off, 'Deletion_Entry_m_idGathering')
off, Deletion_Entry_m_pid = do_PID(conn, Deletion_Entry_container, tvb, off, 'Deletion_Entry_m_pid')
off, Deletion_Entry_m_uiReason = do_Uint32(conn, Deletion_Entry_container, tvb, off, 'Deletion_Entry_m_uiReason')

return off
end
function do_PlayingSession(conn, tree, tvb, off, field_name)
local PlayingSession_container = tree:add(F.PlayingSession, tvb(off, 0))
	PlayingSession_container:set_text("PlayingSession")
	off = do_Structure(conn, PlayingSession_container, tvb, off, 'PlayingSession_Base')
off, PlayingSession_m_PrincipalId = do_PID(conn, PlayingSession_container, tvb, off, 'PlayingSession_m_PrincipalId')

		local PlayingSession_m_Gathering_container = PlayingSession_container:add(F.Data, tvb(off, 0))
		PlayingSession_m_Gathering_container:set_text("Data<Gathering>")
	off, PlayingSession_m_Gathering_type_name = do_String(conn, PlayingSession_m_Gathering_container, tvb, off, 'PlayingSession_m_Gathering_type_name')

off, PlayingSession_m_Gathering_len_plus_four = do_Uint32(conn, PlayingSession_m_Gathering_container, tvb, off, 'PlayingSession_m_Gathering_len_plus_four')

off, PlayingSession_m_Gathering_data_len = do_Uint32(conn, PlayingSession_m_Gathering_container, tvb, off, 'PlayingSession_m_Gathering_data_len')

local type_func = 'do_'..PlayingSession_m_Gathering_type_name
		if _G[type_func] ~= nil then
			off = _G[type_func](conn, PlayingSession_m_Gathering_container, tvb, off, "PlayingSession_m_Gathering_data")
		else
			PlayingSession_m_Gathering_container:add(F.PlayingSession_m_Gathering_data_bytes, tvb(off, PlayingSession_m_Gathering_len))
			off = off + PlayingSession_m_Gathering_data_len
		end
	

return off
end
function do_SimplePlayingSession(conn, tree, tvb, off, field_name)
local SimplePlayingSession_container = tree:add(F.SimplePlayingSession, tvb(off, 0))
	SimplePlayingSession_container:set_text("SimplePlayingSession")
	off = do_Structure(conn, SimplePlayingSession_container, tvb, off, 'SimplePlayingSession_Base')
off, SimplePlayingSession_m_PrincipalID = do_PID(conn, SimplePlayingSession_container, tvb, off, 'SimplePlayingSession_m_PrincipalID')
off, SimplePlayingSession_m_GatheringID = do_Uint32(conn, SimplePlayingSession_container, tvb, off, 'SimplePlayingSession_m_GatheringID')
off, SimplePlayingSession_m_GameMode = do_Uint32(conn, SimplePlayingSession_container, tvb, off, 'SimplePlayingSession_m_GameMode')
off, SimplePlayingSession_m_Attribute_0 = do_Uint32(conn, SimplePlayingSession_container, tvb, off, 'SimplePlayingSession_m_Attribute_0')

return off
end
function do_SimpleCommunity(conn, tree, tvb, off, field_name)
local SimpleCommunity_container = tree:add(F.SimpleCommunity, tvb(off, 0))
	SimpleCommunity_container:set_text("SimpleCommunity")
	off = do_Structure(conn, SimpleCommunity_container, tvb, off, 'SimpleCommunity_Base')
off, SimpleCommunity_m_GatheringID = do_Uint32(conn, SimpleCommunity_container, tvb, off, 'SimpleCommunity_m_GatheringID')
off, SimpleCommunity_m_MatchmakeSessionCount = do_Uint32(conn, SimpleCommunity_container, tvb, off, 'SimpleCommunity_m_MatchmakeSessionCount')

return off
end
function do_DataStorePrepareGetParamV1(conn, tree, tvb, off, field_name)
local DataStorePrepareGetParamV1_container = tree:add(F.DataStorePrepareGetParamV1, tvb(off, 0))
	DataStorePrepareGetParamV1_container:set_text("DataStorePrepareGetParamV1")
	off = do_Structure(conn, DataStorePrepareGetParamV1_container, tvb, off, 'DataStorePrepareGetParamV1_Base')
off, DataStorePrepareGetParamV1_dataId = do_Uint32(conn, DataStorePrepareGetParamV1_container, tvb, off, 'DataStorePrepareGetParamV1_dataId')
off, DataStorePrepareGetParamV1_lockId = do_Uint32(conn, DataStorePrepareGetParamV1_container, tvb, off, 'DataStorePrepareGetParamV1_lockId')

return off
end
function do_DataStorePrepareGetParam(conn, tree, tvb, off, field_name)
local DataStorePrepareGetParam_container = tree:add(F.DataStorePrepareGetParam, tvb(off, 0))
	DataStorePrepareGetParam_container:set_text("DataStorePrepareGetParam")
	off = do_Structure(conn, DataStorePrepareGetParam_container, tvb, off, 'DataStorePrepareGetParam_Base')
off, DataStorePrepareGetParam_dataId = do_Uint64(conn, DataStorePrepareGetParam_container, tvb, off, 'DataStorePrepareGetParam_dataId')
off, DataStorePrepareGetParam_lockId = do_Uint32(conn, DataStorePrepareGetParam_container, tvb, off, 'DataStorePrepareGetParam_lockId')
off = do_DataStorePersistenceTarget(conn, DataStorePrepareGetParam_container, tvb, off, 'DataStorePrepareGetParam_persistenceTarget')
off, DataStorePrepareGetParam_accessPassword = do_Uint64(conn, DataStorePrepareGetParam_container, tvb, off, 'DataStorePrepareGetParam_accessPassword')
-- list !! String
	local DataStorePrepareGetParam_extraData_len = tvb(off, 4):le_uint()
	subDataStorePrepareGetParam_container = DataStorePrepareGetParam_container:add_le(F.DataStorePrepareGetParam_extraData_len, tvb(off,4))
	off = off + 4
	for i=1,DataStorePrepareGetParam_extraData_len do
	off, DataStorePrepareGetParam_extraData_item = do_String(conn, subDataStorePrepareGetParam_container, tvb, off, 'DataStorePrepareGetParam_extraData_item')

	end
	

return off
end
function do_DataStoreReqGetInfoV1(conn, tree, tvb, off, field_name)
local DataStoreReqGetInfoV1_container = tree:add(F.DataStoreReqGetInfoV1, tvb(off, 0))
	DataStoreReqGetInfoV1_container:set_text("DataStoreReqGetInfoV1")
	off = do_Structure(conn, DataStoreReqGetInfoV1_container, tvb, off, 'DataStoreReqGetInfoV1_Base')
off, DataStoreReqGetInfoV1_url = do_String(conn, DataStoreReqGetInfoV1_container, tvb, off, 'DataStoreReqGetInfoV1_url')
-- list !! DataStoreKeyValue
	local DataStoreReqGetInfoV1_requestHeaders_len = tvb(off, 4):le_uint()
	subDataStoreReqGetInfoV1_container = DataStoreReqGetInfoV1_container:add_le(F.DataStoreReqGetInfoV1_requestHeaders_len, tvb(off,4))
	off = off + 4
	for i=1,DataStoreReqGetInfoV1_requestHeaders_len do
	off = do_DataStoreKeyValue(conn, subDataStoreReqGetInfoV1_container, tvb, off, 'DataStoreReqGetInfoV1_requestHeaders_item')

	end
	
off, DataStoreReqGetInfoV1_size = do_Uint32(conn, DataStoreReqGetInfoV1_container, tvb, off, 'DataStoreReqGetInfoV1_size')
off, DataStoreReqGetInfoV1_rootCaCert = do_Buffer(conn, DataStoreReqGetInfoV1_container, tvb, off, 'DataStoreReqGetInfoV1_rootCaCert')

return off
end
function do_DataStoreReqGetInfo(conn, tree, tvb, off, field_name)
local DataStoreReqGetInfo_container = tree:add(F.DataStoreReqGetInfo, tvb(off, 0))
	DataStoreReqGetInfo_container:set_text("DataStoreReqGetInfo")
	off = do_Structure(conn, DataStoreReqGetInfo_container, tvb, off, 'DataStoreReqGetInfo_Base')
off, DataStoreReqGetInfo_url = do_String(conn, DataStoreReqGetInfo_container, tvb, off, 'DataStoreReqGetInfo_url')
-- list !! DataStoreKeyValue
	local DataStoreReqGetInfo_requestHeaders_len = tvb(off, 4):le_uint()
	subDataStoreReqGetInfo_container = DataStoreReqGetInfo_container:add_le(F.DataStoreReqGetInfo_requestHeaders_len, tvb(off,4))
	off = off + 4
	for i=1,DataStoreReqGetInfo_requestHeaders_len do
	off = do_DataStoreKeyValue(conn, subDataStoreReqGetInfo_container, tvb, off, 'DataStoreReqGetInfo_requestHeaders_item')

	end
	
off, DataStoreReqGetInfo_size = do_Uint32(conn, DataStoreReqGetInfo_container, tvb, off, 'DataStoreReqGetInfo_size')
off, DataStoreReqGetInfo_rootCaCert = do_Buffer(conn, DataStoreReqGetInfo_container, tvb, off, 'DataStoreReqGetInfo_rootCaCert')
off, DataStoreReqGetInfo_dataId = do_Uint64(conn, DataStoreReqGetInfo_container, tvb, off, 'DataStoreReqGetInfo_dataId')

return off
end
function do_DataStoreReqGetAdditionalMeta(conn, tree, tvb, off, field_name)
local DataStoreReqGetAdditionalMeta_container = tree:add(F.DataStoreReqGetAdditionalMeta, tvb(off, 0))
	DataStoreReqGetAdditionalMeta_container:set_text("DataStoreReqGetAdditionalMeta")
	off = do_Structure(conn, DataStoreReqGetAdditionalMeta_container, tvb, off, 'DataStoreReqGetAdditionalMeta_Base')
off, DataStoreReqGetAdditionalMeta_ownerId = do_PID(conn, DataStoreReqGetAdditionalMeta_container, tvb, off, 'DataStoreReqGetAdditionalMeta_ownerId')
off, DataStoreReqGetAdditionalMeta_dataType = do_Uint16(conn, DataStoreReqGetAdditionalMeta_container, tvb, off, 'DataStoreReqGetAdditionalMeta_dataType')
off, DataStoreReqGetAdditionalMeta_version = do_Uint16(conn, DataStoreReqGetAdditionalMeta_container, tvb, off, 'DataStoreReqGetAdditionalMeta_version')
off, DataStoreReqGetAdditionalMeta_metaBinary = do_qBuffer(conn, DataStoreReqGetAdditionalMeta_container, tvb, off, 'DataStoreReqGetAdditionalMeta_metaBinary')

return off
end
function do_DataStorePreparePostParamV1(conn, tree, tvb, off, field_name)
local DataStorePreparePostParamV1_container = tree:add(F.DataStorePreparePostParamV1, tvb(off, 0))
	DataStorePreparePostParamV1_container:set_text("DataStorePreparePostParamV1")
	off = do_Structure(conn, DataStorePreparePostParamV1_container, tvb, off, 'DataStorePreparePostParamV1_Base')
off, DataStorePreparePostParamV1_size = do_Uint32(conn, DataStorePreparePostParamV1_container, tvb, off, 'DataStorePreparePostParamV1_size')
off, DataStorePreparePostParamV1_name = do_String(conn, DataStorePreparePostParamV1_container, tvb, off, 'DataStorePreparePostParamV1_name')
off, DataStorePreparePostParamV1_dataType = do_Uint16(conn, DataStorePreparePostParamV1_container, tvb, off, 'DataStorePreparePostParamV1_dataType')
off, DataStorePreparePostParamV1_metaBinary = do_qBuffer(conn, DataStorePreparePostParamV1_container, tvb, off, 'DataStorePreparePostParamV1_metaBinary')
off = do_DataStorePermission(conn, DataStorePreparePostParamV1_container, tvb, off, 'DataStorePreparePostParamV1_permission')
off = do_DataStorePermission(conn, DataStorePreparePostParamV1_container, tvb, off, 'DataStorePreparePostParamV1_delPermission')
off, DataStorePreparePostParamV1_flag = do_Uint32(conn, DataStorePreparePostParamV1_container, tvb, off, 'DataStorePreparePostParamV1_flag')
off, DataStorePreparePostParamV1_period = do_Uint16(conn, DataStorePreparePostParamV1_container, tvb, off, 'DataStorePreparePostParamV1_period')
off, DataStorePreparePostParamV1_referDataId = do_Uint32(conn, DataStorePreparePostParamV1_container, tvb, off, 'DataStorePreparePostParamV1_referDataId')
-- list !! String
	local DataStorePreparePostParamV1_tags_len = tvb(off, 4):le_uint()
	subDataStorePreparePostParamV1_container = DataStorePreparePostParamV1_container:add_le(F.DataStorePreparePostParamV1_tags_len, tvb(off,4))
	off = off + 4
	for i=1,DataStorePreparePostParamV1_tags_len do
	off, DataStorePreparePostParamV1_tags_item = do_String(conn, subDataStorePreparePostParamV1_container, tvb, off, 'DataStorePreparePostParamV1_tags_item')

	end
	
-- list !! DataStoreRatingInitParamWithSlot
	local DataStorePreparePostParamV1_ratingInitParams_len = tvb(off, 4):le_uint()
	subDataStorePreparePostParamV1_container = DataStorePreparePostParamV1_container:add_le(F.DataStorePreparePostParamV1_ratingInitParams_len, tvb(off,4))
	off = off + 4
	for i=1,DataStorePreparePostParamV1_ratingInitParams_len do
	off = do_DataStoreRatingInitParamWithSlot(conn, subDataStorePreparePostParamV1_container, tvb, off, 'DataStorePreparePostParamV1_ratingInitParams_item')

	end
	

return off
end
function do_DataStorePreparePostParam(conn, tree, tvb, off, field_name)
local DataStorePreparePostParam_container = tree:add(F.DataStorePreparePostParam, tvb(off, 0))
	DataStorePreparePostParam_container:set_text("DataStorePreparePostParam")
	off = do_Structure(conn, DataStorePreparePostParam_container, tvb, off, 'DataStorePreparePostParam_Base')
off, DataStorePreparePostParam_size = do_Uint32(conn, DataStorePreparePostParam_container, tvb, off, 'DataStorePreparePostParam_size')
off, DataStorePreparePostParam_name = do_String(conn, DataStorePreparePostParam_container, tvb, off, 'DataStorePreparePostParam_name')
off, DataStorePreparePostParam_dataType = do_Uint16(conn, DataStorePreparePostParam_container, tvb, off, 'DataStorePreparePostParam_dataType')
off, DataStorePreparePostParam_metaBinary = do_qBuffer(conn, DataStorePreparePostParam_container, tvb, off, 'DataStorePreparePostParam_metaBinary')
off = do_DataStorePermission(conn, DataStorePreparePostParam_container, tvb, off, 'DataStorePreparePostParam_permission')
off = do_DataStorePermission(conn, DataStorePreparePostParam_container, tvb, off, 'DataStorePreparePostParam_delPermission')
off, DataStorePreparePostParam_flag = do_Uint32(conn, DataStorePreparePostParam_container, tvb, off, 'DataStorePreparePostParam_flag')
off, DataStorePreparePostParam_period = do_Uint16(conn, DataStorePreparePostParam_container, tvb, off, 'DataStorePreparePostParam_period')
off, DataStorePreparePostParam_referDataId = do_Uint32(conn, DataStorePreparePostParam_container, tvb, off, 'DataStorePreparePostParam_referDataId')
-- list !! String
	local DataStorePreparePostParam_tags_len = tvb(off, 4):le_uint()
	subDataStorePreparePostParam_container = DataStorePreparePostParam_container:add_le(F.DataStorePreparePostParam_tags_len, tvb(off,4))
	off = off + 4
	for i=1,DataStorePreparePostParam_tags_len do
	off, DataStorePreparePostParam_tags_item = do_String(conn, subDataStorePreparePostParam_container, tvb, off, 'DataStorePreparePostParam_tags_item')

	end
	
-- list !! DataStoreRatingInitParamWithSlot
	local DataStorePreparePostParam_ratingInitParams_len = tvb(off, 4):le_uint()
	subDataStorePreparePostParam_container = DataStorePreparePostParam_container:add_le(F.DataStorePreparePostParam_ratingInitParams_len, tvb(off,4))
	off = off + 4
	for i=1,DataStorePreparePostParam_ratingInitParams_len do
	off = do_DataStoreRatingInitParamWithSlot(conn, subDataStorePreparePostParam_container, tvb, off, 'DataStorePreparePostParam_ratingInitParams_item')

	end
	
off = do_DataStorePersistenceInitParam(conn, DataStorePreparePostParam_container, tvb, off, 'DataStorePreparePostParam_persistenceInitParam')
-- list !! String
	local DataStorePreparePostParam_extraData_len = tvb(off, 4):le_uint()
	subDataStorePreparePostParam_container = DataStorePreparePostParam_container:add_le(F.DataStorePreparePostParam_extraData_len, tvb(off,4))
	off = off + 4
	for i=1,DataStorePreparePostParam_extraData_len do
	off, DataStorePreparePostParam_extraData_item = do_String(conn, subDataStorePreparePostParam_container, tvb, off, 'DataStorePreparePostParam_extraData_item')

	end
	

return off
end
function do_DataStoreReqPostInfoV1(conn, tree, tvb, off, field_name)
local DataStoreReqPostInfoV1_container = tree:add(F.DataStoreReqPostInfoV1, tvb(off, 0))
	DataStoreReqPostInfoV1_container:set_text("DataStoreReqPostInfoV1")
	off = do_Structure(conn, DataStoreReqPostInfoV1_container, tvb, off, 'DataStoreReqPostInfoV1_Base')
off, DataStoreReqPostInfoV1_dataId = do_Uint32(conn, DataStoreReqPostInfoV1_container, tvb, off, 'DataStoreReqPostInfoV1_dataId')
off, DataStoreReqPostInfoV1_url = do_String(conn, DataStoreReqPostInfoV1_container, tvb, off, 'DataStoreReqPostInfoV1_url')
-- list !! DataStoreKeyValue
	local DataStoreReqPostInfoV1_requestHeaders_len = tvb(off, 4):le_uint()
	subDataStoreReqPostInfoV1_container = DataStoreReqPostInfoV1_container:add_le(F.DataStoreReqPostInfoV1_requestHeaders_len, tvb(off,4))
	off = off + 4
	for i=1,DataStoreReqPostInfoV1_requestHeaders_len do
	off = do_DataStoreKeyValue(conn, subDataStoreReqPostInfoV1_container, tvb, off, 'DataStoreReqPostInfoV1_requestHeaders_item')

	end
	
-- list !! DataStoreKeyValue
	local DataStoreReqPostInfoV1_formFields_len = tvb(off, 4):le_uint()
	subDataStoreReqPostInfoV1_container = DataStoreReqPostInfoV1_container:add_le(F.DataStoreReqPostInfoV1_formFields_len, tvb(off,4))
	off = off + 4
	for i=1,DataStoreReqPostInfoV1_formFields_len do
	off = do_DataStoreKeyValue(conn, subDataStoreReqPostInfoV1_container, tvb, off, 'DataStoreReqPostInfoV1_formFields_item')

	end
	
off, DataStoreReqPostInfoV1_rootCaCert = do_Buffer(conn, DataStoreReqPostInfoV1_container, tvb, off, 'DataStoreReqPostInfoV1_rootCaCert')

return off
end
function do_DataStoreReqPostInfo(conn, tree, tvb, off, field_name)
local DataStoreReqPostInfo_container = tree:add(F.DataStoreReqPostInfo, tvb(off, 0))
	DataStoreReqPostInfo_container:set_text("DataStoreReqPostInfo")
	off = do_Structure(conn, DataStoreReqPostInfo_container, tvb, off, 'DataStoreReqPostInfo_Base')
off, DataStoreReqPostInfo_dataId = do_Uint64(conn, DataStoreReqPostInfo_container, tvb, off, 'DataStoreReqPostInfo_dataId')
off, DataStoreReqPostInfo_url = do_String(conn, DataStoreReqPostInfo_container, tvb, off, 'DataStoreReqPostInfo_url')
-- list !! DataStoreKeyValue
	local DataStoreReqPostInfo_requestHeaders_len = tvb(off, 4):le_uint()
	subDataStoreReqPostInfo_container = DataStoreReqPostInfo_container:add_le(F.DataStoreReqPostInfo_requestHeaders_len, tvb(off,4))
	off = off + 4
	for i=1,DataStoreReqPostInfo_requestHeaders_len do
	off = do_DataStoreKeyValue(conn, subDataStoreReqPostInfo_container, tvb, off, 'DataStoreReqPostInfo_requestHeaders_item')

	end
	
-- list !! DataStoreKeyValue
	local DataStoreReqPostInfo_formFields_len = tvb(off, 4):le_uint()
	subDataStoreReqPostInfo_container = DataStoreReqPostInfo_container:add_le(F.DataStoreReqPostInfo_formFields_len, tvb(off,4))
	off = off + 4
	for i=1,DataStoreReqPostInfo_formFields_len do
	off = do_DataStoreKeyValue(conn, subDataStoreReqPostInfo_container, tvb, off, 'DataStoreReqPostInfo_formFields_item')

	end
	
off, DataStoreReqPostInfo_rootCaCert = do_Buffer(conn, DataStoreReqPostInfo_container, tvb, off, 'DataStoreReqPostInfo_rootCaCert')

return off
end
function do_DataStoreCompletePostParamV1(conn, tree, tvb, off, field_name)
local DataStoreCompletePostParamV1_container = tree:add(F.DataStoreCompletePostParamV1, tvb(off, 0))
	DataStoreCompletePostParamV1_container:set_text("DataStoreCompletePostParamV1")
	off = do_Structure(conn, DataStoreCompletePostParamV1_container, tvb, off, 'DataStoreCompletePostParamV1_Base')
off, DataStoreCompletePostParamV1_dataId = do_Uint32(conn, DataStoreCompletePostParamV1_container, tvb, off, 'DataStoreCompletePostParamV1_dataId')
off, DataStoreCompletePostParamV1_isSuccess = do_Bool(conn, DataStoreCompletePostParamV1_container, tvb, off, 'DataStoreCompletePostParamV1_isSuccess')

return off
end
function do_DataStoreCompletePostParam(conn, tree, tvb, off, field_name)
local DataStoreCompletePostParam_container = tree:add(F.DataStoreCompletePostParam, tvb(off, 0))
	DataStoreCompletePostParam_container:set_text("DataStoreCompletePostParam")
	off = do_Structure(conn, DataStoreCompletePostParam_container, tvb, off, 'DataStoreCompletePostParam_Base')
off, DataStoreCompletePostParam_dataId = do_Uint64(conn, DataStoreCompletePostParam_container, tvb, off, 'DataStoreCompletePostParam_dataId')
off, DataStoreCompletePostParam_isSuccess = do_Bool(conn, DataStoreCompletePostParam_container, tvb, off, 'DataStoreCompletePostParam_isSuccess')

return off
end
function do_DataStoreDeleteParam(conn, tree, tvb, off, field_name)
local DataStoreDeleteParam_container = tree:add(F.DataStoreDeleteParam, tvb(off, 0))
	DataStoreDeleteParam_container:set_text("DataStoreDeleteParam")
	off = do_Structure(conn, DataStoreDeleteParam_container, tvb, off, 'DataStoreDeleteParam_Base')
off, DataStoreDeleteParam_dataId = do_Uint64(conn, DataStoreDeleteParam_container, tvb, off, 'DataStoreDeleteParam_dataId')
off, DataStoreDeleteParam_updatePassword = do_Uint64(conn, DataStoreDeleteParam_container, tvb, off, 'DataStoreDeleteParam_updatePassword')

return off
end
function do_DataStoreChangeMetaParamV1(conn, tree, tvb, off, field_name)
local DataStoreChangeMetaParamV1_container = tree:add(F.DataStoreChangeMetaParamV1, tvb(off, 0))
	DataStoreChangeMetaParamV1_container:set_text("DataStoreChangeMetaParamV1")
	off = do_Structure(conn, DataStoreChangeMetaParamV1_container, tvb, off, 'DataStoreChangeMetaParamV1_Base')
off, DataStoreChangeMetaParamV1_dataId = do_Uint64(conn, DataStoreChangeMetaParamV1_container, tvb, off, 'DataStoreChangeMetaParamV1_dataId')
off, DataStoreChangeMetaParamV1_modifiesFlag = do_Uint32(conn, DataStoreChangeMetaParamV1_container, tvb, off, 'DataStoreChangeMetaParamV1_modifiesFlag')
off, DataStoreChangeMetaParamV1_name = do_String(conn, DataStoreChangeMetaParamV1_container, tvb, off, 'DataStoreChangeMetaParamV1_name')
off = do_DataStorePermission(conn, DataStoreChangeMetaParamV1_container, tvb, off, 'DataStoreChangeMetaParamV1_permission')
off = do_DataStorePermission(conn, DataStoreChangeMetaParamV1_container, tvb, off, 'DataStoreChangeMetaParamV1_delPermission')
off, DataStoreChangeMetaParamV1_period = do_Uint16(conn, DataStoreChangeMetaParamV1_container, tvb, off, 'DataStoreChangeMetaParamV1_period')
off, DataStoreChangeMetaParamV1_metaBinary = do_qBuffer(conn, DataStoreChangeMetaParamV1_container, tvb, off, 'DataStoreChangeMetaParamV1_metaBinary')
-- list !! String
	local DataStoreChangeMetaParamV1_tags_len = tvb(off, 4):le_uint()
	subDataStoreChangeMetaParamV1_container = DataStoreChangeMetaParamV1_container:add_le(F.DataStoreChangeMetaParamV1_tags_len, tvb(off,4))
	off = off + 4
	for i=1,DataStoreChangeMetaParamV1_tags_len do
	off, DataStoreChangeMetaParamV1_tags_item = do_String(conn, subDataStoreChangeMetaParamV1_container, tvb, off, 'DataStoreChangeMetaParamV1_tags_item')

	end
	
off, DataStoreChangeMetaParamV1_updatePassword = do_Uint64(conn, DataStoreChangeMetaParamV1_container, tvb, off, 'DataStoreChangeMetaParamV1_updatePassword')

return off
end
function do_DataStoreChangeMetaParam(conn, tree, tvb, off, field_name)
local DataStoreChangeMetaParam_container = tree:add(F.DataStoreChangeMetaParam, tvb(off, 0))
	DataStoreChangeMetaParam_container:set_text("DataStoreChangeMetaParam")
	off = do_Structure(conn, DataStoreChangeMetaParam_container, tvb, off, 'DataStoreChangeMetaParam_Base')
off, DataStoreChangeMetaParam_dataId = do_Uint64(conn, DataStoreChangeMetaParam_container, tvb, off, 'DataStoreChangeMetaParam_dataId')
off, DataStoreChangeMetaParam_modifiesFlag = do_Uint32(conn, DataStoreChangeMetaParam_container, tvb, off, 'DataStoreChangeMetaParam_modifiesFlag')
off, DataStoreChangeMetaParam_name = do_String(conn, DataStoreChangeMetaParam_container, tvb, off, 'DataStoreChangeMetaParam_name')
off = do_DataStorePermission(conn, DataStoreChangeMetaParam_container, tvb, off, 'DataStoreChangeMetaParam_permission')
off = do_DataStorePermission(conn, DataStoreChangeMetaParam_container, tvb, off, 'DataStoreChangeMetaParam_delPermission')
off, DataStoreChangeMetaParam_period = do_Uint16(conn, DataStoreChangeMetaParam_container, tvb, off, 'DataStoreChangeMetaParam_period')
off, DataStoreChangeMetaParam_metaBinary = do_qBuffer(conn, DataStoreChangeMetaParam_container, tvb, off, 'DataStoreChangeMetaParam_metaBinary')
-- list !! String
	local DataStoreChangeMetaParam_tags_len = tvb(off, 4):le_uint()
	subDataStoreChangeMetaParam_container = DataStoreChangeMetaParam_container:add_le(F.DataStoreChangeMetaParam_tags_len, tvb(off,4))
	off = off + 4
	for i=1,DataStoreChangeMetaParam_tags_len do
	off, DataStoreChangeMetaParam_tags_item = do_String(conn, subDataStoreChangeMetaParam_container, tvb, off, 'DataStoreChangeMetaParam_tags_item')

	end
	
off, DataStoreChangeMetaParam_updatePassword = do_Uint64(conn, DataStoreChangeMetaParam_container, tvb, off, 'DataStoreChangeMetaParam_updatePassword')
off, DataStoreChangeMetaParam_referredCnt = do_Uint32(conn, DataStoreChangeMetaParam_container, tvb, off, 'DataStoreChangeMetaParam_referredCnt')
off, DataStoreChangeMetaParam_dataType = do_Uint16(conn, DataStoreChangeMetaParam_container, tvb, off, 'DataStoreChangeMetaParam_dataType')
off, DataStoreChangeMetaParam_status = do_Uint8(conn, DataStoreChangeMetaParam_container, tvb, off, 'DataStoreChangeMetaParam_status')
off = do_DataStoreChangeMetaCompareParam(conn, DataStoreChangeMetaParam_container, tvb, off, 'DataStoreChangeMetaParam_compareParam')
off = do_DataStorePersistenceTarget(conn, DataStoreChangeMetaParam_container, tvb, off, 'DataStoreChangeMetaParam_persistenceTarget')

return off
end
function do_DataStoreGetMetaParam(conn, tree, tvb, off, field_name)
local DataStoreGetMetaParam_container = tree:add(F.DataStoreGetMetaParam, tvb(off, 0))
	DataStoreGetMetaParam_container:set_text("DataStoreGetMetaParam")
	off = do_Structure(conn, DataStoreGetMetaParam_container, tvb, off, 'DataStoreGetMetaParam_Base')
off, DataStoreGetMetaParam_dataId = do_Uint64(conn, DataStoreGetMetaParam_container, tvb, off, 'DataStoreGetMetaParam_dataId')
off = do_DataStorePersistenceTarget(conn, DataStoreGetMetaParam_container, tvb, off, 'DataStoreGetMetaParam_persistenceTarget')
off, DataStoreGetMetaParam_resultOption = do_Uint8(conn, DataStoreGetMetaParam_container, tvb, off, 'DataStoreGetMetaParam_resultOption')
off, DataStoreGetMetaParam_accessPassword = do_Uint64(conn, DataStoreGetMetaParam_container, tvb, off, 'DataStoreGetMetaParam_accessPassword')

return off
end
function do_DataStorePrepareUpdateParam(conn, tree, tvb, off, field_name)
local DataStorePrepareUpdateParam_container = tree:add(F.DataStorePrepareUpdateParam, tvb(off, 0))
	DataStorePrepareUpdateParam_container:set_text("DataStorePrepareUpdateParam")
	off = do_Structure(conn, DataStorePrepareUpdateParam_container, tvb, off, 'DataStorePrepareUpdateParam_Base')
off, DataStorePrepareUpdateParam_dataId = do_Uint64(conn, DataStorePrepareUpdateParam_container, tvb, off, 'DataStorePrepareUpdateParam_dataId')
off, DataStorePrepareUpdateParam_size = do_Uint32(conn, DataStorePrepareUpdateParam_container, tvb, off, 'DataStorePrepareUpdateParam_size')
off, DataStorePrepareUpdateParam_updatePassword = do_Uint64(conn, DataStorePrepareUpdateParam_container, tvb, off, 'DataStorePrepareUpdateParam_updatePassword')
-- list !! String
	local DataStorePrepareUpdateParam_extraData_len = tvb(off, 4):le_uint()
	subDataStorePrepareUpdateParam_container = DataStorePrepareUpdateParam_container:add_le(F.DataStorePrepareUpdateParam_extraData_len, tvb(off,4))
	off = off + 4
	for i=1,DataStorePrepareUpdateParam_extraData_len do
	off, DataStorePrepareUpdateParam_extraData_item = do_String(conn, subDataStorePrepareUpdateParam_container, tvb, off, 'DataStorePrepareUpdateParam_extraData_item')

	end
	

return off
end
function do_DataStoreReqUpdateInfo(conn, tree, tvb, off, field_name)
local DataStoreReqUpdateInfo_container = tree:add(F.DataStoreReqUpdateInfo, tvb(off, 0))
	DataStoreReqUpdateInfo_container:set_text("DataStoreReqUpdateInfo")
	off = do_Structure(conn, DataStoreReqUpdateInfo_container, tvb, off, 'DataStoreReqUpdateInfo_Base')
off, DataStoreReqUpdateInfo_version = do_Uint32(conn, DataStoreReqUpdateInfo_container, tvb, off, 'DataStoreReqUpdateInfo_version')
off, DataStoreReqUpdateInfo_url = do_String(conn, DataStoreReqUpdateInfo_container, tvb, off, 'DataStoreReqUpdateInfo_url')
-- list !! DataStoreKeyValue
	local DataStoreReqUpdateInfo_requestHeaders_len = tvb(off, 4):le_uint()
	subDataStoreReqUpdateInfo_container = DataStoreReqUpdateInfo_container:add_le(F.DataStoreReqUpdateInfo_requestHeaders_len, tvb(off,4))
	off = off + 4
	for i=1,DataStoreReqUpdateInfo_requestHeaders_len do
	off = do_DataStoreKeyValue(conn, subDataStoreReqUpdateInfo_container, tvb, off, 'DataStoreReqUpdateInfo_requestHeaders_item')

	end
	
-- list !! DataStoreKeyValue
	local DataStoreReqUpdateInfo_formFields_len = tvb(off, 4):le_uint()
	subDataStoreReqUpdateInfo_container = DataStoreReqUpdateInfo_container:add_le(F.DataStoreReqUpdateInfo_formFields_len, tvb(off,4))
	off = off + 4
	for i=1,DataStoreReqUpdateInfo_formFields_len do
	off = do_DataStoreKeyValue(conn, subDataStoreReqUpdateInfo_container, tvb, off, 'DataStoreReqUpdateInfo_formFields_item')

	end
	
off, DataStoreReqUpdateInfo_rootCaCert = do_Buffer(conn, DataStoreReqUpdateInfo_container, tvb, off, 'DataStoreReqUpdateInfo_rootCaCert')

return off
end
function do_DataStoreCompleteUpdateParam(conn, tree, tvb, off, field_name)
local DataStoreCompleteUpdateParam_container = tree:add(F.DataStoreCompleteUpdateParam, tvb(off, 0))
	DataStoreCompleteUpdateParam_container:set_text("DataStoreCompleteUpdateParam")
	off = do_Structure(conn, DataStoreCompleteUpdateParam_container, tvb, off, 'DataStoreCompleteUpdateParam_Base')
off, DataStoreCompleteUpdateParam_dataId = do_Uint64(conn, DataStoreCompleteUpdateParam_container, tvb, off, 'DataStoreCompleteUpdateParam_dataId')
off, DataStoreCompleteUpdateParam_version = do_Uint32(conn, DataStoreCompleteUpdateParam_container, tvb, off, 'DataStoreCompleteUpdateParam_version')
off, DataStoreCompleteUpdateParam_isSuccess = do_Bool(conn, DataStoreCompleteUpdateParam_container, tvb, off, 'DataStoreCompleteUpdateParam_isSuccess')

return off
end
function do_DataStoreSearchParam(conn, tree, tvb, off, field_name)
local DataStoreSearchParam_container = tree:add(F.DataStoreSearchParam, tvb(off, 0))
	DataStoreSearchParam_container:set_text("DataStoreSearchParam")
	off = do_Structure(conn, DataStoreSearchParam_container, tvb, off, 'DataStoreSearchParam_Base')
off, DataStoreSearchParam_searchTarget = do_Uint8(conn, DataStoreSearchParam_container, tvb, off, 'DataStoreSearchParam_searchTarget')
-- list !! PID
	local DataStoreSearchParam_ownerIds_len = tvb(off, 4):le_uint()
	subDataStoreSearchParam_container = DataStoreSearchParam_container:add_le(F.DataStoreSearchParam_ownerIds_len, tvb(off,4))
	off = off + 4
	for i=1,DataStoreSearchParam_ownerIds_len do
	off, DataStoreSearchParam_ownerIds_item = do_PID(conn, subDataStoreSearchParam_container, tvb, off, 'DataStoreSearchParam_ownerIds_item')

	end
	
off, DataStoreSearchParam_ownerType = do_Uint8(conn, DataStoreSearchParam_container, tvb, off, 'DataStoreSearchParam_ownerType')
-- list !! Uint64
	local DataStoreSearchParam_destinationIds_len = tvb(off, 4):le_uint()
	subDataStoreSearchParam_container = DataStoreSearchParam_container:add_le(F.DataStoreSearchParam_destinationIds_len, tvb(off,4))
	off = off + 4
	for i=1,DataStoreSearchParam_destinationIds_len do
	off, DataStoreSearchParam_destinationIds_item = do_Uint64(conn, subDataStoreSearchParam_container, tvb, off, 'DataStoreSearchParam_destinationIds_item')

	end
	
off, DataStoreSearchParam_dataType = do_Uint16(conn, DataStoreSearchParam_container, tvb, off, 'DataStoreSearchParam_dataType')
off, DataStoreSearchParam_createdAfter = do_DateTime(conn, DataStoreSearchParam_container, tvb, off, 'DataStoreSearchParam_createdAfter')
off, DataStoreSearchParam_createdBefore = do_DateTime(conn, DataStoreSearchParam_container, tvb, off, 'DataStoreSearchParam_createdBefore')
off, DataStoreSearchParam_updatedAfter = do_DateTime(conn, DataStoreSearchParam_container, tvb, off, 'DataStoreSearchParam_updatedAfter')
off, DataStoreSearchParam_updatedBefore = do_DateTime(conn, DataStoreSearchParam_container, tvb, off, 'DataStoreSearchParam_updatedBefore')
off, DataStoreSearchParam_referDataId = do_Uint32(conn, DataStoreSearchParam_container, tvb, off, 'DataStoreSearchParam_referDataId')
-- list !! String
	local DataStoreSearchParam_tags_len = tvb(off, 4):le_uint()
	subDataStoreSearchParam_container = DataStoreSearchParam_container:add_le(F.DataStoreSearchParam_tags_len, tvb(off,4))
	off = off + 4
	for i=1,DataStoreSearchParam_tags_len do
	off, DataStoreSearchParam_tags_item = do_String(conn, subDataStoreSearchParam_container, tvb, off, 'DataStoreSearchParam_tags_item')

	end
	
off, DataStoreSearchParam_resultOrderColumn = do_Uint8(conn, DataStoreSearchParam_container, tvb, off, 'DataStoreSearchParam_resultOrderColumn')
off, DataStoreSearchParam_resultOrder = do_Uint8(conn, DataStoreSearchParam_container, tvb, off, 'DataStoreSearchParam_resultOrder')
off = do_ResultRange(conn, DataStoreSearchParam_container, tvb, off, 'DataStoreSearchParam_resultRange')
off, DataStoreSearchParam_resultOption = do_Uint8(conn, DataStoreSearchParam_container, tvb, off, 'DataStoreSearchParam_resultOption')
off, DataStoreSearchParam_minimalRatingFrequency = do_Uint32(conn, DataStoreSearchParam_container, tvb, off, 'DataStoreSearchParam_minimalRatingFrequency')
off, DataStoreSearchParam_useCache = do_Bool(conn, DataStoreSearchParam_container, tvb, off, 'DataStoreSearchParam_useCache')
off, DataStoreSearchParam_totalCountEnabled = do_Bool(conn, DataStoreSearchParam_container, tvb, off, 'DataStoreSearchParam_totalCountEnabled')
-- list !! Uint16
	local DataStoreSearchParam_dataTypes_len = tvb(off, 4):le_uint()
	subDataStoreSearchParam_container = DataStoreSearchParam_container:add_le(F.DataStoreSearchParam_dataTypes_len, tvb(off,4))
	off = off + 4
	for i=1,DataStoreSearchParam_dataTypes_len do
	off, DataStoreSearchParam_dataTypes_item = do_Uint16(conn, subDataStoreSearchParam_container, tvb, off, 'DataStoreSearchParam_dataTypes_item')

	end
	

return off
end
function do_DataStoreSearchResult(conn, tree, tvb, off, field_name)
local DataStoreSearchResult_container = tree:add(F.DataStoreSearchResult, tvb(off, 0))
	DataStoreSearchResult_container:set_text("DataStoreSearchResult")
	off = do_Structure(conn, DataStoreSearchResult_container, tvb, off, 'DataStoreSearchResult_Base')
off, DataStoreSearchResult_totalCount = do_Uint32(conn, DataStoreSearchResult_container, tvb, off, 'DataStoreSearchResult_totalCount')
-- list !! DataStoreMetaInfo
	local DataStoreSearchResult_result_len = tvb(off, 4):le_uint()
	subDataStoreSearchResult_container = DataStoreSearchResult_container:add_le(F.DataStoreSearchResult_result_len, tvb(off,4))
	off = off + 4
	for i=1,DataStoreSearchResult_result_len do
	off = do_DataStoreMetaInfo(conn, subDataStoreSearchResult_container, tvb, off, 'DataStoreSearchResult_result_item')

	end
	
off, DataStoreSearchResult_totalCountType = do_Uint8(conn, DataStoreSearchResult_container, tvb, off, 'DataStoreSearchResult_totalCountType')

return off
end
function do_DataStoreGetNotificationUrlParam(conn, tree, tvb, off, field_name)
local DataStoreGetNotificationUrlParam_container = tree:add(F.DataStoreGetNotificationUrlParam, tvb(off, 0))
	DataStoreGetNotificationUrlParam_container:set_text("DataStoreGetNotificationUrlParam")
	off = do_Structure(conn, DataStoreGetNotificationUrlParam_container, tvb, off, 'DataStoreGetNotificationUrlParam_Base')
off, DataStoreGetNotificationUrlParam_previousUrl = do_String(conn, DataStoreGetNotificationUrlParam_container, tvb, off, 'DataStoreGetNotificationUrlParam_previousUrl')

return off
end
function do_DataStoreReqGetNotificationUrlInfo(conn, tree, tvb, off, field_name)
local DataStoreReqGetNotificationUrlInfo_container = tree:add(F.DataStoreReqGetNotificationUrlInfo, tvb(off, 0))
	DataStoreReqGetNotificationUrlInfo_container:set_text("DataStoreReqGetNotificationUrlInfo")
	off = do_Structure(conn, DataStoreReqGetNotificationUrlInfo_container, tvb, off, 'DataStoreReqGetNotificationUrlInfo_Base')
off, DataStoreReqGetNotificationUrlInfo_url = do_String(conn, DataStoreReqGetNotificationUrlInfo_container, tvb, off, 'DataStoreReqGetNotificationUrlInfo_url')
off, DataStoreReqGetNotificationUrlInfo_key = do_String(conn, DataStoreReqGetNotificationUrlInfo_container, tvb, off, 'DataStoreReqGetNotificationUrlInfo_key')
off, DataStoreReqGetNotificationUrlInfo_query = do_String(conn, DataStoreReqGetNotificationUrlInfo_container, tvb, off, 'DataStoreReqGetNotificationUrlInfo_query')
off, DataStoreReqGetNotificationUrlInfo_rootCaCert = do_Buffer(conn, DataStoreReqGetNotificationUrlInfo_container, tvb, off, 'DataStoreReqGetNotificationUrlInfo_rootCaCert')

return off
end
function do_DataStoreGetNewArrivedNotificationsParam(conn, tree, tvb, off, field_name)
local DataStoreGetNewArrivedNotificationsParam_container = tree:add(F.DataStoreGetNewArrivedNotificationsParam, tvb(off, 0))
	DataStoreGetNewArrivedNotificationsParam_container:set_text("DataStoreGetNewArrivedNotificationsParam")
	off = do_Structure(conn, DataStoreGetNewArrivedNotificationsParam_container, tvb, off, 'DataStoreGetNewArrivedNotificationsParam_Base')
off, DataStoreGetNewArrivedNotificationsParam_lastNotificationId = do_Uint64(conn, DataStoreGetNewArrivedNotificationsParam_container, tvb, off, 'DataStoreGetNewArrivedNotificationsParam_lastNotificationId')
off, DataStoreGetNewArrivedNotificationsParam_limit = do_Uint16(conn, DataStoreGetNewArrivedNotificationsParam_container, tvb, off, 'DataStoreGetNewArrivedNotificationsParam_limit')

return off
end
function do_DataStoreNotificationV1(conn, tree, tvb, off, field_name)
local DataStoreNotificationV1_container = tree:add(F.DataStoreNotificationV1, tvb(off, 0))
	DataStoreNotificationV1_container:set_text("DataStoreNotificationV1")
	off = do_Structure(conn, DataStoreNotificationV1_container, tvb, off, 'DataStoreNotificationV1_Base')
off, DataStoreNotificationV1_notificationId = do_Uint64(conn, DataStoreNotificationV1_container, tvb, off, 'DataStoreNotificationV1_notificationId')
off, DataStoreNotificationV1_dataId = do_Uint32(conn, DataStoreNotificationV1_container, tvb, off, 'DataStoreNotificationV1_dataId')

return off
end
function do_DataStoreNotification(conn, tree, tvb, off, field_name)
local DataStoreNotification_container = tree:add(F.DataStoreNotification, tvb(off, 0))
	DataStoreNotification_container:set_text("DataStoreNotification")
	off = do_Structure(conn, DataStoreNotification_container, tvb, off, 'DataStoreNotification_Base')
off, DataStoreNotification_notificationId = do_Uint64(conn, DataStoreNotification_container, tvb, off, 'DataStoreNotification_notificationId')
off, DataStoreNotification_dataId = do_Uint64(conn, DataStoreNotification_container, tvb, off, 'DataStoreNotification_dataId')

return off
end
function do_DataStoreRateObjectParam(conn, tree, tvb, off, field_name)
local DataStoreRateObjectParam_container = tree:add(F.DataStoreRateObjectParam, tvb(off, 0))
	DataStoreRateObjectParam_container:set_text("DataStoreRateObjectParam")
	off = do_Structure(conn, DataStoreRateObjectParam_container, tvb, off, 'DataStoreRateObjectParam_Base')
off, DataStoreRateObjectParam_ratingValue = do_Sint32(conn, DataStoreRateObjectParam_container, tvb, off, 'DataStoreRateObjectParam_ratingValue')
off, DataStoreRateObjectParam_accessPassword = do_Uint64(conn, DataStoreRateObjectParam_container, tvb, off, 'DataStoreRateObjectParam_accessPassword')

return off
end
function do_DataStoreRatingTarget(conn, tree, tvb, off, field_name)
local DataStoreRatingTarget_container = tree:add(F.DataStoreRatingTarget, tvb(off, 0))
	DataStoreRatingTarget_container:set_text("DataStoreRatingTarget")
	off = do_Structure(conn, DataStoreRatingTarget_container, tvb, off, 'DataStoreRatingTarget_Base')
off, DataStoreRatingTarget_dataId = do_Uint64(conn, DataStoreRatingTarget_container, tvb, off, 'DataStoreRatingTarget_dataId')
off, DataStoreRatingTarget_slot = do_Sint8(conn, DataStoreRatingTarget_container, tvb, off, 'DataStoreRatingTarget_slot')

return off
end
function do_DataStoreGetSpecificMetaParamV1(conn, tree, tvb, off, field_name)
local DataStoreGetSpecificMetaParamV1_container = tree:add(F.DataStoreGetSpecificMetaParamV1, tvb(off, 0))
	DataStoreGetSpecificMetaParamV1_container:set_text("DataStoreGetSpecificMetaParamV1")
	off = do_Structure(conn, DataStoreGetSpecificMetaParamV1_container, tvb, off, 'DataStoreGetSpecificMetaParamV1_Base')
-- list !! Uint32
	local DataStoreGetSpecificMetaParamV1_dataIds_len = tvb(off, 4):le_uint()
	subDataStoreGetSpecificMetaParamV1_container = DataStoreGetSpecificMetaParamV1_container:add_le(F.DataStoreGetSpecificMetaParamV1_dataIds_len, tvb(off,4))
	off = off + 4
	for i=1,DataStoreGetSpecificMetaParamV1_dataIds_len do
	off, DataStoreGetSpecificMetaParamV1_dataIds_item = do_Uint32(conn, subDataStoreGetSpecificMetaParamV1_container, tvb, off, 'DataStoreGetSpecificMetaParamV1_dataIds_item')

	end
	

return off
end
function do_DataStoreGetSpecificMetaParam(conn, tree, tvb, off, field_name)
local DataStoreGetSpecificMetaParam_container = tree:add(F.DataStoreGetSpecificMetaParam, tvb(off, 0))
	DataStoreGetSpecificMetaParam_container:set_text("DataStoreGetSpecificMetaParam")
	off = do_Structure(conn, DataStoreGetSpecificMetaParam_container, tvb, off, 'DataStoreGetSpecificMetaParam_Base')
-- list !! Uint64
	local DataStoreGetSpecificMetaParam_dataIds_len = tvb(off, 4):le_uint()
	subDataStoreGetSpecificMetaParam_container = DataStoreGetSpecificMetaParam_container:add_le(F.DataStoreGetSpecificMetaParam_dataIds_len, tvb(off,4))
	off = off + 4
	for i=1,DataStoreGetSpecificMetaParam_dataIds_len do
	off, DataStoreGetSpecificMetaParam_dataIds_item = do_Uint64(conn, subDataStoreGetSpecificMetaParam_container, tvb, off, 'DataStoreGetSpecificMetaParam_dataIds_item')

	end
	

return off
end
function do_DataStoreSpecificMetaInfoV1(conn, tree, tvb, off, field_name)
local DataStoreSpecificMetaInfoV1_container = tree:add(F.DataStoreSpecificMetaInfoV1, tvb(off, 0))
	DataStoreSpecificMetaInfoV1_container:set_text("DataStoreSpecificMetaInfoV1")
	off = do_Structure(conn, DataStoreSpecificMetaInfoV1_container, tvb, off, 'DataStoreSpecificMetaInfoV1_Base')
off, DataStoreSpecificMetaInfoV1_dataId = do_Uint32(conn, DataStoreSpecificMetaInfoV1_container, tvb, off, 'DataStoreSpecificMetaInfoV1_dataId')
off, DataStoreSpecificMetaInfoV1_ownerId = do_PID(conn, DataStoreSpecificMetaInfoV1_container, tvb, off, 'DataStoreSpecificMetaInfoV1_ownerId')
off, DataStoreSpecificMetaInfoV1_size = do_Uint32(conn, DataStoreSpecificMetaInfoV1_container, tvb, off, 'DataStoreSpecificMetaInfoV1_size')
off, DataStoreSpecificMetaInfoV1_dataType = do_Uint16(conn, DataStoreSpecificMetaInfoV1_container, tvb, off, 'DataStoreSpecificMetaInfoV1_dataType')
off, DataStoreSpecificMetaInfoV1_version = do_Uint16(conn, DataStoreSpecificMetaInfoV1_container, tvb, off, 'DataStoreSpecificMetaInfoV1_version')

return off
end
function do_DataStoreSpecificMetaInfo(conn, tree, tvb, off, field_name)
local DataStoreSpecificMetaInfo_container = tree:add(F.DataStoreSpecificMetaInfo, tvb(off, 0))
	DataStoreSpecificMetaInfo_container:set_text("DataStoreSpecificMetaInfo")
	off = do_Structure(conn, DataStoreSpecificMetaInfo_container, tvb, off, 'DataStoreSpecificMetaInfo_Base')
off, DataStoreSpecificMetaInfo_dataId = do_Uint64(conn, DataStoreSpecificMetaInfo_container, tvb, off, 'DataStoreSpecificMetaInfo_dataId')
off, DataStoreSpecificMetaInfo_ownerId = do_PID(conn, DataStoreSpecificMetaInfo_container, tvb, off, 'DataStoreSpecificMetaInfo_ownerId')
off, DataStoreSpecificMetaInfo_size = do_Uint32(conn, DataStoreSpecificMetaInfo_container, tvb, off, 'DataStoreSpecificMetaInfo_size')
off, DataStoreSpecificMetaInfo_dataType = do_Uint16(conn, DataStoreSpecificMetaInfo_container, tvb, off, 'DataStoreSpecificMetaInfo_dataType')
off, DataStoreSpecificMetaInfo_version = do_Uint32(conn, DataStoreSpecificMetaInfo_container, tvb, off, 'DataStoreSpecificMetaInfo_version')

return off
end
function do_DataStoreTouchObjectParam(conn, tree, tvb, off, field_name)
local DataStoreTouchObjectParam_container = tree:add(F.DataStoreTouchObjectParam, tvb(off, 0))
	DataStoreTouchObjectParam_container:set_text("DataStoreTouchObjectParam")
	off = do_Structure(conn, DataStoreTouchObjectParam_container, tvb, off, 'DataStoreTouchObjectParam_Base')
off, DataStoreTouchObjectParam_dataId = do_Uint64(conn, DataStoreTouchObjectParam_container, tvb, off, 'DataStoreTouchObjectParam_dataId')
off, DataStoreTouchObjectParam_lockId = do_Uint32(conn, DataStoreTouchObjectParam_container, tvb, off, 'DataStoreTouchObjectParam_lockId')
off, DataStoreTouchObjectParam_accessPassword = do_Uint64(conn, DataStoreTouchObjectParam_container, tvb, off, 'DataStoreTouchObjectParam_accessPassword')

return off
end
function do_DataStoreRatingLog(conn, tree, tvb, off, field_name)
local DataStoreRatingLog_container = tree:add(F.DataStoreRatingLog, tvb(off, 0))
	DataStoreRatingLog_container:set_text("DataStoreRatingLog")
	off = do_Structure(conn, DataStoreRatingLog_container, tvb, off, 'DataStoreRatingLog_Base')
off, DataStoreRatingLog_isRated = do_Bool(conn, DataStoreRatingLog_container, tvb, off, 'DataStoreRatingLog_isRated')
off, DataStoreRatingLog_pid = do_Uint64(conn, DataStoreRatingLog_container, tvb, off, 'DataStoreRatingLog_pid')
off, DataStoreRatingLog_ratingValue = do_Sint32(conn, DataStoreRatingLog_container, tvb, off, 'DataStoreRatingLog_ratingValue')
off, DataStoreRatingLog_lockExpirationTime = do_DateTime(conn, DataStoreRatingLog_container, tvb, off, 'DataStoreRatingLog_lockExpirationTime')

return off
end
function do_DataStorePersistenceInfo(conn, tree, tvb, off, field_name)
local DataStorePersistenceInfo_container = tree:add(F.DataStorePersistenceInfo, tvb(off, 0))
	DataStorePersistenceInfo_container:set_text("DataStorePersistenceInfo")
	off = do_Structure(conn, DataStorePersistenceInfo_container, tvb, off, 'DataStorePersistenceInfo_Base')
off, DataStorePersistenceInfo_ownerId = do_Uint64(conn, DataStorePersistenceInfo_container, tvb, off, 'DataStorePersistenceInfo_ownerId')
off, DataStorePersistenceInfo_persistenceSlotId = do_Uint16(conn, DataStorePersistenceInfo_container, tvb, off, 'DataStorePersistenceInfo_persistenceSlotId')
off, DataStorePersistenceInfo_dataId = do_Uint64(conn, DataStorePersistenceInfo_container, tvb, off, 'DataStorePersistenceInfo_dataId')

return off
end
function do_DataStorePasswordInfo(conn, tree, tvb, off, field_name)
local DataStorePasswordInfo_container = tree:add(F.DataStorePasswordInfo, tvb(off, 0))
	DataStorePasswordInfo_container:set_text("DataStorePasswordInfo")
	off = do_Structure(conn, DataStorePasswordInfo_container, tvb, off, 'DataStorePasswordInfo_Base')
off, DataStorePasswordInfo_dataId = do_Uint64(conn, DataStorePasswordInfo_container, tvb, off, 'DataStorePasswordInfo_dataId')
off, DataStorePasswordInfo_accessPassword = do_Uint64(conn, DataStorePasswordInfo_container, tvb, off, 'DataStorePasswordInfo_accessPassword')
off, DataStorePasswordInfo_updatePassword = do_Uint64(conn, DataStorePasswordInfo_container, tvb, off, 'DataStorePasswordInfo_updatePassword')

return off
end
function do_BufferQueueParam(conn, tree, tvb, off, field_name)
local BufferQueueParam_container = tree:add(F.BufferQueueParam, tvb(off, 0))
	BufferQueueParam_container:set_text("BufferQueueParam")
	off = do_Structure(conn, BufferQueueParam_container, tvb, off, 'BufferQueueParam_Base')
off, BufferQueueParam_dataId = do_Uint64(conn, BufferQueueParam_container, tvb, off, 'BufferQueueParam_dataId')
off, BufferQueueParam_slot = do_Uint32(conn, BufferQueueParam_container, tvb, off, 'BufferQueueParam_slot')

return off
end
function do_DataStoreSearchBalloonParam(conn, tree, tvb, off, field_name)
local DataStoreSearchBalloonParam_container = tree:add(F.DataStoreSearchBalloonParam, tvb(off, 0))
	DataStoreSearchBalloonParam_container:set_text("DataStoreSearchBalloonParam")
	off = do_Structure(conn, DataStoreSearchBalloonParam_container, tvb, off, 'DataStoreSearchBalloonParam_Base')
off, DataStoreSearchBalloonParam_dataType = do_Uint16(conn, DataStoreSearchBalloonParam_container, tvb, off, 'DataStoreSearchBalloonParam_dataType')
off, DataStoreSearchBalloonParam_userRank = do_Uint8(conn, DataStoreSearchBalloonParam_container, tvb, off, 'DataStoreSearchBalloonParam_userRank')
off, DataStoreSearchBalloonParam_resultSetCount = do_Uint8(conn, DataStoreSearchBalloonParam_container, tvb, off, 'DataStoreSearchBalloonParam_resultSetCount')

return off
end
function do_DataStoreSearchBalloonResultSet(conn, tree, tvb, off, field_name)
local DataStoreSearchBalloonResultSet_container = tree:add(F.DataStoreSearchBalloonResultSet, tvb(off, 0))
	DataStoreSearchBalloonResultSet_container:set_text("DataStoreSearchBalloonResultSet")
	off = do_Structure(conn, DataStoreSearchBalloonResultSet_container, tvb, off, 'DataStoreSearchBalloonResultSet_Base')
-- list !! DataStoreSearchBalloonResult
	local DataStoreSearchBalloonResultSet_balloons_len = tvb(off, 4):le_uint()
	subDataStoreSearchBalloonResultSet_container = DataStoreSearchBalloonResultSet_container:add_le(F.DataStoreSearchBalloonResultSet_balloons_len, tvb(off,4))
	off = off + 4
	for i=1,DataStoreSearchBalloonResultSet_balloons_len do
	off = do_DataStoreSearchBalloonResult(conn, subDataStoreSearchBalloonResultSet_container, tvb, off, 'DataStoreSearchBalloonResultSet_balloons_item')

	end
	

return off
end
function do_DataStoreFetchMyInfosParam(conn, tree, tvb, off, field_name)
local DataStoreFetchMyInfosParam_container = tree:add(F.DataStoreFetchMyInfosParam, tvb(off, 0))
	DataStoreFetchMyInfosParam_container:set_text("DataStoreFetchMyInfosParam")
	off = do_Structure(conn, DataStoreFetchMyInfosParam_container, tvb, off, 'DataStoreFetchMyInfosParam_Base')
-- list !! Uint16
	local DataStoreFetchMyInfosParam_balloonDataTypes_len = tvb(off, 4):le_uint()
	subDataStoreFetchMyInfosParam_container = DataStoreFetchMyInfosParam_container:add_le(F.DataStoreFetchMyInfosParam_balloonDataTypes_len, tvb(off,4))
	off = off + 4
	for i=1,DataStoreFetchMyInfosParam_balloonDataTypes_len do
	off, DataStoreFetchMyInfosParam_balloonDataTypes_item = do_Uint16(conn, subDataStoreFetchMyInfosParam_container, tvb, off, 'DataStoreFetchMyInfosParam_balloonDataTypes_item')

	end
	
off, DataStoreFetchMyInfosParam_additionalOperation = do_Uint16(conn, DataStoreFetchMyInfosParam_container, tvb, off, 'DataStoreFetchMyInfosParam_additionalOperation')

return off
end
function do_DataStoreFetchMyInfosResult(conn, tree, tvb, off, field_name)
local DataStoreFetchMyInfosResult_container = tree:add(F.DataStoreFetchMyInfosResult, tvb(off, 0))
	DataStoreFetchMyInfosResult_container:set_text("DataStoreFetchMyInfosResult")
	off = do_Structure(conn, DataStoreFetchMyInfosResult_container, tvb, off, 'DataStoreFetchMyInfosResult_Base')
-- list !! DataStoreFetchMyInfosBalloonResult
	local DataStoreFetchMyInfosResult_balloons_len = tvb(off, 4):le_uint()
	subDataStoreFetchMyInfosResult_container = DataStoreFetchMyInfosResult_container:add_le(F.DataStoreFetchMyInfosResult_balloons_len, tvb(off,4))
	off = off + 4
	for i=1,DataStoreFetchMyInfosResult_balloons_len do
	off = do_DataStoreFetchMyInfosBalloonResult(conn, subDataStoreFetchMyInfosResult_container, tvb, off, 'DataStoreFetchMyInfosResult_balloons_item')

	end
	
off = do_DataStoreFetchMyInfosAchievementResult(conn, DataStoreFetchMyInfosResult_container, tvb, off, 'DataStoreFetchMyInfosResult_achievement')

return off
end
function do_UniqueIdInfo(conn, tree, tvb, off, field_name)
local UniqueIdInfo_container = tree:add(F.UniqueIdInfo, tvb(off, 0))
	UniqueIdInfo_container:set_text("UniqueIdInfo")
	off = do_Structure(conn, UniqueIdInfo_container, tvb, off, 'UniqueIdInfo_Base')
off, UniqueIdInfo_nexUniqueId = do_Uint64(conn, UniqueIdInfo_container, tvb, off, 'UniqueIdInfo_nexUniqueId')
off, UniqueIdInfo_nexUniqueIdPassword = do_Uint64(conn, UniqueIdInfo_container, tvb, off, 'UniqueIdInfo_nexUniqueIdPassword')

return off
end
function do_RankingOrderParam(conn, tree, tvb, off, field_name)
local RankingOrderParam_container = tree:add(F.RankingOrderParam, tvb(off, 0))
	RankingOrderParam_container:set_text("RankingOrderParam")
	off = do_Structure(conn, RankingOrderParam_container, tvb, off, 'RankingOrderParam_Base')
off, RankingOrderParam_orderCalculation = do_Uint8(conn, RankingOrderParam_container, tvb, off, 'RankingOrderParam_orderCalculation')
off, RankingOrderParam_groupIndex = do_Uint8(conn, RankingOrderParam_container, tvb, off, 'RankingOrderParam_groupIndex')
off, RankingOrderParam_groupNum = do_Uint8(conn, RankingOrderParam_container, tvb, off, 'RankingOrderParam_groupNum')
off, RankingOrderParam_timeScope = do_Uint8(conn, RankingOrderParam_container, tvb, off, 'RankingOrderParam_timeScope')
off, RankingOrderParam_offset = do_Uint32(conn, RankingOrderParam_container, tvb, off, 'RankingOrderParam_offset')
off, RankingOrderParam_length = do_Uint8(conn, RankingOrderParam_container, tvb, off, 'RankingOrderParam_length')

return off
end
function do_RankingResult(conn, tree, tvb, off, field_name)
local RankingResult_container = tree:add(F.RankingResult, tvb(off, 0))
	RankingResult_container:set_text("RankingResult")
	off = do_Structure(conn, RankingResult_container, tvb, off, 'RankingResult_Base')
-- list !! RankingRankData
	local RankingResult_rankDataList_len = tvb(off, 4):le_uint()
	subRankingResult_container = RankingResult_container:add_le(F.RankingResult_rankDataList_len, tvb(off,4))
	off = off + 4
	for i=1,RankingResult_rankDataList_len do
	off = do_RankingRankData(conn, subRankingResult_container, tvb, off, 'RankingResult_rankDataList_item')

	end
	
off, RankingResult_totalCount = do_Uint32(conn, RankingResult_container, tvb, off, 'RankingResult_totalCount')
off, RankingResult_sinceTime = do_DateTime(conn, RankingResult_container, tvb, off, 'RankingResult_sinceTime')

return off
end
function do_RankingCachedResult(conn, tree, tvb, off, field_name)
local RankingCachedResult_container = tree:add(F.RankingCachedResult, tvb(off, 0))
	RankingCachedResult_container:set_text("RankingCachedResult")
	off, RankingCachedResult_createdTime = do_DateTime(conn, RankingCachedResult_container, tvb, off, 'RankingCachedResult_createdTime')
off, RankingCachedResult_expiredTime = do_DateTime(conn, RankingCachedResult_container, tvb, off, 'RankingCachedResult_expiredTime')
off, RankingCachedResult_maxLength = do_Uint8(conn, RankingCachedResult_container, tvb, off, 'RankingCachedResult_maxLength')

return off
end
function do_RankingStats(conn, tree, tvb, off, field_name)
local RankingStats_container = tree:add(F.RankingStats, tvb(off, 0))
	RankingStats_container:set_text("RankingStats")
	off = do_Structure(conn, RankingStats_container, tvb, off, 'RankingStats_Base')
-- list !! Double
	local RankingStats_statsList_len = tvb(off, 4):le_uint()
	subRankingStats_container = RankingStats_container:add_le(F.RankingStats_statsList_len, tvb(off,4))
	off = off + 4
	for i=1,RankingStats_statsList_len do
	off, RankingStats_statsList_item = do_Double(conn, subRankingStats_container, tvb, off, 'RankingStats_statsList_item')

	end
	

return off
end
function do_RankingScoreData(conn, tree, tvb, off, field_name)
local RankingScoreData_container = tree:add(F.RankingScoreData, tvb(off, 0))
	RankingScoreData_container:set_text("RankingScoreData")
	off = do_Structure(conn, RankingScoreData_container, tvb, off, 'RankingScoreData_Base')
off, RankingScoreData_principalId = do_PID(conn, RankingScoreData_container, tvb, off, 'RankingScoreData_principalId')
off, RankingScoreData_uniqueId = do_Uint64(conn, RankingScoreData_container, tvb, off, 'RankingScoreData_uniqueId')
off, RankingScoreData_order = do_Uint32(conn, RankingScoreData_container, tvb, off, 'RankingScoreData_order')
off, RankingScoreData_category = do_Uint32(conn, RankingScoreData_container, tvb, off, 'RankingScoreData_category')
off, RankingScoreData_score = do_Uint32(conn, RankingScoreData_container, tvb, off, 'RankingScoreData_score')
-- list !! byte
	local RankingScoreData_groups_len = tvb(off, 4):le_uint()
	subRankingScoreData_container = RankingScoreData_container:add_le(F.RankingScoreData_groups_len, tvb(off,4))
	off = off + 4
	for i=1,RankingScoreData_groups_len do
	off, RankingScoreData_groups_item = do_byte(conn, subRankingScoreData_container, tvb, off, 'RankingScoreData_groups_item')

	end
	
off, RankingScoreData_param = do_Uint64(conn, RankingScoreData_container, tvb, off, 'RankingScoreData_param')
off, RankingScoreData_commonData = do_Buffer(conn, RankingScoreData_container, tvb, off, 'RankingScoreData_commonData')

return off
end
function do_RankingChangeAttributesParam(conn, tree, tvb, off, field_name)
local RankingChangeAttributesParam_container = tree:add(F.RankingChangeAttributesParam, tvb(off, 0))
	RankingChangeAttributesParam_container:set_text("RankingChangeAttributesParam")
	off = do_Structure(conn, RankingChangeAttributesParam_container, tvb, off, 'RankingChangeAttributesParam_Base')
off, RankingChangeAttributesParam_modificationFlag = do_Uint8(conn, RankingChangeAttributesParam_container, tvb, off, 'RankingChangeAttributesParam_modificationFlag')
-- list !! Uint8
	local RankingChangeAttributesParam_groups_len = tvb(off, 4):le_uint()
	subRankingChangeAttributesParam_container = RankingChangeAttributesParam_container:add_le(F.RankingChangeAttributesParam_groups_len, tvb(off,4))
	off = off + 4
	for i=1,RankingChangeAttributesParam_groups_len do
	off, RankingChangeAttributesParam_groups_item = do_Uint8(conn, subRankingChangeAttributesParam_container, tvb, off, 'RankingChangeAttributesParam_groups_item')

	end
	
off, RankingChangeAttributesParam_param = do_Uint64(conn, RankingChangeAttributesParam_container, tvb, off, 'RankingChangeAttributesParam_param')

return off
end
function do_FriendMii(conn, tree, tvb, off, field_name)
local FriendMii_container = tree:add(F.FriendMii, tvb(off, 0))
	FriendMii_container:set_text("FriendMii")
	off, FriendMii_Unknown = do_Uint32(conn, FriendMii_container, tvb, off, 'FriendMii_Unknown')
off = do_Mii(conn, FriendMii_container, tvb, off, 'FriendMii_Mii')
off, FriendMii_Unknown2 = do_DateTime(conn, FriendMii_container, tvb, off, 'FriendMii_Unknown2')

return off
end
function do_FriendMiiList(conn, tree, tvb, off, field_name)
local FriendMiiList_container = tree:add(F.FriendMiiList, tvb(off, 0))
	FriendMiiList_container:set_text("FriendMiiList")
	off, FriendMiiList_Unknown = do_Uint32(conn, FriendMiiList_container, tvb, off, 'FriendMiiList_Unknown')
off = do_MiiList(conn, FriendMiiList_container, tvb, off, 'FriendMiiList_Mii_list')
off, FriendMiiList_Unknown2 = do_DateTime(conn, FriendMiiList_container, tvb, off, 'FriendMiiList_Unknown2')

return off
end
function do_FriendMiiRequest(conn, tree, tvb, off, field_name)
local FriendMiiRequest_container = tree:add(F.FriendMiiRequest, tvb(off, 0))
	FriendMiiRequest_container:set_text("FriendMiiRequest")
	off, FriendMiiRequest_Unknown = do_Uint32(conn, FriendMiiRequest_container, tvb, off, 'FriendMiiRequest_Unknown')
off, FriendMiiRequest_Unknown2 = do_DateTime(conn, FriendMiiRequest_container, tvb, off, 'FriendMiiRequest_Unknown2')

return off
end
function do_FriendPersistentInfo(conn, tree, tvb, off, field_name)
local FriendPersistentInfo_container = tree:add(F.FriendPersistentInfo, tvb(off, 0))
	FriendPersistentInfo_container:set_text("FriendPersistentInfo")
	off, FriendPersistentInfo_Unknown = do_Uint32(conn, FriendPersistentInfo_container, tvb, off, 'FriendPersistentInfo_Unknown')
off, FriendPersistentInfo_Region = do_Uint8(conn, FriendPersistentInfo_container, tvb, off, 'FriendPersistentInfo_Region')
off, FriendPersistentInfo_Country = do_Uint8(conn, FriendPersistentInfo_container, tvb, off, 'FriendPersistentInfo_Country')
off, FriendPersistentInfo_Area = do_Uint8(conn, FriendPersistentInfo_container, tvb, off, 'FriendPersistentInfo_Area')
off, FriendPersistentInfo_Language = do_Uint8(conn, FriendPersistentInfo_container, tvb, off, 'FriendPersistentInfo_Language')
off, FriendPersistentInfo_Platform = do_Uint8(conn, FriendPersistentInfo_container, tvb, off, 'FriendPersistentInfo_Platform')
off = do_GameKey(conn, FriendPersistentInfo_container, tvb, off, 'FriendPersistentInfo_Game_key')
off, FriendPersistentInfo_Unknown2 = do_String(conn, FriendPersistentInfo_container, tvb, off, 'FriendPersistentInfo_Unknown2')
off, FriendPersistentInfo_Unknown3 = do_DateTime(conn, FriendPersistentInfo_container, tvb, off, 'FriendPersistentInfo_Unknown3')
off, FriendPersistentInfo_Unknown4 = do_DateTime(conn, FriendPersistentInfo_container, tvb, off, 'FriendPersistentInfo_Unknown4')
off, FriendPersistentInfo_Unknown5 = do_DateTime(conn, FriendPersistentInfo_container, tvb, off, 'FriendPersistentInfo_Unknown5')

return off
end
function do_FriendPicture(conn, tree, tvb, off, field_name)
local FriendPicture_container = tree:add(F.FriendPicture, tvb(off, 0))
	FriendPicture_container:set_text("FriendPicture")
	off, FriendPicture_Unknown = do_Uint32(conn, FriendPicture_container, tvb, off, 'FriendPicture_Unknown')
off, FriendPicture_Data = do_Buffer(conn, FriendPicture_container, tvb, off, 'FriendPicture_Data')
off, FriendPicture_Date_time = do_DateTime(conn, FriendPicture_container, tvb, off, 'FriendPicture_Date_time')

return off
end
function do_FriendPresence(conn, tree, tvb, off, field_name)
local FriendPresence_container = tree:add(F.FriendPresence, tvb(off, 0))
	FriendPresence_container:set_text("FriendPresence")
	off, FriendPresence_Unknown = do_Uint32(conn, FriendPresence_container, tvb, off, 'FriendPresence_Unknown')
off = do_NintendoPresence(conn, FriendPresence_container, tvb, off, 'FriendPresence_Nintendo_presence')

return off
end
function do_FriendRelationship(conn, tree, tvb, off, field_name)
local FriendRelationship_container = tree:add(F.FriendRelationship, tvb(off, 0))
	FriendRelationship_container:set_text("FriendRelationship")
	off, FriendRelationship_Unknown = do_Uint32(conn, FriendRelationship_container, tvb, off, 'FriendRelationship_Unknown')
off, FriendRelationship_Unknown2 = do_Uint64(conn, FriendRelationship_container, tvb, off, 'FriendRelationship_Unknown2')
off, FriendRelationship_Unknown3 = do_Uint8(conn, FriendRelationship_container, tvb, off, 'FriendRelationship_Unknown3')

return off
end
function do_MyProfile(conn, tree, tvb, off, field_name)
local MyProfile_container = tree:add(F.MyProfile, tvb(off, 0))
	MyProfile_container:set_text("MyProfile")
	off, MyProfile_Region = do_Uint8(conn, MyProfile_container, tvb, off, 'MyProfile_Region')
off, MyProfile_Country = do_Uint8(conn, MyProfile_container, tvb, off, 'MyProfile_Country')
off, MyProfile_Area = do_Uint8(conn, MyProfile_container, tvb, off, 'MyProfile_Area')
off, MyProfile_Language = do_Uint8(conn, MyProfile_container, tvb, off, 'MyProfile_Language')
off, MyProfile_Platform = do_Uint8(conn, MyProfile_container, tvb, off, 'MyProfile_Platform')
off, MyProfile_Unknown = do_Uint64(conn, MyProfile_container, tvb, off, 'MyProfile_Unknown')
off, MyProfile_Unknown2 = do_String(conn, MyProfile_container, tvb, off, 'MyProfile_Unknown2')
off, MyProfile_Unknown3 = do_String(conn, MyProfile_container, tvb, off, 'MyProfile_Unknown3')

return off
end
function do_PlayedGame(conn, tree, tvb, off, field_name)
local PlayedGame_container = tree:add(F.PlayedGame, tvb(off, 0))
	PlayedGame_container:set_text("PlayedGame")
	off = do_GameKey(conn, PlayedGame_container, tvb, off, 'PlayedGame_Game_key')
off, PlayedGame_Date_time = do_DateTime(conn, PlayedGame_container, tvb, off, 'PlayedGame_Date_time')

return off
end
function do_RVConnectionData(conn, tree, tvb, off, field_name)
local RVConnectionData_container = tree:add(F.RVConnectionData, tvb(off, 0))
	RVConnectionData_container:set_text("RVConnectionData")
	off = do_Structure(conn, RVConnectionData_container, tvb, off, 'RVConnectionData_Base')
off, RVConnectionData_m_urlRegularProtocols = do_StationURL(conn, RVConnectionData_container, tvb, off, 'RVConnectionData_m_urlRegularProtocols')
-- list !! byte
	local RVConnectionData_m_lstSpecialProtocols_len = tvb(off, 4):le_uint()
	subRVConnectionData_container = RVConnectionData_container:add_le(F.RVConnectionData_m_lstSpecialProtocols_len, tvb(off,4))
	off = off + 4
	for i=1,RVConnectionData_m_lstSpecialProtocols_len do
	off, RVConnectionData_m_lstSpecialProtocols_item = do_byte(conn, subRVConnectionData_container, tvb, off, 'RVConnectionData_m_lstSpecialProtocols_item')

	end
	
off, RVConnectionData_m_urlSpecialProtocols = do_StationURL(conn, RVConnectionData_container, tvb, off, 'RVConnectionData_m_urlSpecialProtocols')

return off
end
function do_NintendoNotificationEvent(conn, tree, tvb, off, field_name)
local NintendoNotificationEvent_container = tree:add(F.NintendoNotificationEvent, tvb(off, 0))
	NintendoNotificationEvent_container:set_text("NintendoNotificationEvent")
	off = do_Structure(conn, NintendoNotificationEvent_container, tvb, off, 'NintendoNotificationEvent_Base')
off, NintendoNotificationEvent_m_uiType = do_Uint32(conn, NintendoNotificationEvent_container, tvb, off, 'NintendoNotificationEvent_m_uiType')
off, NintendoNotificationEvent_m_pidSender = do_PID(conn, NintendoNotificationEvent_container, tvb, off, 'NintendoNotificationEvent_m_pidSender')

		local NintendoNotificationEvent_m_dataholder_container = NintendoNotificationEvent_container:add(F.Data, tvb(off, 0))
		NintendoNotificationEvent_m_dataholder_container:set_text("Data")
	off, NintendoNotificationEvent_m_dataholder_type_name = do_String(conn, NintendoNotificationEvent_m_dataholder_container, tvb, off, 'NintendoNotificationEvent_m_dataholder_type_name')

off, NintendoNotificationEvent_m_dataholder_len_plus_four = do_Uint32(conn, NintendoNotificationEvent_m_dataholder_container, tvb, off, 'NintendoNotificationEvent_m_dataholder_len_plus_four')

off, NintendoNotificationEvent_m_dataholder_data_len = do_Uint32(conn, NintendoNotificationEvent_m_dataholder_container, tvb, off, 'NintendoNotificationEvent_m_dataholder_data_len')

local type_func = 'do_'..NintendoNotificationEvent_m_dataholder_type_name
		if _G[type_func] ~= nil then
			off = _G[type_func](conn, NintendoNotificationEvent_m_dataholder_container, tvb, off, "NintendoNotificationEvent_m_dataholder_data")
		else
			NintendoNotificationEvent_m_dataholder_container:add(F.NintendoNotificationEvent_m_dataholder_data_bytes, tvb(off, NintendoNotificationEvent_m_dataholder_len))
			off = off + NintendoNotificationEvent_m_dataholder_data_len
		end
	

return off
end
function do_NintendoNotificationEventGeneral(conn, tree, tvb, off, field_name)
local NintendoNotificationEventGeneral_container = tree:add(F.NintendoNotificationEventGeneral, tvb(off, 0))
	NintendoNotificationEventGeneral_container:set_text("NintendoNotificationEventGeneral")
	off = do_Structure(conn, NintendoNotificationEventGeneral_container, tvb, off, 'NintendoNotificationEventGeneral_Base')
off, NintendoNotificationEventGeneral_m_u32Param = do_Uint32(conn, NintendoNotificationEventGeneral_container, tvb, off, 'NintendoNotificationEventGeneral_m_u32Param')
off, NintendoNotificationEventGeneral_m_u64Param1 = do_Uint64(conn, NintendoNotificationEventGeneral_container, tvb, off, 'NintendoNotificationEventGeneral_m_u64Param1')
off, NintendoNotificationEventGeneral_m_u64Param2 = do_Uint64(conn, NintendoNotificationEventGeneral_container, tvb, off, 'NintendoNotificationEventGeneral_m_u64Param2')
off, NintendoNotificationEventGeneral_m_strParam = do_String(conn, NintendoNotificationEventGeneral_container, tvb, off, 'NintendoNotificationEventGeneral_m_strParam')

return off
end
function do_NintendoNotificationEventProfile(conn, tree, tvb, off, field_name)
local NintendoNotificationEventProfile_container = tree:add(F.NintendoNotificationEventProfile, tvb(off, 0))
	NintendoNotificationEventProfile_container:set_text("NintendoNotificationEventProfile")
	off = do_Structure(conn, NintendoNotificationEventProfile_container, tvb, off, 'NintendoNotificationEventProfile_Base')
off, NintendoNotificationEventProfile_m_region = do_Uint8(conn, NintendoNotificationEventProfile_container, tvb, off, 'NintendoNotificationEventProfile_m_region')
off, NintendoNotificationEventProfile_m_country = do_Uint8(conn, NintendoNotificationEventProfile_container, tvb, off, 'NintendoNotificationEventProfile_m_country')
off, NintendoNotificationEventProfile_m_area = do_Uint8(conn, NintendoNotificationEventProfile_container, tvb, off, 'NintendoNotificationEventProfile_m_area')
off, NintendoNotificationEventProfile_m_language = do_Uint8(conn, NintendoNotificationEventProfile_container, tvb, off, 'NintendoNotificationEventProfile_m_language')
off, NintendoNotificationEventProfile_m_platform = do_Uint8(conn, NintendoNotificationEventProfile_container, tvb, off, 'NintendoNotificationEventProfile_m_platform')

return off
end
function do_BlacklistedPrincipal(conn, tree, tvb, off, field_name)
local BlacklistedPrincipal_container = tree:add(F.BlacklistedPrincipal, tvb(off, 0))
	BlacklistedPrincipal_container:set_text("BlacklistedPrincipal")
	off = do_PrincipalBasicInfo(conn, BlacklistedPrincipal_container, tvb, off, 'BlacklistedPrincipal_Principal_basic_info')
off = do_GameKey(conn, BlacklistedPrincipal_container, tvb, off, 'BlacklistedPrincipal_Game_key')
off, BlacklistedPrincipal_Blacklisted_since = do_DateTime(conn, BlacklistedPrincipal_container, tvb, off, 'BlacklistedPrincipal_Blacklisted_since')

return off
end
function do_FriendInfo(conn, tree, tvb, off, field_name)
local FriendInfo_container = tree:add(F.FriendInfo, tvb(off, 0))
	FriendInfo_container:set_text("FriendInfo")
	off = do_NNAInfo(conn, FriendInfo_container, tvb, off, 'FriendInfo_NNA_Info')
off = do_NintendoPresenceV2(conn, FriendInfo_container, tvb, off, 'FriendInfo_Nintendo_presence')
off = do_Comment(conn, FriendInfo_container, tvb, off, 'FriendInfo_Status_message')
off, FriendInfo_Became_friend = do_DateTime(conn, FriendInfo_container, tvb, off, 'FriendInfo_Became_friend')
off, FriendInfo_Last_online = do_DateTime(conn, FriendInfo_container, tvb, off, 'FriendInfo_Last_online')
off, FriendInfo_Unknown = do_Uint64(conn, FriendInfo_container, tvb, off, 'FriendInfo_Unknown')

return off
end
function do_FriendRequest(conn, tree, tvb, off, field_name)
local FriendRequest_container = tree:add(F.FriendRequest, tvb(off, 0))
	FriendRequest_container:set_text("FriendRequest")
	off = do_PrincipalBasicInfo(conn, FriendRequest_container, tvb, off, 'FriendRequest_Principal_basic_info')
off = do_FriendRequestMessage(conn, FriendRequest_container, tvb, off, 'FriendRequest_Message')
off, FriendRequest_Sent_on = do_DateTime(conn, FriendRequest_container, tvb, off, 'FriendRequest_Sent_on')

return off
end
function do_PersistentNotification(conn, tree, tvb, off, field_name)
local PersistentNotification_container = tree:add(F.PersistentNotification, tvb(off, 0))
	PersistentNotification_container:set_text("PersistentNotification")
	off, PersistentNotification_Unknown = do_Uint64(conn, PersistentNotification_container, tvb, off, 'PersistentNotification_Unknown')
off, PersistentNotification_Unknown2 = do_Uint32(conn, PersistentNotification_container, tvb, off, 'PersistentNotification_Unknown2')
off, PersistentNotification_Unknown3 = do_Uint32(conn, PersistentNotification_container, tvb, off, 'PersistentNotification_Unknown3')
off, PersistentNotification_Unknown4 = do_Uint32(conn, PersistentNotification_container, tvb, off, 'PersistentNotification_Unknown4')
off, PersistentNotification_Unknown5 = do_String(conn, PersistentNotification_container, tvb, off, 'PersistentNotification_Unknown5')

return off
end
function do_PrincipalPreference(conn, tree, tvb, off, field_name)
local PrincipalPreference_container = tree:add(F.PrincipalPreference, tvb(off, 0))
	PrincipalPreference_container:set_text("PrincipalPreference")
	off, PrincipalPreference_Unknown = do_Bool(conn, PrincipalPreference_container, tvb, off, 'PrincipalPreference_Unknown')
off, PrincipalPreference_Unknown2 = do_Bool(conn, PrincipalPreference_container, tvb, off, 'PrincipalPreference_Unknown2')
off, PrincipalPreference_Unknown3 = do_Bool(conn, PrincipalPreference_container, tvb, off, 'PrincipalPreference_Unknown3')

return off
end
function do_PrincipalRequestBlockSetting(conn, tree, tvb, off, field_name)
local PrincipalRequestBlockSetting_container = tree:add(F.PrincipalRequestBlockSetting, tvb(off, 0))
	PrincipalRequestBlockSetting_container:set_text("PrincipalRequestBlockSetting")
	off, PrincipalRequestBlockSetting_Unknown = do_Uint32(conn, PrincipalRequestBlockSetting_container, tvb, off, 'PrincipalRequestBlockSetting_Unknown')
off, PrincipalRequestBlockSetting_Unknown2 = do_Bool(conn, PrincipalRequestBlockSetting_container, tvb, off, 'PrincipalRequestBlockSetting_Unknown2')

return off
end
function do_FriendData(conn, tree, tvb, off, field_name)
local FriendData_container = tree:add(F.FriendData, tvb(off, 0))
	FriendData_container:set_text("FriendData")
	off, FriendData_m_pid = do_Uint32(conn, FriendData_container, tvb, off, 'FriendData_m_pid')
off, FriendData_m_strName = do_String(conn, FriendData_container, tvb, off, 'FriendData_m_strName')
off, FriendData_m_byRelationship = do_Uint8(conn, FriendData_container, tvb, off, 'FriendData_m_byRelationship')
off, FriendData_m_uiDetails = do_Uint32(conn, FriendData_container, tvb, off, 'FriendData_m_uiDetails')
off, FriendData_m_strStatus = do_String(conn, FriendData_container, tvb, off, 'FriendData_m_strStatus')

return off
end
function do_RelationshipData(conn, tree, tvb, off, field_name)
local RelationshipData_container = tree:add(F.RelationshipData, tvb(off, 0))
	RelationshipData_container:set_text("RelationshipData")
	off, RelationshipData_m_pid = do_Uint32(conn, RelationshipData_container, tvb, off, 'RelationshipData_m_pid')
off, RelationshipData_m_strName = do_String(conn, RelationshipData_container, tvb, off, 'RelationshipData_m_strName')
off, RelationshipData_m_byRelationship = do_Uint8(conn, RelationshipData_container, tvb, off, 'RelationshipData_m_byRelationship')
off, RelationshipData_m_uiDetails = do_Uint32(conn, RelationshipData_container, tvb, off, 'RelationshipData_m_uiDetails')
off, RelationshipData_m_byStatus = do_Uint8(conn, RelationshipData_container, tvb, off, 'RelationshipData_m_byStatus')

return off
end
local info = {
[0x15] =
	{
		["name"] = "Match Making",
		["methods"] = {
[1] = {
				["name"] = "RegisterGathering",
				["request"] = function (conn, tree, tvb)
	local off = 0

		local Match_Making_RegisterGathering_anyGathering_container = tree:add(F.Data, tvb(off, 0))
		Match_Making_RegisterGathering_anyGathering_container:set_text("Data<Gathering>")
	off, Match_Making_RegisterGathering_anyGathering_type_name = do_String(conn, Match_Making_RegisterGathering_anyGathering_container, tvb, off, 'Match_Making_RegisterGathering_anyGathering_type_name')

off, Match_Making_RegisterGathering_anyGathering_len_plus_four = do_Uint32(conn, Match_Making_RegisterGathering_anyGathering_container, tvb, off, 'Match_Making_RegisterGathering_anyGathering_len_plus_four')

off, Match_Making_RegisterGathering_anyGathering_data_len = do_Uint32(conn, Match_Making_RegisterGathering_anyGathering_container, tvb, off, 'Match_Making_RegisterGathering_anyGathering_data_len')

local type_func = 'do_'..Match_Making_RegisterGathering_anyGathering_type_name
		if _G[type_func] ~= nil then
			off = _G[type_func](conn, Match_Making_RegisterGathering_anyGathering_container, tvb, off, "Match_Making_RegisterGathering_anyGathering_data")
		else
			Match_Making_RegisterGathering_anyGathering_container:add(F.Match_Making_RegisterGathering_anyGathering_data_bytes, tvb(off, Match_Making_RegisterGathering_anyGathering_len))
			off = off + Match_Making_RegisterGathering_anyGathering_data_len
		end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Match_Making_RegisterGathering_retval = do_Uint32(conn, tree, tvb, off, 'Match_Making_RegisterGathering_retval')
 end
			},
			[2] = {
				["name"] = "UnregisterGathering",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Match_Making_UnregisterGathering_idGathering = do_Uint32(conn, tree, tvb, off, 'Match_Making_UnregisterGathering_idGathering')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Match_Making_UnregisterGathering_retval = do_Bool(conn, tree, tvb, off, 'Match_Making_UnregisterGathering_retval')
 end
			},
			[3] = {
				["name"] = "UnregisterGatherings",
				["request"] = function (conn, tree, tvb)
	local off = 0
-- list !! Uint32
	local Match_Making_UnregisterGatherings_lstGatherings_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Match_Making_UnregisterGatherings_lstGatherings_len, tvb(off,4))
	off = off + 4
	for i=1,Match_Making_UnregisterGatherings_lstGatherings_len do
	off, Match_Making_UnregisterGatherings_lstGatherings_item = do_Uint32(conn, subtree, tvb, off, 'Match_Making_UnregisterGatherings_lstGatherings_item')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Match_Making_UnregisterGatherings_retval = do_Bool(conn, tree, tvb, off, 'Match_Making_UnregisterGatherings_retval')
 end
			},
			[4] = {
				["name"] = "UpdateGathering",
				["request"] = function (conn, tree, tvb)
	local off = 0

		local Match_Making_UpdateGathering_anyGathering_container = tree:add(F.Data, tvb(off, 0))
		Match_Making_UpdateGathering_anyGathering_container:set_text("Data<Gathering>")
	off, Match_Making_UpdateGathering_anyGathering_type_name = do_String(conn, Match_Making_UpdateGathering_anyGathering_container, tvb, off, 'Match_Making_UpdateGathering_anyGathering_type_name')

off, Match_Making_UpdateGathering_anyGathering_len_plus_four = do_Uint32(conn, Match_Making_UpdateGathering_anyGathering_container, tvb, off, 'Match_Making_UpdateGathering_anyGathering_len_plus_four')

off, Match_Making_UpdateGathering_anyGathering_data_len = do_Uint32(conn, Match_Making_UpdateGathering_anyGathering_container, tvb, off, 'Match_Making_UpdateGathering_anyGathering_data_len')

local type_func = 'do_'..Match_Making_UpdateGathering_anyGathering_type_name
		if _G[type_func] ~= nil then
			off = _G[type_func](conn, Match_Making_UpdateGathering_anyGathering_container, tvb, off, "Match_Making_UpdateGathering_anyGathering_data")
		else
			Match_Making_UpdateGathering_anyGathering_container:add(F.Match_Making_UpdateGathering_anyGathering_data_bytes, tvb(off, Match_Making_UpdateGathering_anyGathering_len))
			off = off + Match_Making_UpdateGathering_anyGathering_data_len
		end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Match_Making_UpdateGathering_retval = do_Bool(conn, tree, tvb, off, 'Match_Making_UpdateGathering_retval')
 end
			},
			[5] = {
				["name"] = "Invite",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Match_Making_Invite_idGathering = do_Uint32(conn, tree, tvb, off, 'Match_Making_Invite_idGathering')
-- list !! PID
	local Match_Making_Invite_lstPrincipals_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Match_Making_Invite_lstPrincipals_len, tvb(off,4))
	off = off + 4
	for i=1,Match_Making_Invite_lstPrincipals_len do
	off, Match_Making_Invite_lstPrincipals_item = do_PID(conn, subtree, tvb, off, 'Match_Making_Invite_lstPrincipals_item')

	end
	
off, Match_Making_Invite_strMessage = do_String(conn, tree, tvb, off, 'Match_Making_Invite_strMessage')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Match_Making_Invite_retval = do_Bool(conn, tree, tvb, off, 'Match_Making_Invite_retval')
 end
			},
			[6] = {
				["name"] = "AcceptInvitation",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Match_Making_AcceptInvitation_idGathering = do_Uint32(conn, tree, tvb, off, 'Match_Making_AcceptInvitation_idGathering')
off, Match_Making_AcceptInvitation_strMessage = do_String(conn, tree, tvb, off, 'Match_Making_AcceptInvitation_strMessage')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Match_Making_AcceptInvitation_retval = do_Bool(conn, tree, tvb, off, 'Match_Making_AcceptInvitation_retval')
 end
			},
			[7] = {
				["name"] = "DeclineInvitation",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Match_Making_DeclineInvitation_idGathering = do_Uint32(conn, tree, tvb, off, 'Match_Making_DeclineInvitation_idGathering')
off, Match_Making_DeclineInvitation_strMessage = do_String(conn, tree, tvb, off, 'Match_Making_DeclineInvitation_strMessage')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Match_Making_DeclineInvitation_retval = do_Bool(conn, tree, tvb, off, 'Match_Making_DeclineInvitation_retval')
 end
			},
			[8] = {
				["name"] = "CancelInvitation",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Match_Making_CancelInvitation_idGathering = do_Uint32(conn, tree, tvb, off, 'Match_Making_CancelInvitation_idGathering')
-- list !! PID
	local Match_Making_CancelInvitation_lstPrincipals_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Match_Making_CancelInvitation_lstPrincipals_len, tvb(off,4))
	off = off + 4
	for i=1,Match_Making_CancelInvitation_lstPrincipals_len do
	off, Match_Making_CancelInvitation_lstPrincipals_item = do_PID(conn, subtree, tvb, off, 'Match_Making_CancelInvitation_lstPrincipals_item')

	end
	
off, Match_Making_CancelInvitation_strMessage = do_String(conn, tree, tvb, off, 'Match_Making_CancelInvitation_strMessage')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Match_Making_CancelInvitation_retval = do_Bool(conn, tree, tvb, off, 'Match_Making_CancelInvitation_retval')
 end
			},
			[9] = {
				["name"] = "GetInvitationsSent",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Match_Making_GetInvitationsSent_idGathering = do_Uint32(conn, tree, tvb, off, 'Match_Making_GetInvitationsSent_idGathering')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
-- list !! Invitation
	local Match_Making_GetInvitationsSent_lstInvitations_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Match_Making_GetInvitationsSent_lstInvitations_len, tvb(off,4))
	off = off + 4
	for i=1,Match_Making_GetInvitationsSent_lstInvitations_len do
	off = do_Invitation(conn, subtree, tvb, off, 'Match_Making_GetInvitationsSent_lstInvitations_item')

	end
	
 end
			},
			[10] = {
				["name"] = "GetInvitationsReceived",
				["request"] = function (conn, tree, tvb)
	local off = 0
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
-- list !! Invitation
	local Match_Making_GetInvitationsReceived_lstInvitations_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Match_Making_GetInvitationsReceived_lstInvitations_len, tvb(off,4))
	off = off + 4
	for i=1,Match_Making_GetInvitationsReceived_lstInvitations_len do
	off = do_Invitation(conn, subtree, tvb, off, 'Match_Making_GetInvitationsReceived_lstInvitations_item')

	end
	
 end
			},
			[11] = {
				["name"] = "Participate",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Match_Making_Participate_idGathering = do_Uint32(conn, tree, tvb, off, 'Match_Making_Participate_idGathering')
off, Match_Making_Participate_strMessage = do_String(conn, tree, tvb, off, 'Match_Making_Participate_strMessage')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Match_Making_Participate_retval = do_Bool(conn, tree, tvb, off, 'Match_Making_Participate_retval')
 end
			},
			[12] = {
				["name"] = "CancelParticipation",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Match_Making_CancelParticipation_idGathering = do_Uint32(conn, tree, tvb, off, 'Match_Making_CancelParticipation_idGathering')
off, Match_Making_CancelParticipation_strMessage = do_String(conn, tree, tvb, off, 'Match_Making_CancelParticipation_strMessage')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Match_Making_CancelParticipation_retval = do_Bool(conn, tree, tvb, off, 'Match_Making_CancelParticipation_retval')
 end
			},
			[13] = {
				["name"] = "GetParticipants",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Match_Making_GetParticipants_idGathering = do_Uint32(conn, tree, tvb, off, 'Match_Making_GetParticipants_idGathering')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
-- list !! PID
	local Match_Making_GetParticipants_lstParticipants_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Match_Making_GetParticipants_lstParticipants_len, tvb(off,4))
	off = off + 4
	for i=1,Match_Making_GetParticipants_lstParticipants_len do
	off, Match_Making_GetParticipants_lstParticipants_item = do_PID(conn, subtree, tvb, off, 'Match_Making_GetParticipants_lstParticipants_item')

	end
	
 end
			},
			[14] = {
				["name"] = "AddParticipants",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Match_Making_AddParticipants_idGathering = do_Uint32(conn, tree, tvb, off, 'Match_Making_AddParticipants_idGathering')
-- list !! PID
	local Match_Making_AddParticipants_lstParticipants_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Match_Making_AddParticipants_lstParticipants_len, tvb(off,4))
	off = off + 4
	for i=1,Match_Making_AddParticipants_lstParticipants_len do
	off, Match_Making_AddParticipants_lstParticipants_item = do_PID(conn, subtree, tvb, off, 'Match_Making_AddParticipants_lstParticipants_item')

	end
	
off, Match_Making_AddParticipants_strMessage = do_String(conn, tree, tvb, off, 'Match_Making_AddParticipants_strMessage')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Match_Making_AddParticipants_retval = do_Bool(conn, tree, tvb, off, 'Match_Making_AddParticipants_retval')
 end
			},
			[15] = {
				["name"] = "GetDetailedParticipants",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Match_Making_GetDetailedParticipants_idGathering = do_Uint32(conn, tree, tvb, off, 'Match_Making_GetDetailedParticipants_idGathering')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
--[[ Stubbed! Missing type (in list) ParticipantDetails]]
 end
			},
			[16] = {
				["name"] = "GetParticipantsURLs",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Match_Making_GetParticipantsURLs_idGathering = do_Uint32(conn, tree, tvb, off, 'Match_Making_GetParticipantsURLs_idGathering')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
-- list !! StationURL
	local Match_Making_GetParticipantsURLs_lstStationURL_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Match_Making_GetParticipantsURLs_lstStationURL_len, tvb(off,4))
	off = off + 4
	for i=1,Match_Making_GetParticipantsURLs_lstStationURL_len do
	off, Match_Making_GetParticipantsURLs_lstStationURL_item = do_StationURL(conn, subtree, tvb, off, 'Match_Making_GetParticipantsURLs_lstStationURL_item')

	end
	
 end
			},
			[17] = {
				["name"] = "FindByType",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Match_Making_FindByType_strType = do_String(conn, tree, tvb, off, 'Match_Making_FindByType_strType')
off = do_ResultRange(conn, tree, tvb, off, 'Match_Making_FindByType_resultRange')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
-- list !! Data<Gathering>
	local Match_Making_FindByType_lstGathering_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Match_Making_FindByType_lstGathering_len, tvb(off,4))
	off = off + 4
	for i=1,Match_Making_FindByType_lstGathering_len do
	
		local Match_Making_FindByType_lstGathering_item_container = subtree:add(F.Data, tvb(off, 0))
		Match_Making_FindByType_lstGathering_item_container:set_text("Data<Gathering>")
	off, Match_Making_FindByType_lstGathering_item_type_name = do_String(conn, Match_Making_FindByType_lstGathering_item_container, tvb, off, 'Match_Making_FindByType_lstGathering_item_type_name')

off, Match_Making_FindByType_lstGathering_item_len_plus_four = do_Uint32(conn, Match_Making_FindByType_lstGathering_item_container, tvb, off, 'Match_Making_FindByType_lstGathering_item_len_plus_four')

off, Match_Making_FindByType_lstGathering_item_data_len = do_Uint32(conn, Match_Making_FindByType_lstGathering_item_container, tvb, off, 'Match_Making_FindByType_lstGathering_item_data_len')

local type_func = 'do_'..Match_Making_FindByType_lstGathering_item_type_name
		if _G[type_func] ~= nil then
			off = _G[type_func](conn, Match_Making_FindByType_lstGathering_item_container, tvb, off, "Match_Making_FindByType_lstGathering_item_data")
		else
			Match_Making_FindByType_lstGathering_item_container:add(F.Match_Making_FindByType_lstGathering_item_data_bytes, tvb(off, Match_Making_FindByType_lstGathering_item_len))
			off = off + Match_Making_FindByType_lstGathering_item_data_len
		end
	

	end
	
 end
			},
			[18] = {
				["name"] = "FindByDescription",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Match_Making_FindByDescription_strDescription = do_String(conn, tree, tvb, off, 'Match_Making_FindByDescription_strDescription')
off = do_ResultRange(conn, tree, tvb, off, 'Match_Making_FindByDescription_resultRange')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
-- list !! Data<Gathering>
	local Match_Making_FindByDescription_lstGathering_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Match_Making_FindByDescription_lstGathering_len, tvb(off,4))
	off = off + 4
	for i=1,Match_Making_FindByDescription_lstGathering_len do
	
		local Match_Making_FindByDescription_lstGathering_item_container = subtree:add(F.Data, tvb(off, 0))
		Match_Making_FindByDescription_lstGathering_item_container:set_text("Data<Gathering>")
	off, Match_Making_FindByDescription_lstGathering_item_type_name = do_String(conn, Match_Making_FindByDescription_lstGathering_item_container, tvb, off, 'Match_Making_FindByDescription_lstGathering_item_type_name')

off, Match_Making_FindByDescription_lstGathering_item_len_plus_four = do_Uint32(conn, Match_Making_FindByDescription_lstGathering_item_container, tvb, off, 'Match_Making_FindByDescription_lstGathering_item_len_plus_four')

off, Match_Making_FindByDescription_lstGathering_item_data_len = do_Uint32(conn, Match_Making_FindByDescription_lstGathering_item_container, tvb, off, 'Match_Making_FindByDescription_lstGathering_item_data_len')

local type_func = 'do_'..Match_Making_FindByDescription_lstGathering_item_type_name
		if _G[type_func] ~= nil then
			off = _G[type_func](conn, Match_Making_FindByDescription_lstGathering_item_container, tvb, off, "Match_Making_FindByDescription_lstGathering_item_data")
		else
			Match_Making_FindByDescription_lstGathering_item_container:add(F.Match_Making_FindByDescription_lstGathering_item_data_bytes, tvb(off, Match_Making_FindByDescription_lstGathering_item_len))
			off = off + Match_Making_FindByDescription_lstGathering_item_data_len
		end
	

	end
	
 end
			},
			[19] = {
				["name"] = "FindByDescriptionRegex",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Match_Making_FindByDescriptionRegex_strDescriptionRegex = do_String(conn, tree, tvb, off, 'Match_Making_FindByDescriptionRegex_strDescriptionRegex')
off = do_ResultRange(conn, tree, tvb, off, 'Match_Making_FindByDescriptionRegex_resultRange')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
-- list !! Data<Gathering>
	local Match_Making_FindByDescriptionRegex_lstGathering_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Match_Making_FindByDescriptionRegex_lstGathering_len, tvb(off,4))
	off = off + 4
	for i=1,Match_Making_FindByDescriptionRegex_lstGathering_len do
	
		local Match_Making_FindByDescriptionRegex_lstGathering_item_container = subtree:add(F.Data, tvb(off, 0))
		Match_Making_FindByDescriptionRegex_lstGathering_item_container:set_text("Data<Gathering>")
	off, Match_Making_FindByDescriptionRegex_lstGathering_item_type_name = do_String(conn, Match_Making_FindByDescriptionRegex_lstGathering_item_container, tvb, off, 'Match_Making_FindByDescriptionRegex_lstGathering_item_type_name')

off, Match_Making_FindByDescriptionRegex_lstGathering_item_len_plus_four = do_Uint32(conn, Match_Making_FindByDescriptionRegex_lstGathering_item_container, tvb, off, 'Match_Making_FindByDescriptionRegex_lstGathering_item_len_plus_four')

off, Match_Making_FindByDescriptionRegex_lstGathering_item_data_len = do_Uint32(conn, Match_Making_FindByDescriptionRegex_lstGathering_item_container, tvb, off, 'Match_Making_FindByDescriptionRegex_lstGathering_item_data_len')

local type_func = 'do_'..Match_Making_FindByDescriptionRegex_lstGathering_item_type_name
		if _G[type_func] ~= nil then
			off = _G[type_func](conn, Match_Making_FindByDescriptionRegex_lstGathering_item_container, tvb, off, "Match_Making_FindByDescriptionRegex_lstGathering_item_data")
		else
			Match_Making_FindByDescriptionRegex_lstGathering_item_container:add(F.Match_Making_FindByDescriptionRegex_lstGathering_item_data_bytes, tvb(off, Match_Making_FindByDescriptionRegex_lstGathering_item_len))
			off = off + Match_Making_FindByDescriptionRegex_lstGathering_item_data_len
		end
	

	end
	
 end
			},
			[20] = {
				["name"] = "FindByID",
				["request"] = function (conn, tree, tvb)
	local off = 0
-- list !! Uint32
	local Match_Making_FindByID_lstID_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Match_Making_FindByID_lstID_len, tvb(off,4))
	off = off + 4
	for i=1,Match_Making_FindByID_lstID_len do
	off, Match_Making_FindByID_lstID_item = do_Uint32(conn, subtree, tvb, off, 'Match_Making_FindByID_lstID_item')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
-- list !! Data<Gathering>
	local Match_Making_FindByID_lstGathering_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Match_Making_FindByID_lstGathering_len, tvb(off,4))
	off = off + 4
	for i=1,Match_Making_FindByID_lstGathering_len do
	
		local Match_Making_FindByID_lstGathering_item_container = subtree:add(F.Data, tvb(off, 0))
		Match_Making_FindByID_lstGathering_item_container:set_text("Data<Gathering>")
	off, Match_Making_FindByID_lstGathering_item_type_name = do_String(conn, Match_Making_FindByID_lstGathering_item_container, tvb, off, 'Match_Making_FindByID_lstGathering_item_type_name')

off, Match_Making_FindByID_lstGathering_item_len_plus_four = do_Uint32(conn, Match_Making_FindByID_lstGathering_item_container, tvb, off, 'Match_Making_FindByID_lstGathering_item_len_plus_four')

off, Match_Making_FindByID_lstGathering_item_data_len = do_Uint32(conn, Match_Making_FindByID_lstGathering_item_container, tvb, off, 'Match_Making_FindByID_lstGathering_item_data_len')

local type_func = 'do_'..Match_Making_FindByID_lstGathering_item_type_name
		if _G[type_func] ~= nil then
			off = _G[type_func](conn, Match_Making_FindByID_lstGathering_item_container, tvb, off, "Match_Making_FindByID_lstGathering_item_data")
		else
			Match_Making_FindByID_lstGathering_item_container:add(F.Match_Making_FindByID_lstGathering_item_data_bytes, tvb(off, Match_Making_FindByID_lstGathering_item_len))
			off = off + Match_Making_FindByID_lstGathering_item_data_len
		end
	

	end
	
 end
			},
			[21] = {
				["name"] = "FindBySingleID",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Match_Making_FindBySingleID_id = do_Uint32(conn, tree, tvb, off, 'Match_Making_FindBySingleID_id')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Match_Making_FindBySingleID_bResult = do_Bool(conn, tree, tvb, off, 'Match_Making_FindBySingleID_bResult')

		local Match_Making_FindBySingleID_pGathering_container = tree:add(F.Data, tvb(off, 0))
		Match_Making_FindBySingleID_pGathering_container:set_text("Data<Gathering>")
	off, Match_Making_FindBySingleID_pGathering_type_name = do_String(conn, Match_Making_FindBySingleID_pGathering_container, tvb, off, 'Match_Making_FindBySingleID_pGathering_type_name')

off, Match_Making_FindBySingleID_pGathering_len_plus_four = do_Uint32(conn, Match_Making_FindBySingleID_pGathering_container, tvb, off, 'Match_Making_FindBySingleID_pGathering_len_plus_four')

off, Match_Making_FindBySingleID_pGathering_data_len = do_Uint32(conn, Match_Making_FindBySingleID_pGathering_container, tvb, off, 'Match_Making_FindBySingleID_pGathering_data_len')

local type_func = 'do_'..Match_Making_FindBySingleID_pGathering_type_name
		if _G[type_func] ~= nil then
			off = _G[type_func](conn, Match_Making_FindBySingleID_pGathering_container, tvb, off, "Match_Making_FindBySingleID_pGathering_data")
		else
			Match_Making_FindBySingleID_pGathering_container:add(F.Match_Making_FindBySingleID_pGathering_data_bytes, tvb(off, Match_Making_FindBySingleID_pGathering_len))
			off = off + Match_Making_FindBySingleID_pGathering_data_len
		end
	
 end
			},
			[22] = {
				["name"] = "FindByOwner",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Match_Making_FindByOwner_id = do_PID(conn, tree, tvb, off, 'Match_Making_FindByOwner_id')
off = do_ResultRange(conn, tree, tvb, off, 'Match_Making_FindByOwner_resultRange')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
-- list !! Data<Gathering>
	local Match_Making_FindByOwner_lstGathering_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Match_Making_FindByOwner_lstGathering_len, tvb(off,4))
	off = off + 4
	for i=1,Match_Making_FindByOwner_lstGathering_len do
	
		local Match_Making_FindByOwner_lstGathering_item_container = subtree:add(F.Data, tvb(off, 0))
		Match_Making_FindByOwner_lstGathering_item_container:set_text("Data<Gathering>")
	off, Match_Making_FindByOwner_lstGathering_item_type_name = do_String(conn, Match_Making_FindByOwner_lstGathering_item_container, tvb, off, 'Match_Making_FindByOwner_lstGathering_item_type_name')

off, Match_Making_FindByOwner_lstGathering_item_len_plus_four = do_Uint32(conn, Match_Making_FindByOwner_lstGathering_item_container, tvb, off, 'Match_Making_FindByOwner_lstGathering_item_len_plus_four')

off, Match_Making_FindByOwner_lstGathering_item_data_len = do_Uint32(conn, Match_Making_FindByOwner_lstGathering_item_container, tvb, off, 'Match_Making_FindByOwner_lstGathering_item_data_len')

local type_func = 'do_'..Match_Making_FindByOwner_lstGathering_item_type_name
		if _G[type_func] ~= nil then
			off = _G[type_func](conn, Match_Making_FindByOwner_lstGathering_item_container, tvb, off, "Match_Making_FindByOwner_lstGathering_item_data")
		else
			Match_Making_FindByOwner_lstGathering_item_container:add(F.Match_Making_FindByOwner_lstGathering_item_data_bytes, tvb(off, Match_Making_FindByOwner_lstGathering_item_len))
			off = off + Match_Making_FindByOwner_lstGathering_item_data_len
		end
	

	end
	
 end
			},
			[23] = {
				["name"] = "FindByParticipants",
				["request"] = function (conn, tree, tvb)
	local off = 0
-- list !! PID
	local Match_Making_FindByParticipants_pid_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Match_Making_FindByParticipants_pid_len, tvb(off,4))
	off = off + 4
	for i=1,Match_Making_FindByParticipants_pid_len do
	off, Match_Making_FindByParticipants_pid_item = do_PID(conn, subtree, tvb, off, 'Match_Making_FindByParticipants_pid_item')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
-- list !! Data<Gathering>
	local Match_Making_FindByParticipants_lstGathering_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Match_Making_FindByParticipants_lstGathering_len, tvb(off,4))
	off = off + 4
	for i=1,Match_Making_FindByParticipants_lstGathering_len do
	
		local Match_Making_FindByParticipants_lstGathering_item_container = subtree:add(F.Data, tvb(off, 0))
		Match_Making_FindByParticipants_lstGathering_item_container:set_text("Data<Gathering>")
	off, Match_Making_FindByParticipants_lstGathering_item_type_name = do_String(conn, Match_Making_FindByParticipants_lstGathering_item_container, tvb, off, 'Match_Making_FindByParticipants_lstGathering_item_type_name')

off, Match_Making_FindByParticipants_lstGathering_item_len_plus_four = do_Uint32(conn, Match_Making_FindByParticipants_lstGathering_item_container, tvb, off, 'Match_Making_FindByParticipants_lstGathering_item_len_plus_four')

off, Match_Making_FindByParticipants_lstGathering_item_data_len = do_Uint32(conn, Match_Making_FindByParticipants_lstGathering_item_container, tvb, off, 'Match_Making_FindByParticipants_lstGathering_item_data_len')

local type_func = 'do_'..Match_Making_FindByParticipants_lstGathering_item_type_name
		if _G[type_func] ~= nil then
			off = _G[type_func](conn, Match_Making_FindByParticipants_lstGathering_item_container, tvb, off, "Match_Making_FindByParticipants_lstGathering_item_data")
		else
			Match_Making_FindByParticipants_lstGathering_item_container:add(F.Match_Making_FindByParticipants_lstGathering_item_data_bytes, tvb(off, Match_Making_FindByParticipants_lstGathering_item_len))
			off = off + Match_Making_FindByParticipants_lstGathering_item_data_len
		end
	

	end
	
 end
			},
			[24] = {
				["name"] = "FindInvitations",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_ResultRange(conn, tree, tvb, off, 'Match_Making_FindInvitations_resultRange')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
-- list !! Data<Gathering>
	local Match_Making_FindInvitations_lstGathering_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Match_Making_FindInvitations_lstGathering_len, tvb(off,4))
	off = off + 4
	for i=1,Match_Making_FindInvitations_lstGathering_len do
	
		local Match_Making_FindInvitations_lstGathering_item_container = subtree:add(F.Data, tvb(off, 0))
		Match_Making_FindInvitations_lstGathering_item_container:set_text("Data<Gathering>")
	off, Match_Making_FindInvitations_lstGathering_item_type_name = do_String(conn, Match_Making_FindInvitations_lstGathering_item_container, tvb, off, 'Match_Making_FindInvitations_lstGathering_item_type_name')

off, Match_Making_FindInvitations_lstGathering_item_len_plus_four = do_Uint32(conn, Match_Making_FindInvitations_lstGathering_item_container, tvb, off, 'Match_Making_FindInvitations_lstGathering_item_len_plus_four')

off, Match_Making_FindInvitations_lstGathering_item_data_len = do_Uint32(conn, Match_Making_FindInvitations_lstGathering_item_container, tvb, off, 'Match_Making_FindInvitations_lstGathering_item_data_len')

local type_func = 'do_'..Match_Making_FindInvitations_lstGathering_item_type_name
		if _G[type_func] ~= nil then
			off = _G[type_func](conn, Match_Making_FindInvitations_lstGathering_item_container, tvb, off, "Match_Making_FindInvitations_lstGathering_item_data")
		else
			Match_Making_FindInvitations_lstGathering_item_container:add(F.Match_Making_FindInvitations_lstGathering_item_data_bytes, tvb(off, Match_Making_FindInvitations_lstGathering_item_len))
			off = off + Match_Making_FindInvitations_lstGathering_item_data_len
		end
	

	end
	
 end
			},
			[25] = {
				["name"] = "FindBySQLQuery",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Match_Making_FindBySQLQuery_strQuery = do_String(conn, tree, tvb, off, 'Match_Making_FindBySQLQuery_strQuery')
off = do_ResultRange(conn, tree, tvb, off, 'Match_Making_FindBySQLQuery_resultRange')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
-- list !! Data<Gathering>
	local Match_Making_FindBySQLQuery_lstGathering_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Match_Making_FindBySQLQuery_lstGathering_len, tvb(off,4))
	off = off + 4
	for i=1,Match_Making_FindBySQLQuery_lstGathering_len do
	
		local Match_Making_FindBySQLQuery_lstGathering_item_container = subtree:add(F.Data, tvb(off, 0))
		Match_Making_FindBySQLQuery_lstGathering_item_container:set_text("Data<Gathering>")
	off, Match_Making_FindBySQLQuery_lstGathering_item_type_name = do_String(conn, Match_Making_FindBySQLQuery_lstGathering_item_container, tvb, off, 'Match_Making_FindBySQLQuery_lstGathering_item_type_name')

off, Match_Making_FindBySQLQuery_lstGathering_item_len_plus_four = do_Uint32(conn, Match_Making_FindBySQLQuery_lstGathering_item_container, tvb, off, 'Match_Making_FindBySQLQuery_lstGathering_item_len_plus_four')

off, Match_Making_FindBySQLQuery_lstGathering_item_data_len = do_Uint32(conn, Match_Making_FindBySQLQuery_lstGathering_item_container, tvb, off, 'Match_Making_FindBySQLQuery_lstGathering_item_data_len')

local type_func = 'do_'..Match_Making_FindBySQLQuery_lstGathering_item_type_name
		if _G[type_func] ~= nil then
			off = _G[type_func](conn, Match_Making_FindBySQLQuery_lstGathering_item_container, tvb, off, "Match_Making_FindBySQLQuery_lstGathering_item_data")
		else
			Match_Making_FindBySQLQuery_lstGathering_item_container:add(F.Match_Making_FindBySQLQuery_lstGathering_item_data_bytes, tvb(off, Match_Making_FindBySQLQuery_lstGathering_item_len))
			off = off + Match_Making_FindBySQLQuery_lstGathering_item_data_len
		end
	

	end
	
 end
			},
			[26] = {
				["name"] = "LaunchSession",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Match_Making_LaunchSession_idGathering = do_Uint32(conn, tree, tvb, off, 'Match_Making_LaunchSession_idGathering')
off, Match_Making_LaunchSession_strURL = do_String(conn, tree, tvb, off, 'Match_Making_LaunchSession_strURL')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Match_Making_LaunchSession_retval = do_Bool(conn, tree, tvb, off, 'Match_Making_LaunchSession_retval')
 end
			},
			[27] = {
				["name"] = "UpdateSessionURL",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Match_Making_UpdateSessionURL_idGathering = do_Uint32(conn, tree, tvb, off, 'Match_Making_UpdateSessionURL_idGathering')
off, Match_Making_UpdateSessionURL_strURL = do_String(conn, tree, tvb, off, 'Match_Making_UpdateSessionURL_strURL')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Match_Making_UpdateSessionURL_retval = do_Bool(conn, tree, tvb, off, 'Match_Making_UpdateSessionURL_retval')
 end
			},
			[28] = {
				["name"] = "GetSessionURL",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Match_Making_GetSessionURL_idGathering = do_Uint32(conn, tree, tvb, off, 'Match_Making_GetSessionURL_idGathering')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Match_Making_GetSessionURL_retval = do_Bool(conn, tree, tvb, off, 'Match_Making_GetSessionURL_retval')
off, Match_Making_GetSessionURL_strURL = do_String(conn, tree, tvb, off, 'Match_Making_GetSessionURL_strURL')
 end
			},
			[29] = {
				["name"] = "GetState",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Match_Making_GetState_idGathering = do_Uint32(conn, tree, tvb, off, 'Match_Making_GetState_idGathering')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Match_Making_GetState_retval = do_Bool(conn, tree, tvb, off, 'Match_Making_GetState_retval')
off, Match_Making_GetState_uiState = do_Uint32(conn, tree, tvb, off, 'Match_Making_GetState_uiState')
 end
			},
			[30] = {
				["name"] = "SetState",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Match_Making_SetState_idGathering = do_Uint32(conn, tree, tvb, off, 'Match_Making_SetState_idGathering')
off, Match_Making_SetState_uiNewState = do_Uint32(conn, tree, tvb, off, 'Match_Making_SetState_uiNewState')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Match_Making_SetState_retval = do_Bool(conn, tree, tvb, off, 'Match_Making_SetState_retval')
 end
			},
			[31] = {
				["name"] = "ReportStats",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Match_Making_ReportStats_idGathering = do_Uint32(conn, tree, tvb, off, 'Match_Making_ReportStats_idGathering')
--[[ Stubbed! Missing type (in list) GatheringStats]]
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Match_Making_ReportStats_retval = do_Bool(conn, tree, tvb, off, 'Match_Making_ReportStats_retval')
 end
			},
			[32] = {
				["name"] = "GetStats",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Match_Making_GetStats_idGathering = do_Uint32(conn, tree, tvb, off, 'Match_Making_GetStats_idGathering')
-- list !! Uint32
	local Match_Making_GetStats_lstParticipants_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Match_Making_GetStats_lstParticipants_len, tvb(off,4))
	off = off + 4
	for i=1,Match_Making_GetStats_lstParticipants_len do
	off, Match_Making_GetStats_lstParticipants_item = do_Uint32(conn, subtree, tvb, off, 'Match_Making_GetStats_lstParticipants_item')

	end
	
-- list !! byte
	local Match_Making_GetStats_lstColumns_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Match_Making_GetStats_lstColumns_len, tvb(off,4))
	off = off + 4
	for i=1,Match_Making_GetStats_lstColumns_len do
	off, Match_Making_GetStats_lstColumns_item = do_byte(conn, subtree, tvb, off, 'Match_Making_GetStats_lstColumns_item')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Match_Making_GetStats_retval = do_Bool(conn, tree, tvb, off, 'Match_Making_GetStats_retval')
--[[ Stubbed! Missing type (in list) GatheringStats]]
 end
			},
			[33] = {
				["name"] = "DeleteGathering",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Match_Making_DeleteGathering_gid = do_Uint32(conn, tree, tvb, off, 'Match_Making_DeleteGathering_gid')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Match_Making_DeleteGathering_retval = do_Bool(conn, tree, tvb, off, 'Match_Making_DeleteGathering_retval')
 end
			},
			[34] = {
				["name"] = "GetPendingDeletions",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Match_Making_GetPendingDeletions_uiReason = do_Uint32(conn, tree, tvb, off, 'Match_Making_GetPendingDeletions_uiReason')
off = do_ResultRange(conn, tree, tvb, off, 'Match_Making_GetPendingDeletions_resultRange')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Match_Making_GetPendingDeletions_retval = do_Bool(conn, tree, tvb, off, 'Match_Making_GetPendingDeletions_retval')
--[[ Stubbed! Missing type (in list) DeletionEntry]]
 end
			},
			[35] = {
				["name"] = "DeleteFromDeletions",
				["request"] = function (conn, tree, tvb)
	local off = 0
-- list !! Uint32
	local Match_Making_DeleteFromDeletions_lstDeletions_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Match_Making_DeleteFromDeletions_lstDeletions_len, tvb(off,4))
	off = off + 4
	for i=1,Match_Making_DeleteFromDeletions_lstDeletions_len do
	off, Match_Making_DeleteFromDeletions_lstDeletions_item = do_Uint32(conn, subtree, tvb, off, 'Match_Making_DeleteFromDeletions_lstDeletions_item')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Match_Making_DeleteFromDeletions_retval = do_Bool(conn, tree, tvb, off, 'Match_Making_DeleteFromDeletions_retval')
 end
			},
			[36] = {
				["name"] = "MigrateGatheringOwnershipV1",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Match_Making_MigrateGatheringOwnershipV1_gid = do_Uint32(conn, tree, tvb, off, 'Match_Making_MigrateGatheringOwnershipV1_gid')
-- list !! PID
	local Match_Making_MigrateGatheringOwnershipV1_lstPotentialNewOwnersID_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Match_Making_MigrateGatheringOwnershipV1_lstPotentialNewOwnersID_len, tvb(off,4))
	off = off + 4
	for i=1,Match_Making_MigrateGatheringOwnershipV1_lstPotentialNewOwnersID_len do
	off, Match_Making_MigrateGatheringOwnershipV1_lstPotentialNewOwnersID_item = do_PID(conn, subtree, tvb, off, 'Match_Making_MigrateGatheringOwnershipV1_lstPotentialNewOwnersID_item')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Match_Making_MigrateGatheringOwnershipV1_retval = do_Bool(conn, tree, tvb, off, 'Match_Making_MigrateGatheringOwnershipV1_retval')
 end
			},
			[37] = {
				["name"] = "FindByDescriptionLike",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Match_Making_FindByDescriptionLike_strDescriptionLike = do_String(conn, tree, tvb, off, 'Match_Making_FindByDescriptionLike_strDescriptionLike')
off = do_ResultRange(conn, tree, tvb, off, 'Match_Making_FindByDescriptionLike_resultRange')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
-- list !! Data<Gathering>
	local Match_Making_FindByDescriptionLike_lstGathering_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Match_Making_FindByDescriptionLike_lstGathering_len, tvb(off,4))
	off = off + 4
	for i=1,Match_Making_FindByDescriptionLike_lstGathering_len do
	
		local Match_Making_FindByDescriptionLike_lstGathering_item_container = subtree:add(F.Data, tvb(off, 0))
		Match_Making_FindByDescriptionLike_lstGathering_item_container:set_text("Data<Gathering>")
	off, Match_Making_FindByDescriptionLike_lstGathering_item_type_name = do_String(conn, Match_Making_FindByDescriptionLike_lstGathering_item_container, tvb, off, 'Match_Making_FindByDescriptionLike_lstGathering_item_type_name')

off, Match_Making_FindByDescriptionLike_lstGathering_item_len_plus_four = do_Uint32(conn, Match_Making_FindByDescriptionLike_lstGathering_item_container, tvb, off, 'Match_Making_FindByDescriptionLike_lstGathering_item_len_plus_four')

off, Match_Making_FindByDescriptionLike_lstGathering_item_data_len = do_Uint32(conn, Match_Making_FindByDescriptionLike_lstGathering_item_container, tvb, off, 'Match_Making_FindByDescriptionLike_lstGathering_item_data_len')

local type_func = 'do_'..Match_Making_FindByDescriptionLike_lstGathering_item_type_name
		if _G[type_func] ~= nil then
			off = _G[type_func](conn, Match_Making_FindByDescriptionLike_lstGathering_item_container, tvb, off, "Match_Making_FindByDescriptionLike_lstGathering_item_data")
		else
			Match_Making_FindByDescriptionLike_lstGathering_item_container:add(F.Match_Making_FindByDescriptionLike_lstGathering_item_data_bytes, tvb(off, Match_Making_FindByDescriptionLike_lstGathering_item_len))
			off = off + Match_Making_FindByDescriptionLike_lstGathering_item_data_len
		end
	

	end
	
 end
			},
			[38] = {
				["name"] = "RegisterLocalURL",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Match_Making_RegisterLocalURL_gid = do_Uint32(conn, tree, tvb, off, 'Match_Making_RegisterLocalURL_gid')
off, Match_Making_RegisterLocalURL_url = do_StationURL(conn, tree, tvb, off, 'Match_Making_RegisterLocalURL_url')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[39] = {
				["name"] = "RegisterLocalURLs",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Match_Making_RegisterLocalURLs_gid = do_Uint32(conn, tree, tvb, off, 'Match_Making_RegisterLocalURLs_gid')
-- list !! StationURL
	local Match_Making_RegisterLocalURLs_lstUrls_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Match_Making_RegisterLocalURLs_lstUrls_len, tvb(off,4))
	off = off + 4
	for i=1,Match_Making_RegisterLocalURLs_lstUrls_len do
	off, Match_Making_RegisterLocalURLs_lstUrls_item = do_StationURL(conn, subtree, tvb, off, 'Match_Making_RegisterLocalURLs_lstUrls_item')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[40] = {
				["name"] = "UpdateSessionHostV1",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Match_Making_UpdateSessionHostV1_gid = do_Uint32(conn, tree, tvb, off, 'Match_Making_UpdateSessionHostV1_gid')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[41] = {
				["name"] = "GetSessionURLs",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Match_Making_GetSessionURLs_gid = do_Uint32(conn, tree, tvb, off, 'Match_Making_GetSessionURLs_gid')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
-- list !! StationURL
	local Match_Making_GetSessionURLs_lstURLs_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Match_Making_GetSessionURLs_lstURLs_len, tvb(off,4))
	off = off + 4
	for i=1,Match_Making_GetSessionURLs_lstURLs_len do
	off, Match_Making_GetSessionURLs_lstURLs_item = do_StationURL(conn, subtree, tvb, off, 'Match_Making_GetSessionURLs_lstURLs_item')

	end
	
 end
			},
			[42] = {
				["name"] = "UpdateSessionHost",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Match_Making_UpdateSessionHost_gid = do_Uint32(conn, tree, tvb, off, 'Match_Making_UpdateSessionHost_gid')
off, Match_Making_UpdateSessionHost_isMigrateOwner = do_Bool(conn, tree, tvb, off, 'Match_Making_UpdateSessionHost_isMigrateOwner')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[43] = {
				["name"] = "UpdateGatheringOwnership",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Match_Making_UpdateGatheringOwnership_gid = do_Uint32(conn, tree, tvb, off, 'Match_Making_UpdateGatheringOwnership_gid')
off, Match_Making_UpdateGatheringOwnership_participantsOnly = do_Bool(conn, tree, tvb, off, 'Match_Making_UpdateGatheringOwnership_participantsOnly')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Match_Making_UpdateGatheringOwnership_retval = do_Bool(conn, tree, tvb, off, 'Match_Making_UpdateGatheringOwnership_retval')
 end
			},
			[44] = {
				["name"] = "MigrateGatheringOwnership",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Match_Making_MigrateGatheringOwnership_gid = do_Uint32(conn, tree, tvb, off, 'Match_Making_MigrateGatheringOwnership_gid')
-- list !! PID
	local Match_Making_MigrateGatheringOwnership_lstPotentialNewOwnersID_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Match_Making_MigrateGatheringOwnership_lstPotentialNewOwnersID_len, tvb(off,4))
	off = off + 4
	for i=1,Match_Making_MigrateGatheringOwnership_lstPotentialNewOwnersID_len do
	off, Match_Making_MigrateGatheringOwnership_lstPotentialNewOwnersID_item = do_PID(conn, subtree, tvb, off, 'Match_Making_MigrateGatheringOwnership_lstPotentialNewOwnersID_item')

	end
	
off, Match_Making_MigrateGatheringOwnership_participantsOnly = do_Bool(conn, tree, tvb, off, 'Match_Making_MigrateGatheringOwnership_participantsOnly')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			
		}
	},
[0x17] =
	{
		["name"] = "Messaging",
		["methods"] = {
[1] = {
				["name"] = "DeliverMessage",
				["request"] = function (conn, tree, tvb)
	local off = 0

		local Messaging_DeliverMessage_oUserMessage_container = tree:add(F.Data, tvb(off, 0))
		Messaging_DeliverMessage_oUserMessage_container:set_text("Data")
	off, Messaging_DeliverMessage_oUserMessage_type_name = do_String(conn, Messaging_DeliverMessage_oUserMessage_container, tvb, off, 'Messaging_DeliverMessage_oUserMessage_type_name')

off, Messaging_DeliverMessage_oUserMessage_len_plus_four = do_Uint32(conn, Messaging_DeliverMessage_oUserMessage_container, tvb, off, 'Messaging_DeliverMessage_oUserMessage_len_plus_four')

off, Messaging_DeliverMessage_oUserMessage_data_len = do_Uint32(conn, Messaging_DeliverMessage_oUserMessage_container, tvb, off, 'Messaging_DeliverMessage_oUserMessage_data_len')

local type_func = 'do_'..Messaging_DeliverMessage_oUserMessage_type_name
		if _G[type_func] ~= nil then
			off = _G[type_func](conn, Messaging_DeliverMessage_oUserMessage_container, tvb, off, "Messaging_DeliverMessage_oUserMessage_data")
		else
			Messaging_DeliverMessage_oUserMessage_container:add(F.Messaging_DeliverMessage_oUserMessage_data_bytes, tvb(off, Messaging_DeliverMessage_oUserMessage_len))
			off = off + Messaging_DeliverMessage_oUserMessage_data_len
		end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0

		local Messaging_DeliverMessage_oModifiedMessage_container = tree:add(F.Data, tvb(off, 0))
		Messaging_DeliverMessage_oModifiedMessage_container:set_text("Data")
	off, Messaging_DeliverMessage_oModifiedMessage_type_name = do_String(conn, Messaging_DeliverMessage_oModifiedMessage_container, tvb, off, 'Messaging_DeliverMessage_oModifiedMessage_type_name')

off, Messaging_DeliverMessage_oModifiedMessage_len_plus_four = do_Uint32(conn, Messaging_DeliverMessage_oModifiedMessage_container, tvb, off, 'Messaging_DeliverMessage_oModifiedMessage_len_plus_four')

off, Messaging_DeliverMessage_oModifiedMessage_data_len = do_Uint32(conn, Messaging_DeliverMessage_oModifiedMessage_container, tvb, off, 'Messaging_DeliverMessage_oModifiedMessage_data_len')

local type_func = 'do_'..Messaging_DeliverMessage_oModifiedMessage_type_name
		if _G[type_func] ~= nil then
			off = _G[type_func](conn, Messaging_DeliverMessage_oModifiedMessage_container, tvb, off, "Messaging_DeliverMessage_oModifiedMessage_data")
		else
			Messaging_DeliverMessage_oModifiedMessage_container:add(F.Messaging_DeliverMessage_oModifiedMessage_data_bytes, tvb(off, Messaging_DeliverMessage_oModifiedMessage_len))
			off = off + Messaging_DeliverMessage_oModifiedMessage_data_len
		end
	
-- list !! Uint32
	local Messaging_DeliverMessage_lstSandboxNodeId_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Messaging_DeliverMessage_lstSandboxNodeId_len, tvb(off,4))
	off = off + 4
	for i=1,Messaging_DeliverMessage_lstSandboxNodeId_len do
	off, Messaging_DeliverMessage_lstSandboxNodeId_item = do_Uint32(conn, subtree, tvb, off, 'Messaging_DeliverMessage_lstSandboxNodeId_item')

	end
	
-- list !! PID
	local Messaging_DeliverMessage_lstParticipants_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Messaging_DeliverMessage_lstParticipants_len, tvb(off,4))
	off = off + 4
	for i=1,Messaging_DeliverMessage_lstParticipants_len do
	off, Messaging_DeliverMessage_lstParticipants_item = do_PID(conn, subtree, tvb, off, 'Messaging_DeliverMessage_lstParticipants_item')

	end
	
 end
			},
			[2] = {
				["name"] = "GetNumberOfMessages",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_MessageRecipient(conn, tree, tvb, off, 'Messaging_GetNumberOfMessages_recipient')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Messaging_GetNumberOfMessages_uiNbMessages = do_Uint32(conn, tree, tvb, off, 'Messaging_GetNumberOfMessages_uiNbMessages')
 end
			},
			[3] = {
				["name"] = "GetMessagesHeaders",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_MessageRecipient(conn, tree, tvb, off, 'Messaging_GetMessagesHeaders_recipient')
off = do_ResultRange(conn, tree, tvb, off, 'Messaging_GetMessagesHeaders_range')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
-- list !! UserMessage
	local Messaging_GetMessagesHeaders_lstMsgHeaders_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Messaging_GetMessagesHeaders_lstMsgHeaders_len, tvb(off,4))
	off = off + 4
	for i=1,Messaging_GetMessagesHeaders_lstMsgHeaders_len do
	off = do_UserMessage(conn, subtree, tvb, off, 'Messaging_GetMessagesHeaders_lstMsgHeaders_item')

	end
	
 end
			},
			[4] = {
				["name"] = "RetrieveAllMessagesWithinRange",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_MessageRecipient(conn, tree, tvb, off, 'Messaging_RetrieveAllMessagesWithinRange_recipient')
off = do_ResultRange(conn, tree, tvb, off, 'Messaging_RetrieveAllMessagesWithinRange_range')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
-- list !! Data
	local Messaging_RetrieveAllMessagesWithinRange_lstMessages_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Messaging_RetrieveAllMessagesWithinRange_lstMessages_len, tvb(off,4))
	off = off + 4
	for i=1,Messaging_RetrieveAllMessagesWithinRange_lstMessages_len do
	
		local Messaging_RetrieveAllMessagesWithinRange_lstMessages_item_container = subtree:add(F.Data, tvb(off, 0))
		Messaging_RetrieveAllMessagesWithinRange_lstMessages_item_container:set_text("Data")
	off, Messaging_RetrieveAllMessagesWithinRange_lstMessages_item_type_name = do_String(conn, Messaging_RetrieveAllMessagesWithinRange_lstMessages_item_container, tvb, off, 'Messaging_RetrieveAllMessagesWithinRange_lstMessages_item_type_name')

off, Messaging_RetrieveAllMessagesWithinRange_lstMessages_item_len_plus_four = do_Uint32(conn, Messaging_RetrieveAllMessagesWithinRange_lstMessages_item_container, tvb, off, 'Messaging_RetrieveAllMessagesWithinRange_lstMessages_item_len_plus_four')

off, Messaging_RetrieveAllMessagesWithinRange_lstMessages_item_data_len = do_Uint32(conn, Messaging_RetrieveAllMessagesWithinRange_lstMessages_item_container, tvb, off, 'Messaging_RetrieveAllMessagesWithinRange_lstMessages_item_data_len')

local type_func = 'do_'..Messaging_RetrieveAllMessagesWithinRange_lstMessages_item_type_name
		if _G[type_func] ~= nil then
			off = _G[type_func](conn, Messaging_RetrieveAllMessagesWithinRange_lstMessages_item_container, tvb, off, "Messaging_RetrieveAllMessagesWithinRange_lstMessages_item_data")
		else
			Messaging_RetrieveAllMessagesWithinRange_lstMessages_item_container:add(F.Messaging_RetrieveAllMessagesWithinRange_lstMessages_item_data_bytes, tvb(off, Messaging_RetrieveAllMessagesWithinRange_lstMessages_item_len))
			off = off + Messaging_RetrieveAllMessagesWithinRange_lstMessages_item_data_len
		end
	

	end
	
 end
			},
			[5] = {
				["name"] = "RetrieveMessages",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_MessageRecipient(conn, tree, tvb, off, 'Messaging_RetrieveMessages_recipient')
-- list !! Uint32
	local Messaging_RetrieveMessages_lstMsgIDs_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Messaging_RetrieveMessages_lstMsgIDs_len, tvb(off,4))
	off = off + 4
	for i=1,Messaging_RetrieveMessages_lstMsgIDs_len do
	off, Messaging_RetrieveMessages_lstMsgIDs_item = do_Uint32(conn, subtree, tvb, off, 'Messaging_RetrieveMessages_lstMsgIDs_item')

	end
	
off, Messaging_RetrieveMessages_bLeaveOnServer = do_Bool(conn, tree, tvb, off, 'Messaging_RetrieveMessages_bLeaveOnServer')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
-- list !! Data
	local Messaging_RetrieveMessages_lstMessages_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Messaging_RetrieveMessages_lstMessages_len, tvb(off,4))
	off = off + 4
	for i=1,Messaging_RetrieveMessages_lstMessages_len do
	
		local Messaging_RetrieveMessages_lstMessages_item_container = subtree:add(F.Data, tvb(off, 0))
		Messaging_RetrieveMessages_lstMessages_item_container:set_text("Data")
	off, Messaging_RetrieveMessages_lstMessages_item_type_name = do_String(conn, Messaging_RetrieveMessages_lstMessages_item_container, tvb, off, 'Messaging_RetrieveMessages_lstMessages_item_type_name')

off, Messaging_RetrieveMessages_lstMessages_item_len_plus_four = do_Uint32(conn, Messaging_RetrieveMessages_lstMessages_item_container, tvb, off, 'Messaging_RetrieveMessages_lstMessages_item_len_plus_four')

off, Messaging_RetrieveMessages_lstMessages_item_data_len = do_Uint32(conn, Messaging_RetrieveMessages_lstMessages_item_container, tvb, off, 'Messaging_RetrieveMessages_lstMessages_item_data_len')

local type_func = 'do_'..Messaging_RetrieveMessages_lstMessages_item_type_name
		if _G[type_func] ~= nil then
			off = _G[type_func](conn, Messaging_RetrieveMessages_lstMessages_item_container, tvb, off, "Messaging_RetrieveMessages_lstMessages_item_data")
		else
			Messaging_RetrieveMessages_lstMessages_item_container:add(F.Messaging_RetrieveMessages_lstMessages_item_data_bytes, tvb(off, Messaging_RetrieveMessages_lstMessages_item_len))
			off = off + Messaging_RetrieveMessages_lstMessages_item_data_len
		end
	

	end
	
 end
			},
			[6] = {
				["name"] = "DeleteMessages",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_MessageRecipient(conn, tree, tvb, off, 'Messaging_DeleteMessages_recipient')
-- list !! Uint32
	local Messaging_DeleteMessages_lstMessagesToDelete_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Messaging_DeleteMessages_lstMessagesToDelete_len, tvb(off,4))
	off = off + 4
	for i=1,Messaging_DeleteMessages_lstMessagesToDelete_len do
	off, Messaging_DeleteMessages_lstMessagesToDelete_item = do_Uint32(conn, subtree, tvb, off, 'Messaging_DeleteMessages_lstMessagesToDelete_item')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[7] = {
				["name"] = "DeleteAllMessages",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_MessageRecipient(conn, tree, tvb, off, 'Messaging_DeleteAllMessages_recipient')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Messaging_DeleteAllMessages_uiNbDeletedMessages = do_Uint32(conn, tree, tvb, off, 'Messaging_DeleteAllMessages_uiNbDeletedMessages')
 end
			},
			
		}
	},
[0x1B] =
	{
		["name"] = "Message Delivery",
		["methods"] = {
[1] = {
				["name"] = "DeliverMessage",
				["request"] = function (conn, tree, tvb)
	local off = 0

		local Message_Delivery_DeliverMessage_oUserMessage_container = tree:add(F.Data, tvb(off, 0))
		Message_Delivery_DeliverMessage_oUserMessage_container:set_text("Data")
	off, Message_Delivery_DeliverMessage_oUserMessage_type_name = do_String(conn, Message_Delivery_DeliverMessage_oUserMessage_container, tvb, off, 'Message_Delivery_DeliverMessage_oUserMessage_type_name')

off, Message_Delivery_DeliverMessage_oUserMessage_len_plus_four = do_Uint32(conn, Message_Delivery_DeliverMessage_oUserMessage_container, tvb, off, 'Message_Delivery_DeliverMessage_oUserMessage_len_plus_four')

off, Message_Delivery_DeliverMessage_oUserMessage_data_len = do_Uint32(conn, Message_Delivery_DeliverMessage_oUserMessage_container, tvb, off, 'Message_Delivery_DeliverMessage_oUserMessage_data_len')

local type_func = 'do_'..Message_Delivery_DeliverMessage_oUserMessage_type_name
		if _G[type_func] ~= nil then
			off = _G[type_func](conn, Message_Delivery_DeliverMessage_oUserMessage_container, tvb, off, "Message_Delivery_DeliverMessage_oUserMessage_data")
		else
			Message_Delivery_DeliverMessage_oUserMessage_container:add(F.Message_Delivery_DeliverMessage_oUserMessage_data_bytes, tvb(off, Message_Delivery_DeliverMessage_oUserMessage_len))
			off = off + Message_Delivery_DeliverMessage_oUserMessage_data_len
		end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			
		}
	},
[0x19] =
	{
		["name"] = "Account Management",
		["methods"] = {
[1] = {
				["name"] = "CreateAccount",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Account_Management_CreateAccount_strPrincipalName = do_String(conn, tree, tvb, off, 'Account_Management_CreateAccount_strPrincipalName')
off, Account_Management_CreateAccount_strKey = do_String(conn, tree, tvb, off, 'Account_Management_CreateAccount_strKey')
off, Account_Management_CreateAccount_uiGroups = do_Uint32(conn, tree, tvb, off, 'Account_Management_CreateAccount_uiGroups')
off, Account_Management_CreateAccount_strEmail = do_String(conn, tree, tvb, off, 'Account_Management_CreateAccount_strEmail')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Account_Management_CreateAccount_retval = do_Result(conn, tree, tvb, off, 'Account_Management_CreateAccount_retval')
 end
			},
			[2] = {
				["name"] = "DeleteAccount",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Account_Management_DeleteAccount_idPrincipal = do_PID(conn, tree, tvb, off, 'Account_Management_DeleteAccount_idPrincipal')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[3] = {
				["name"] = "DisableAccount",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Account_Management_DisableAccount_idPrincipal = do_PID(conn, tree, tvb, off, 'Account_Management_DisableAccount_idPrincipal')
off, Account_Management_DisableAccount_dtUntil = do_DateTime(conn, tree, tvb, off, 'Account_Management_DisableAccount_dtUntil')
off, Account_Management_DisableAccount_strMessage = do_String(conn, tree, tvb, off, 'Account_Management_DisableAccount_strMessage')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Account_Management_DisableAccount_retval = do_Result(conn, tree, tvb, off, 'Account_Management_DisableAccount_retval')
 end
			},
			[4] = {
				["name"] = "ChangePassword",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Account_Management_ChangePassword_strNewKey = do_String(conn, tree, tvb, off, 'Account_Management_ChangePassword_strNewKey')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Account_Management_ChangePassword_retval = do_Bool(conn, tree, tvb, off, 'Account_Management_ChangePassword_retval')
 end
			},
			[5] = {
				["name"] = "TestCapability",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Account_Management_TestCapability_uiCapability = do_Uint32(conn, tree, tvb, off, 'Account_Management_TestCapability_uiCapability')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Account_Management_TestCapability_retval = do_Bool(conn, tree, tvb, off, 'Account_Management_TestCapability_retval')
 end
			},
			[6] = {
				["name"] = "GetName",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Account_Management_GetName_idPrincipal = do_PID(conn, tree, tvb, off, 'Account_Management_GetName_idPrincipal')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Account_Management_GetName_strName = do_String(conn, tree, tvb, off, 'Account_Management_GetName_strName')
 end
			},
			[7] = {
				["name"] = "GetAccountData",
				["request"] = function (conn, tree, tvb)
	local off = 0
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Account_Management_GetAccountData_retval = do_Uint32(conn, tree, tvb, off, 'Account_Management_GetAccountData_retval')
off = do_AccountData(conn, tree, tvb, off, 'Account_Management_GetAccountData_oAccountData')
 end
			},
			[8] = {
				["name"] = "GetPrivateData",
				["request"] = function (conn, tree, tvb)
	local off = 0
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Account_Management_GetPrivateData_retval = do_Bool(conn, tree, tvb, off, 'Account_Management_GetPrivateData_retval')

		local Account_Management_GetPrivateData_oData_container = tree:add(F.Data, tvb(off, 0))
		Account_Management_GetPrivateData_oData_container:set_text("Data")
	off, Account_Management_GetPrivateData_oData_type_name = do_String(conn, Account_Management_GetPrivateData_oData_container, tvb, off, 'Account_Management_GetPrivateData_oData_type_name')

off, Account_Management_GetPrivateData_oData_len_plus_four = do_Uint32(conn, Account_Management_GetPrivateData_oData_container, tvb, off, 'Account_Management_GetPrivateData_oData_len_plus_four')

off, Account_Management_GetPrivateData_oData_data_len = do_Uint32(conn, Account_Management_GetPrivateData_oData_container, tvb, off, 'Account_Management_GetPrivateData_oData_data_len')

local type_func = 'do_'..Account_Management_GetPrivateData_oData_type_name
		if _G[type_func] ~= nil then
			off = _G[type_func](conn, Account_Management_GetPrivateData_oData_container, tvb, off, "Account_Management_GetPrivateData_oData_data")
		else
			Account_Management_GetPrivateData_oData_container:add(F.Account_Management_GetPrivateData_oData_data_bytes, tvb(off, Account_Management_GetPrivateData_oData_len))
			off = off + Account_Management_GetPrivateData_oData_data_len
		end
	
 end
			},
			[9] = {
				["name"] = "GetPublicData",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Account_Management_GetPublicData_idPrincipal = do_PID(conn, tree, tvb, off, 'Account_Management_GetPublicData_idPrincipal')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Account_Management_GetPublicData_retval = do_Bool(conn, tree, tvb, off, 'Account_Management_GetPublicData_retval')

		local Account_Management_GetPublicData_oData_container = tree:add(F.Data, tvb(off, 0))
		Account_Management_GetPublicData_oData_container:set_text("Data")
	off, Account_Management_GetPublicData_oData_type_name = do_String(conn, Account_Management_GetPublicData_oData_container, tvb, off, 'Account_Management_GetPublicData_oData_type_name')

off, Account_Management_GetPublicData_oData_len_plus_four = do_Uint32(conn, Account_Management_GetPublicData_oData_container, tvb, off, 'Account_Management_GetPublicData_oData_len_plus_four')

off, Account_Management_GetPublicData_oData_data_len = do_Uint32(conn, Account_Management_GetPublicData_oData_container, tvb, off, 'Account_Management_GetPublicData_oData_data_len')

local type_func = 'do_'..Account_Management_GetPublicData_oData_type_name
		if _G[type_func] ~= nil then
			off = _G[type_func](conn, Account_Management_GetPublicData_oData_container, tvb, off, "Account_Management_GetPublicData_oData_data")
		else
			Account_Management_GetPublicData_oData_container:add(F.Account_Management_GetPublicData_oData_data_bytes, tvb(off, Account_Management_GetPublicData_oData_len))
			off = off + Account_Management_GetPublicData_oData_data_len
		end
	
 end
			},
			[10] = {
				["name"] = "GetMultiplePublicData",
				["request"] = function (conn, tree, tvb)
	local off = 0
-- list !! PID
	local Account_Management_GetMultiplePublicData_lstPrincipals_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Account_Management_GetMultiplePublicData_lstPrincipals_len, tvb(off,4))
	off = off + 4
	for i=1,Account_Management_GetMultiplePublicData_lstPrincipals_len do
	off, Account_Management_GetMultiplePublicData_lstPrincipals_item = do_PID(conn, subtree, tvb, off, 'Account_Management_GetMultiplePublicData_lstPrincipals_item')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Account_Management_GetMultiplePublicData_retval = do_Bool(conn, tree, tvb, off, 'Account_Management_GetMultiplePublicData_retval')
-- list !! Data
	local Account_Management_GetMultiplePublicData_oData_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Account_Management_GetMultiplePublicData_oData_len, tvb(off,4))
	off = off + 4
	for i=1,Account_Management_GetMultiplePublicData_oData_len do
	
		local Account_Management_GetMultiplePublicData_oData_item_container = subtree:add(F.Data, tvb(off, 0))
		Account_Management_GetMultiplePublicData_oData_item_container:set_text("Data")
	off, Account_Management_GetMultiplePublicData_oData_item_type_name = do_String(conn, Account_Management_GetMultiplePublicData_oData_item_container, tvb, off, 'Account_Management_GetMultiplePublicData_oData_item_type_name')

off, Account_Management_GetMultiplePublicData_oData_item_len_plus_four = do_Uint32(conn, Account_Management_GetMultiplePublicData_oData_item_container, tvb, off, 'Account_Management_GetMultiplePublicData_oData_item_len_plus_four')

off, Account_Management_GetMultiplePublicData_oData_item_data_len = do_Uint32(conn, Account_Management_GetMultiplePublicData_oData_item_container, tvb, off, 'Account_Management_GetMultiplePublicData_oData_item_data_len')

local type_func = 'do_'..Account_Management_GetMultiplePublicData_oData_item_type_name
		if _G[type_func] ~= nil then
			off = _G[type_func](conn, Account_Management_GetMultiplePublicData_oData_item_container, tvb, off, "Account_Management_GetMultiplePublicData_oData_item_data")
		else
			Account_Management_GetMultiplePublicData_oData_item_container:add(F.Account_Management_GetMultiplePublicData_oData_item_data_bytes, tvb(off, Account_Management_GetMultiplePublicData_oData_item_len))
			off = off + Account_Management_GetMultiplePublicData_oData_item_data_len
		end
	

	end
	
 end
			},
			[11] = {
				["name"] = "UpdateAccountName",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Account_Management_UpdateAccountName_strName = do_String(conn, tree, tvb, off, 'Account_Management_UpdateAccountName_strName')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Account_Management_UpdateAccountName_retval = do_Result(conn, tree, tvb, off, 'Account_Management_UpdateAccountName_retval')
 end
			},
			[12] = {
				["name"] = "UpdateAccountEmail",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Account_Management_UpdateAccountEmail_strName = do_String(conn, tree, tvb, off, 'Account_Management_UpdateAccountEmail_strName')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Account_Management_UpdateAccountEmail_retval = do_Result(conn, tree, tvb, off, 'Account_Management_UpdateAccountEmail_retval')
 end
			},
			[13] = {
				["name"] = "UpdateCustomData",
				["request"] = function (conn, tree, tvb)
	local off = 0

		local Account_Management_UpdateCustomData_oPublicData_container = tree:add(F.Data, tvb(off, 0))
		Account_Management_UpdateCustomData_oPublicData_container:set_text("Data")
	off, Account_Management_UpdateCustomData_oPublicData_type_name = do_String(conn, Account_Management_UpdateCustomData_oPublicData_container, tvb, off, 'Account_Management_UpdateCustomData_oPublicData_type_name')

off, Account_Management_UpdateCustomData_oPublicData_len_plus_four = do_Uint32(conn, Account_Management_UpdateCustomData_oPublicData_container, tvb, off, 'Account_Management_UpdateCustomData_oPublicData_len_plus_four')

off, Account_Management_UpdateCustomData_oPublicData_data_len = do_Uint32(conn, Account_Management_UpdateCustomData_oPublicData_container, tvb, off, 'Account_Management_UpdateCustomData_oPublicData_data_len')

local type_func = 'do_'..Account_Management_UpdateCustomData_oPublicData_type_name
		if _G[type_func] ~= nil then
			off = _G[type_func](conn, Account_Management_UpdateCustomData_oPublicData_container, tvb, off, "Account_Management_UpdateCustomData_oPublicData_data")
		else
			Account_Management_UpdateCustomData_oPublicData_container:add(F.Account_Management_UpdateCustomData_oPublicData_data_bytes, tvb(off, Account_Management_UpdateCustomData_oPublicData_len))
			off = off + Account_Management_UpdateCustomData_oPublicData_data_len
		end
	

		local Account_Management_UpdateCustomData_oPrivateData_container = tree:add(F.Data, tvb(off, 0))
		Account_Management_UpdateCustomData_oPrivateData_container:set_text("Data")
	off, Account_Management_UpdateCustomData_oPrivateData_type_name = do_String(conn, Account_Management_UpdateCustomData_oPrivateData_container, tvb, off, 'Account_Management_UpdateCustomData_oPrivateData_type_name')

off, Account_Management_UpdateCustomData_oPrivateData_len_plus_four = do_Uint32(conn, Account_Management_UpdateCustomData_oPrivateData_container, tvb, off, 'Account_Management_UpdateCustomData_oPrivateData_len_plus_four')

off, Account_Management_UpdateCustomData_oPrivateData_data_len = do_Uint32(conn, Account_Management_UpdateCustomData_oPrivateData_container, tvb, off, 'Account_Management_UpdateCustomData_oPrivateData_data_len')

local type_func = 'do_'..Account_Management_UpdateCustomData_oPrivateData_type_name
		if _G[type_func] ~= nil then
			off = _G[type_func](conn, Account_Management_UpdateCustomData_oPrivateData_container, tvb, off, "Account_Management_UpdateCustomData_oPrivateData_data")
		else
			Account_Management_UpdateCustomData_oPrivateData_container:add(F.Account_Management_UpdateCustomData_oPrivateData_data_bytes, tvb(off, Account_Management_UpdateCustomData_oPrivateData_len))
			off = off + Account_Management_UpdateCustomData_oPrivateData_data_len
		end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Account_Management_UpdateCustomData_retval = do_Result(conn, tree, tvb, off, 'Account_Management_UpdateCustomData_retval')
 end
			},
			[14] = {
				["name"] = "FindByNameRegex",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Account_Management_FindByNameRegex_uiGroups = do_Uint32(conn, tree, tvb, off, 'Account_Management_FindByNameRegex_uiGroups')
off, Account_Management_FindByNameRegex_strRegex = do_String(conn, tree, tvb, off, 'Account_Management_FindByNameRegex_strRegex')
off = do_ResultRange(conn, tree, tvb, off, 'Account_Management_FindByNameRegex_resultRange')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
-- list !! BasicAccountInfo
	local Account_Management_FindByNameRegex_plstAccounts_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Account_Management_FindByNameRegex_plstAccounts_len, tvb(off,4))
	off = off + 4
	for i=1,Account_Management_FindByNameRegex_plstAccounts_len do
	off = do_BasicAccountInfo(conn, subtree, tvb, off, 'Account_Management_FindByNameRegex_plstAccounts_item')

	end
	
 end
			},
			[15] = {
				["name"] = "UpdateAccountExpiryDate",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Account_Management_UpdateAccountExpiryDate_idPrincipal = do_PID(conn, tree, tvb, off, 'Account_Management_UpdateAccountExpiryDate_idPrincipal')
off, Account_Management_UpdateAccountExpiryDate_dtExpiry = do_DateTime(conn, tree, tvb, off, 'Account_Management_UpdateAccountExpiryDate_dtExpiry')
off, Account_Management_UpdateAccountExpiryDate_strExpiredMessage = do_String(conn, tree, tvb, off, 'Account_Management_UpdateAccountExpiryDate_strExpiredMessage')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[16] = {
				["name"] = "UpdateAccountEffectiveDate",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Account_Management_UpdateAccountEffectiveDate_idPrincipal = do_PID(conn, tree, tvb, off, 'Account_Management_UpdateAccountEffectiveDate_idPrincipal')
off, Account_Management_UpdateAccountEffectiveDate_dtEffectiveFrom = do_DateTime(conn, tree, tvb, off, 'Account_Management_UpdateAccountEffectiveDate_dtEffectiveFrom')
off, Account_Management_UpdateAccountEffectiveDate_strNotEffectiveMessage = do_String(conn, tree, tvb, off, 'Account_Management_UpdateAccountEffectiveDate_strNotEffectiveMessage')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[17] = {
				["name"] = "UpdateStatus",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Account_Management_UpdateStatus_strStatus = do_String(conn, tree, tvb, off, 'Account_Management_UpdateStatus_strStatus')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[18] = {
				["name"] = "GetStatus",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Account_Management_GetStatus_idPrincipal = do_PID(conn, tree, tvb, off, 'Account_Management_GetStatus_idPrincipal')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Account_Management_GetStatus_strStatus = do_String(conn, tree, tvb, off, 'Account_Management_GetStatus_strStatus')
 end
			},
			[19] = {
				["name"] = "GetLastConnectionStats",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Account_Management_GetLastConnectionStats_idPrincipal = do_PID(conn, tree, tvb, off, 'Account_Management_GetLastConnectionStats_idPrincipal')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Account_Management_GetLastConnectionStats_dtLastSessionLogin = do_DateTime(conn, tree, tvb, off, 'Account_Management_GetLastConnectionStats_dtLastSessionLogin')
off, Account_Management_GetLastConnectionStats_dtLastSessionLogout = do_DateTime(conn, tree, tvb, off, 'Account_Management_GetLastConnectionStats_dtLastSessionLogout')
off, Account_Management_GetLastConnectionStats_dtCurrentSessionLogin = do_DateTime(conn, tree, tvb, off, 'Account_Management_GetLastConnectionStats_dtCurrentSessionLogin')
 end
			},
			[20] = {
				["name"] = "ResetPassword",
				["request"] = function (conn, tree, tvb)
	local off = 0
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Account_Management_ResetPassword_retval = do_Bool(conn, tree, tvb, off, 'Account_Management_ResetPassword_retval')
 end
			},
			[21] = {
				["name"] = "CreateAccountWithCustomData",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Account_Management_CreateAccountWithCustomData_strPrincipalName = do_String(conn, tree, tvb, off, 'Account_Management_CreateAccountWithCustomData_strPrincipalName')
off, Account_Management_CreateAccountWithCustomData_strKey = do_String(conn, tree, tvb, off, 'Account_Management_CreateAccountWithCustomData_strKey')
off, Account_Management_CreateAccountWithCustomData_uiGroups = do_Uint32(conn, tree, tvb, off, 'Account_Management_CreateAccountWithCustomData_uiGroups')
off, Account_Management_CreateAccountWithCustomData_strEmail = do_String(conn, tree, tvb, off, 'Account_Management_CreateAccountWithCustomData_strEmail')

		local Account_Management_CreateAccountWithCustomData_oPublicData_container = tree:add(F.Data, tvb(off, 0))
		Account_Management_CreateAccountWithCustomData_oPublicData_container:set_text("Data")
	off, Account_Management_CreateAccountWithCustomData_oPublicData_type_name = do_String(conn, Account_Management_CreateAccountWithCustomData_oPublicData_container, tvb, off, 'Account_Management_CreateAccountWithCustomData_oPublicData_type_name')

off, Account_Management_CreateAccountWithCustomData_oPublicData_len_plus_four = do_Uint32(conn, Account_Management_CreateAccountWithCustomData_oPublicData_container, tvb, off, 'Account_Management_CreateAccountWithCustomData_oPublicData_len_plus_four')

off, Account_Management_CreateAccountWithCustomData_oPublicData_data_len = do_Uint32(conn, Account_Management_CreateAccountWithCustomData_oPublicData_container, tvb, off, 'Account_Management_CreateAccountWithCustomData_oPublicData_data_len')

local type_func = 'do_'..Account_Management_CreateAccountWithCustomData_oPublicData_type_name
		if _G[type_func] ~= nil then
			off = _G[type_func](conn, Account_Management_CreateAccountWithCustomData_oPublicData_container, tvb, off, "Account_Management_CreateAccountWithCustomData_oPublicData_data")
		else
			Account_Management_CreateAccountWithCustomData_oPublicData_container:add(F.Account_Management_CreateAccountWithCustomData_oPublicData_data_bytes, tvb(off, Account_Management_CreateAccountWithCustomData_oPublicData_len))
			off = off + Account_Management_CreateAccountWithCustomData_oPublicData_data_len
		end
	

		local Account_Management_CreateAccountWithCustomData_oPrivateData_container = tree:add(F.Data, tvb(off, 0))
		Account_Management_CreateAccountWithCustomData_oPrivateData_container:set_text("Data")
	off, Account_Management_CreateAccountWithCustomData_oPrivateData_type_name = do_String(conn, Account_Management_CreateAccountWithCustomData_oPrivateData_container, tvb, off, 'Account_Management_CreateAccountWithCustomData_oPrivateData_type_name')

off, Account_Management_CreateAccountWithCustomData_oPrivateData_len_plus_four = do_Uint32(conn, Account_Management_CreateAccountWithCustomData_oPrivateData_container, tvb, off, 'Account_Management_CreateAccountWithCustomData_oPrivateData_len_plus_four')

off, Account_Management_CreateAccountWithCustomData_oPrivateData_data_len = do_Uint32(conn, Account_Management_CreateAccountWithCustomData_oPrivateData_container, tvb, off, 'Account_Management_CreateAccountWithCustomData_oPrivateData_data_len')

local type_func = 'do_'..Account_Management_CreateAccountWithCustomData_oPrivateData_type_name
		if _G[type_func] ~= nil then
			off = _G[type_func](conn, Account_Management_CreateAccountWithCustomData_oPrivateData_container, tvb, off, "Account_Management_CreateAccountWithCustomData_oPrivateData_data")
		else
			Account_Management_CreateAccountWithCustomData_oPrivateData_container:add(F.Account_Management_CreateAccountWithCustomData_oPrivateData_data_bytes, tvb(off, Account_Management_CreateAccountWithCustomData_oPrivateData_len))
			off = off + Account_Management_CreateAccountWithCustomData_oPrivateData_data_len
		end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[22] = {
				["name"] = "RetrieveAccount",
				["request"] = function (conn, tree, tvb)
	local off = 0
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off = do_AccountData(conn, tree, tvb, off, 'Account_Management_RetrieveAccount_oAccountData')

		local Account_Management_RetrieveAccount_oPublicData_container = tree:add(F.Data, tvb(off, 0))
		Account_Management_RetrieveAccount_oPublicData_container:set_text("Data")
	off, Account_Management_RetrieveAccount_oPublicData_type_name = do_String(conn, Account_Management_RetrieveAccount_oPublicData_container, tvb, off, 'Account_Management_RetrieveAccount_oPublicData_type_name')

off, Account_Management_RetrieveAccount_oPublicData_len_plus_four = do_Uint32(conn, Account_Management_RetrieveAccount_oPublicData_container, tvb, off, 'Account_Management_RetrieveAccount_oPublicData_len_plus_four')

off, Account_Management_RetrieveAccount_oPublicData_data_len = do_Uint32(conn, Account_Management_RetrieveAccount_oPublicData_container, tvb, off, 'Account_Management_RetrieveAccount_oPublicData_data_len')

local type_func = 'do_'..Account_Management_RetrieveAccount_oPublicData_type_name
		if _G[type_func] ~= nil then
			off = _G[type_func](conn, Account_Management_RetrieveAccount_oPublicData_container, tvb, off, "Account_Management_RetrieveAccount_oPublicData_data")
		else
			Account_Management_RetrieveAccount_oPublicData_container:add(F.Account_Management_RetrieveAccount_oPublicData_data_bytes, tvb(off, Account_Management_RetrieveAccount_oPublicData_len))
			off = off + Account_Management_RetrieveAccount_oPublicData_data_len
		end
	

		local Account_Management_RetrieveAccount_oPrivateData_container = tree:add(F.Data, tvb(off, 0))
		Account_Management_RetrieveAccount_oPrivateData_container:set_text("Data")
	off, Account_Management_RetrieveAccount_oPrivateData_type_name = do_String(conn, Account_Management_RetrieveAccount_oPrivateData_container, tvb, off, 'Account_Management_RetrieveAccount_oPrivateData_type_name')

off, Account_Management_RetrieveAccount_oPrivateData_len_plus_four = do_Uint32(conn, Account_Management_RetrieveAccount_oPrivateData_container, tvb, off, 'Account_Management_RetrieveAccount_oPrivateData_len_plus_four')

off, Account_Management_RetrieveAccount_oPrivateData_data_len = do_Uint32(conn, Account_Management_RetrieveAccount_oPrivateData_container, tvb, off, 'Account_Management_RetrieveAccount_oPrivateData_data_len')

local type_func = 'do_'..Account_Management_RetrieveAccount_oPrivateData_type_name
		if _G[type_func] ~= nil then
			off = _G[type_func](conn, Account_Management_RetrieveAccount_oPrivateData_container, tvb, off, "Account_Management_RetrieveAccount_oPrivateData_data")
		else
			Account_Management_RetrieveAccount_oPrivateData_container:add(F.Account_Management_RetrieveAccount_oPrivateData_data_bytes, tvb(off, Account_Management_RetrieveAccount_oPrivateData_len))
			off = off + Account_Management_RetrieveAccount_oPrivateData_data_len
		end
	
 end
			},
			[23] = {
				["name"] = "UpdateAccount",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Account_Management_UpdateAccount_strKey = do_String(conn, tree, tvb, off, 'Account_Management_UpdateAccount_strKey')
off, Account_Management_UpdateAccount_strEmail = do_String(conn, tree, tvb, off, 'Account_Management_UpdateAccount_strEmail')

		local Account_Management_UpdateAccount_oPublicData_container = tree:add(F.Data, tvb(off, 0))
		Account_Management_UpdateAccount_oPublicData_container:set_text("Data")
	off, Account_Management_UpdateAccount_oPublicData_type_name = do_String(conn, Account_Management_UpdateAccount_oPublicData_container, tvb, off, 'Account_Management_UpdateAccount_oPublicData_type_name')

off, Account_Management_UpdateAccount_oPublicData_len_plus_four = do_Uint32(conn, Account_Management_UpdateAccount_oPublicData_container, tvb, off, 'Account_Management_UpdateAccount_oPublicData_len_plus_four')

off, Account_Management_UpdateAccount_oPublicData_data_len = do_Uint32(conn, Account_Management_UpdateAccount_oPublicData_container, tvb, off, 'Account_Management_UpdateAccount_oPublicData_data_len')

local type_func = 'do_'..Account_Management_UpdateAccount_oPublicData_type_name
		if _G[type_func] ~= nil then
			off = _G[type_func](conn, Account_Management_UpdateAccount_oPublicData_container, tvb, off, "Account_Management_UpdateAccount_oPublicData_data")
		else
			Account_Management_UpdateAccount_oPublicData_container:add(F.Account_Management_UpdateAccount_oPublicData_data_bytes, tvb(off, Account_Management_UpdateAccount_oPublicData_len))
			off = off + Account_Management_UpdateAccount_oPublicData_data_len
		end
	

		local Account_Management_UpdateAccount_oPrivateData_container = tree:add(F.Data, tvb(off, 0))
		Account_Management_UpdateAccount_oPrivateData_container:set_text("Data")
	off, Account_Management_UpdateAccount_oPrivateData_type_name = do_String(conn, Account_Management_UpdateAccount_oPrivateData_container, tvb, off, 'Account_Management_UpdateAccount_oPrivateData_type_name')

off, Account_Management_UpdateAccount_oPrivateData_len_plus_four = do_Uint32(conn, Account_Management_UpdateAccount_oPrivateData_container, tvb, off, 'Account_Management_UpdateAccount_oPrivateData_len_plus_four')

off, Account_Management_UpdateAccount_oPrivateData_data_len = do_Uint32(conn, Account_Management_UpdateAccount_oPrivateData_container, tvb, off, 'Account_Management_UpdateAccount_oPrivateData_data_len')

local type_func = 'do_'..Account_Management_UpdateAccount_oPrivateData_type_name
		if _G[type_func] ~= nil then
			off = _G[type_func](conn, Account_Management_UpdateAccount_oPrivateData_container, tvb, off, "Account_Management_UpdateAccount_oPrivateData_data")
		else
			Account_Management_UpdateAccount_oPrivateData_container:add(F.Account_Management_UpdateAccount_oPrivateData_data_bytes, tvb(off, Account_Management_UpdateAccount_oPrivateData_len))
			off = off + Account_Management_UpdateAccount_oPrivateData_data_len
		end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[24] = {
				["name"] = "ChangePasswordByGuest",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Account_Management_ChangePasswordByGuest_strPrincipalName = do_String(conn, tree, tvb, off, 'Account_Management_ChangePasswordByGuest_strPrincipalName')
off, Account_Management_ChangePasswordByGuest_strEmail = do_String(conn, tree, tvb, off, 'Account_Management_ChangePasswordByGuest_strEmail')
off, Account_Management_ChangePasswordByGuest_strKey = do_String(conn, tree, tvb, off, 'Account_Management_ChangePasswordByGuest_strKey')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[25] = {
				["name"] = "FindByNameLike",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Account_Management_FindByNameLike_uiGroups = do_Uint32(conn, tree, tvb, off, 'Account_Management_FindByNameLike_uiGroups')
off, Account_Management_FindByNameLike_strLike = do_String(conn, tree, tvb, off, 'Account_Management_FindByNameLike_strLike')
off = do_ResultRange(conn, tree, tvb, off, 'Account_Management_FindByNameLike_resultRange')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
-- list !! BasicAccountInfo
	local Account_Management_FindByNameLike_plstAccounts_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Account_Management_FindByNameLike_plstAccounts_len, tvb(off,4))
	off = off + 4
	for i=1,Account_Management_FindByNameLike_plstAccounts_len do
	off = do_BasicAccountInfo(conn, subtree, tvb, off, 'Account_Management_FindByNameLike_plstAccounts_item')

	end
	
 end
			},
			[26] = {
				["name"] = "CustomCreateAccount",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Account_Management_CustomCreateAccount_strPrincipalName = do_String(conn, tree, tvb, off, 'Account_Management_CustomCreateAccount_strPrincipalName')
off, Account_Management_CustomCreateAccount_strKey = do_String(conn, tree, tvb, off, 'Account_Management_CustomCreateAccount_strKey')
off, Account_Management_CustomCreateAccount_uiGroups = do_Uint32(conn, tree, tvb, off, 'Account_Management_CustomCreateAccount_uiGroups')
off, Account_Management_CustomCreateAccount_strEmail = do_String(conn, tree, tvb, off, 'Account_Management_CustomCreateAccount_strEmail')

		local Account_Management_CustomCreateAccount_oAuthData_container = tree:add(F.Data, tvb(off, 0))
		Account_Management_CustomCreateAccount_oAuthData_container:set_text("Data")
	off, Account_Management_CustomCreateAccount_oAuthData_type_name = do_String(conn, Account_Management_CustomCreateAccount_oAuthData_container, tvb, off, 'Account_Management_CustomCreateAccount_oAuthData_type_name')

off, Account_Management_CustomCreateAccount_oAuthData_len_plus_four = do_Uint32(conn, Account_Management_CustomCreateAccount_oAuthData_container, tvb, off, 'Account_Management_CustomCreateAccount_oAuthData_len_plus_four')

off, Account_Management_CustomCreateAccount_oAuthData_data_len = do_Uint32(conn, Account_Management_CustomCreateAccount_oAuthData_container, tvb, off, 'Account_Management_CustomCreateAccount_oAuthData_data_len')

local type_func = 'do_'..Account_Management_CustomCreateAccount_oAuthData_type_name
		if _G[type_func] ~= nil then
			off = _G[type_func](conn, Account_Management_CustomCreateAccount_oAuthData_container, tvb, off, "Account_Management_CustomCreateAccount_oAuthData_data")
		else
			Account_Management_CustomCreateAccount_oAuthData_container:add(F.Account_Management_CustomCreateAccount_oAuthData_data_bytes, tvb(off, Account_Management_CustomCreateAccount_oAuthData_len))
			off = off + Account_Management_CustomCreateAccount_oAuthData_data_len
		end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Account_Management_CustomCreateAccount_pid = do_PID(conn, tree, tvb, off, 'Account_Management_CustomCreateAccount_pid')
 end
			},
			[27] = {
				["name"] = "NintendoCreateAccount",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Account_Management_NintendoCreateAccount_strPrincipalName = do_String(conn, tree, tvb, off, 'Account_Management_NintendoCreateAccount_strPrincipalName')
off, Account_Management_NintendoCreateAccount_strKey = do_String(conn, tree, tvb, off, 'Account_Management_NintendoCreateAccount_strKey')
off, Account_Management_NintendoCreateAccount_uiGroups = do_Uint32(conn, tree, tvb, off, 'Account_Management_NintendoCreateAccount_uiGroups')
off, Account_Management_NintendoCreateAccount_strEmail = do_String(conn, tree, tvb, off, 'Account_Management_NintendoCreateAccount_strEmail')

		local Account_Management_NintendoCreateAccount_oAuthData_container = tree:add(F.Data, tvb(off, 0))
		Account_Management_NintendoCreateAccount_oAuthData_container:set_text("Data")
	off, Account_Management_NintendoCreateAccount_oAuthData_type_name = do_String(conn, Account_Management_NintendoCreateAccount_oAuthData_container, tvb, off, 'Account_Management_NintendoCreateAccount_oAuthData_type_name')

off, Account_Management_NintendoCreateAccount_oAuthData_len_plus_four = do_Uint32(conn, Account_Management_NintendoCreateAccount_oAuthData_container, tvb, off, 'Account_Management_NintendoCreateAccount_oAuthData_len_plus_four')

off, Account_Management_NintendoCreateAccount_oAuthData_data_len = do_Uint32(conn, Account_Management_NintendoCreateAccount_oAuthData_container, tvb, off, 'Account_Management_NintendoCreateAccount_oAuthData_data_len')

local type_func = 'do_'..Account_Management_NintendoCreateAccount_oAuthData_type_name
		if _G[type_func] ~= nil then
			off = _G[type_func](conn, Account_Management_NintendoCreateAccount_oAuthData_container, tvb, off, "Account_Management_NintendoCreateAccount_oAuthData_data")
		else
			Account_Management_NintendoCreateAccount_oAuthData_container:add(F.Account_Management_NintendoCreateAccount_oAuthData_data_bytes, tvb(off, Account_Management_NintendoCreateAccount_oAuthData_len))
			off = off + Account_Management_NintendoCreateAccount_oAuthData_data_len
		end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Account_Management_NintendoCreateAccount_pid = do_PID(conn, tree, tvb, off, 'Account_Management_NintendoCreateAccount_pid')
off, Account_Management_NintendoCreateAccount_pidHMAC = do_String(conn, tree, tvb, off, 'Account_Management_NintendoCreateAccount_pidHMAC')
 end
			},
			[28] = {
				["name"] = "LookupOrCreateAccount",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Account_Management_LookupOrCreateAccount_strPrincipalName = do_String(conn, tree, tvb, off, 'Account_Management_LookupOrCreateAccount_strPrincipalName')
off, Account_Management_LookupOrCreateAccount_strKey = do_String(conn, tree, tvb, off, 'Account_Management_LookupOrCreateAccount_strKey')
off, Account_Management_LookupOrCreateAccount_uiGroups = do_Uint32(conn, tree, tvb, off, 'Account_Management_LookupOrCreateAccount_uiGroups')
off, Account_Management_LookupOrCreateAccount_strEmail = do_String(conn, tree, tvb, off, 'Account_Management_LookupOrCreateAccount_strEmail')

		local Account_Management_LookupOrCreateAccount_oAuthData_container = tree:add(F.Data, tvb(off, 0))
		Account_Management_LookupOrCreateAccount_oAuthData_container:set_text("Data")
	off, Account_Management_LookupOrCreateAccount_oAuthData_type_name = do_String(conn, Account_Management_LookupOrCreateAccount_oAuthData_container, tvb, off, 'Account_Management_LookupOrCreateAccount_oAuthData_type_name')

off, Account_Management_LookupOrCreateAccount_oAuthData_len_plus_four = do_Uint32(conn, Account_Management_LookupOrCreateAccount_oAuthData_container, tvb, off, 'Account_Management_LookupOrCreateAccount_oAuthData_len_plus_four')

off, Account_Management_LookupOrCreateAccount_oAuthData_data_len = do_Uint32(conn, Account_Management_LookupOrCreateAccount_oAuthData_container, tvb, off, 'Account_Management_LookupOrCreateAccount_oAuthData_data_len')

local type_func = 'do_'..Account_Management_LookupOrCreateAccount_oAuthData_type_name
		if _G[type_func] ~= nil then
			off = _G[type_func](conn, Account_Management_LookupOrCreateAccount_oAuthData_container, tvb, off, "Account_Management_LookupOrCreateAccount_oAuthData_data")
		else
			Account_Management_LookupOrCreateAccount_oAuthData_container:add(F.Account_Management_LookupOrCreateAccount_oAuthData_data_bytes, tvb(off, Account_Management_LookupOrCreateAccount_oAuthData_len))
			off = off + Account_Management_LookupOrCreateAccount_oAuthData_data_len
		end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Account_Management_LookupOrCreateAccount_pid = do_PID(conn, tree, tvb, off, 'Account_Management_LookupOrCreateAccount_pid')
 end
			},
			[29] = {
				["name"] = "DisconnectPrincipal",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Account_Management_DisconnectPrincipal_idPrincipal = do_PID(conn, tree, tvb, off, 'Account_Management_DisconnectPrincipal_idPrincipal')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Account_Management_DisconnectPrincipal_retval = do_Bool(conn, tree, tvb, off, 'Account_Management_DisconnectPrincipal_retval')
 end
			},
			[30] = {
				["name"] = "DisconnectAllPrincipals",
				["request"] = function (conn, tree, tvb)
	local off = 0
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Account_Management_DisconnectAllPrincipals_retval = do_Bool(conn, tree, tvb, off, 'Account_Management_DisconnectAllPrincipals_retval')
 end
			},
			
		}
	},
[0x73] =
	{
		["name"] = "Data Store",
		["methods"] = {
[1] = {
				["name"] = "PrepareGetObjectV1",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_DataStorePrepareGetParamV1(conn, tree, tvb, off, 'Data_Store_PrepareGetObjectV1_param')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off = do_DataStoreReqGetInfoV1(conn, tree, tvb, off, 'Data_Store_PrepareGetObjectV1_pReqGetInfo')
 end
			},
			[2] = {
				["name"] = "PreparePostObjectV1",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_DataStorePreparePostParamV1(conn, tree, tvb, off, 'Data_Store_PreparePostObjectV1_param')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off = do_DataStoreReqPostInfoV1(conn, tree, tvb, off, 'Data_Store_PreparePostObjectV1_pReqPostInfo')
 end
			},
			[3] = {
				["name"] = "CompletePostObjectV1",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_DataStoreCompletePostParamV1(conn, tree, tvb, off, 'Data_Store_CompletePostObjectV1_param')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[4] = {
				["name"] = "DeleteObject",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_DataStoreDeleteParam(conn, tree, tvb, off, 'Data_Store_DeleteObject_param')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[5] = {
				["name"] = "DeleteObjects",
				["request"] = function (conn, tree, tvb)
	local off = 0
-- list !! DataStoreDeleteParam
	local Data_Store_DeleteObjects_params_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Data_Store_DeleteObjects_params_len, tvb(off,4))
	off = off + 4
	for i=1,Data_Store_DeleteObjects_params_len do
	off = do_DataStoreDeleteParam(conn, subtree, tvb, off, 'Data_Store_DeleteObjects_params_item')

	end
	
off, Data_Store_DeleteObjects_transactional = do_Bool(conn, tree, tvb, off, 'Data_Store_DeleteObjects_transactional')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
-- list !! Result
	local Data_Store_DeleteObjects_pResults_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Data_Store_DeleteObjects_pResults_len, tvb(off,4))
	off = off + 4
	for i=1,Data_Store_DeleteObjects_pResults_len do
	off, Data_Store_DeleteObjects_pResults_item = do_Result(conn, subtree, tvb, off, 'Data_Store_DeleteObjects_pResults_item')

	end
	
 end
			},
			[6] = {
				["name"] = "ChangeMetaV1",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_DataStoreChangeMetaParamV1(conn, tree, tvb, off, 'Data_Store_ChangeMetaV1_param')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[7] = {
				["name"] = "ChangeMetasV1",
				["request"] = function (conn, tree, tvb)
	local off = 0
-- list !! Uint64
	local Data_Store_ChangeMetasV1_dataIds_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Data_Store_ChangeMetasV1_dataIds_len, tvb(off,4))
	off = off + 4
	for i=1,Data_Store_ChangeMetasV1_dataIds_len do
	off, Data_Store_ChangeMetasV1_dataIds_item = do_Uint64(conn, subtree, tvb, off, 'Data_Store_ChangeMetasV1_dataIds_item')

	end
	
-- list !! DataStoreChangeMetaParamV1
	local Data_Store_ChangeMetasV1_params_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Data_Store_ChangeMetasV1_params_len, tvb(off,4))
	off = off + 4
	for i=1,Data_Store_ChangeMetasV1_params_len do
	off = do_DataStoreChangeMetaParamV1(conn, subtree, tvb, off, 'Data_Store_ChangeMetasV1_params_item')

	end
	
off, Data_Store_ChangeMetasV1_transactional = do_Bool(conn, tree, tvb, off, 'Data_Store_ChangeMetasV1_transactional')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
-- list !! Result
	local Data_Store_ChangeMetasV1_pResults_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Data_Store_ChangeMetasV1_pResults_len, tvb(off,4))
	off = off + 4
	for i=1,Data_Store_ChangeMetasV1_pResults_len do
	off, Data_Store_ChangeMetasV1_pResults_item = do_Result(conn, subtree, tvb, off, 'Data_Store_ChangeMetasV1_pResults_item')

	end
	
 end
			},
			[8] = {
				["name"] = "GetMeta",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_DataStoreGetMetaParam(conn, tree, tvb, off, 'Data_Store_GetMeta_param')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off = do_DataStoreMetaInfo(conn, tree, tvb, off, 'Data_Store_GetMeta_pMetaInfo')
 end
			},
			[9] = {
				["name"] = "GetMetas",
				["request"] = function (conn, tree, tvb)
	local off = 0
-- list !! Uint64
	local Data_Store_GetMetas_dataIds_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Data_Store_GetMetas_dataIds_len, tvb(off,4))
	off = off + 4
	for i=1,Data_Store_GetMetas_dataIds_len do
	off, Data_Store_GetMetas_dataIds_item = do_Uint64(conn, subtree, tvb, off, 'Data_Store_GetMetas_dataIds_item')

	end
	
off = do_DataStoreGetMetaParam(conn, tree, tvb, off, 'Data_Store_GetMetas_param')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
-- list !! DataStoreMetaInfo
	local Data_Store_GetMetas_pMetaInfo_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Data_Store_GetMetas_pMetaInfo_len, tvb(off,4))
	off = off + 4
	for i=1,Data_Store_GetMetas_pMetaInfo_len do
	off = do_DataStoreMetaInfo(conn, subtree, tvb, off, 'Data_Store_GetMetas_pMetaInfo_item')

	end
	
-- list !! Result
	local Data_Store_GetMetas_pResults_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Data_Store_GetMetas_pResults_len, tvb(off,4))
	off = off + 4
	for i=1,Data_Store_GetMetas_pResults_len do
	off, Data_Store_GetMetas_pResults_item = do_Result(conn, subtree, tvb, off, 'Data_Store_GetMetas_pResults_item')

	end
	
 end
			},
			[10] = {
				["name"] = "PrepareUpdateObject",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_DataStorePrepareUpdateParam(conn, tree, tvb, off, 'Data_Store_PrepareUpdateObject_param')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off = do_DataStoreReqUpdateInfo(conn, tree, tvb, off, 'Data_Store_PrepareUpdateObject_pReqUpdateInfo')
 end
			},
			[11] = {
				["name"] = "CompleteUpdateObject",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_DataStoreCompleteUpdateParam(conn, tree, tvb, off, 'Data_Store_CompleteUpdateObject_param')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[12] = {
				["name"] = "SearchObject",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_DataStoreSearchParam(conn, tree, tvb, off, 'Data_Store_SearchObject_param')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off = do_DataStoreSearchResult(conn, tree, tvb, off, 'Data_Store_SearchObject_pSearchResult')
 end
			},
			[13] = {
				["name"] = "GetNotificationUrl",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_DataStoreGetNotificationUrlParam(conn, tree, tvb, off, 'Data_Store_GetNotificationUrl_param')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off = do_DataStoreReqGetNotificationUrlInfo(conn, tree, tvb, off, 'Data_Store_GetNotificationUrl_info')
 end
			},
			[14] = {
				["name"] = "GetNewArrivedNotificationsV1",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_DataStoreGetNewArrivedNotificationsParam(conn, tree, tvb, off, 'Data_Store_GetNewArrivedNotificationsV1_param')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
-- list !! DataStoreNotificationV1
	local Data_Store_GetNewArrivedNotificationsV1_pResult_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Data_Store_GetNewArrivedNotificationsV1_pResult_len, tvb(off,4))
	off = off + 4
	for i=1,Data_Store_GetNewArrivedNotificationsV1_pResult_len do
	off = do_DataStoreNotificationV1(conn, subtree, tvb, off, 'Data_Store_GetNewArrivedNotificationsV1_pResult_item')

	end
	
off, Data_Store_GetNewArrivedNotificationsV1_pHasNext = do_Bool(conn, tree, tvb, off, 'Data_Store_GetNewArrivedNotificationsV1_pHasNext')
 end
			},
			[15] = {
				["name"] = "RateObject",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_DataStoreRatingTarget(conn, tree, tvb, off, 'Data_Store_RateObject_target')
off = do_DataStoreRateObjectParam(conn, tree, tvb, off, 'Data_Store_RateObject_param')
off, Data_Store_RateObject_fetchRatings = do_Bool(conn, tree, tvb, off, 'Data_Store_RateObject_fetchRatings')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off = do_DataStoreRatingInfo(conn, tree, tvb, off, 'Data_Store_RateObject_pRating')
 end
			},
			[16] = {
				["name"] = "GetRating",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_DataStoreRatingTarget(conn, tree, tvb, off, 'Data_Store_GetRating_target')
off, Data_Store_GetRating_accessPassword = do_Uint64(conn, tree, tvb, off, 'Data_Store_GetRating_accessPassword')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off = do_DataStoreRatingInfo(conn, tree, tvb, off, 'Data_Store_GetRating_pRating')
 end
			},
			[17] = {
				["name"] = "GetRatings",
				["request"] = function (conn, tree, tvb)
	local off = 0
-- list !! Uint64
	local Data_Store_GetRatings_dataIds_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Data_Store_GetRatings_dataIds_len, tvb(off,4))
	off = off + 4
	for i=1,Data_Store_GetRatings_dataIds_len do
	off, Data_Store_GetRatings_dataIds_item = do_Uint64(conn, subtree, tvb, off, 'Data_Store_GetRatings_dataIds_item')

	end
	
off, Data_Store_GetRatings_accessPassword = do_Uint64(conn, tree, tvb, off, 'Data_Store_GetRatings_accessPassword')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
--[[ Stubbed! Missing type (in list) List<DataStoreRatingInfoWithSlot>]]
-- list !! Result
	local Data_Store_GetRatings_pResults_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Data_Store_GetRatings_pResults_len, tvb(off,4))
	off = off + 4
	for i=1,Data_Store_GetRatings_pResults_len do
	off, Data_Store_GetRatings_pResults_item = do_Result(conn, subtree, tvb, off, 'Data_Store_GetRatings_pResults_item')

	end
	
 end
			},
			[18] = {
				["name"] = "ResetRating",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_DataStoreRatingTarget(conn, tree, tvb, off, 'Data_Store_ResetRating_target')
off, Data_Store_ResetRating_updatePassword = do_Uint64(conn, tree, tvb, off, 'Data_Store_ResetRating_updatePassword')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[19] = {
				["name"] = "ResetRatings",
				["request"] = function (conn, tree, tvb)
	local off = 0
-- list !! Uint64
	local Data_Store_ResetRatings_dataIds_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Data_Store_ResetRatings_dataIds_len, tvb(off,4))
	off = off + 4
	for i=1,Data_Store_ResetRatings_dataIds_len do
	off, Data_Store_ResetRatings_dataIds_item = do_Uint64(conn, subtree, tvb, off, 'Data_Store_ResetRatings_dataIds_item')

	end
	
off, Data_Store_ResetRatings_transactional = do_Bool(conn, tree, tvb, off, 'Data_Store_ResetRatings_transactional')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
-- list !! Result
	local Data_Store_ResetRatings_pResults_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Data_Store_ResetRatings_pResults_len, tvb(off,4))
	off = off + 4
	for i=1,Data_Store_ResetRatings_pResults_len do
	off, Data_Store_ResetRatings_pResults_item = do_Result(conn, subtree, tvb, off, 'Data_Store_ResetRatings_pResults_item')

	end
	
 end
			},
			[20] = {
				["name"] = "GetSpecificMetaV1",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_DataStoreGetSpecificMetaParamV1(conn, tree, tvb, off, 'Data_Store_GetSpecificMetaV1_param')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
-- list !! DataStoreSpecificMetaInfoV1
	local Data_Store_GetSpecificMetaV1_pMetaInfos_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Data_Store_GetSpecificMetaV1_pMetaInfos_len, tvb(off,4))
	off = off + 4
	for i=1,Data_Store_GetSpecificMetaV1_pMetaInfos_len do
	off = do_DataStoreSpecificMetaInfoV1(conn, subtree, tvb, off, 'Data_Store_GetSpecificMetaV1_pMetaInfos_item')

	end
	
 end
			},
			[21] = {
				["name"] = "PostMetaBinary",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_DataStorePreparePostParam(conn, tree, tvb, off, 'Data_Store_PostMetaBinary_param')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Data_Store_PostMetaBinary_dataId = do_Uint64(conn, tree, tvb, off, 'Data_Store_PostMetaBinary_dataId')
 end
			},
			[22] = {
				["name"] = "TouchObject",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_DataStoreTouchObjectParam(conn, tree, tvb, off, 'Data_Store_TouchObject_param')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[23] = {
				["name"] = "GetRatingWithLog",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_DataStoreRatingTarget(conn, tree, tvb, off, 'Data_Store_GetRatingWithLog_target')
off, Data_Store_GetRatingWithLog_accessPassword = do_Uint64(conn, tree, tvb, off, 'Data_Store_GetRatingWithLog_accessPassword')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off = do_DataStoreRatingInfo(conn, tree, tvb, off, 'Data_Store_GetRatingWithLog_pRating')
off = do_DataStoreRatingLog(conn, tree, tvb, off, 'Data_Store_GetRatingWithLog_pRatingLog')
 end
			},
			[24] = {
				["name"] = "PreparePostObject",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_DataStorePreparePostParam(conn, tree, tvb, off, 'Data_Store_PreparePostObject_param')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off = do_DataStoreReqPostInfo(conn, tree, tvb, off, 'Data_Store_PreparePostObject_pReqPostInfo')
 end
			},
			[25] = {
				["name"] = "PrepareGetObject",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_DataStorePrepareGetParam(conn, tree, tvb, off, 'Data_Store_PrepareGetObject_param')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off = do_DataStoreReqGetInfo(conn, tree, tvb, off, 'Data_Store_PrepareGetObject_pReqGetInfo')
 end
			},
			[26] = {
				["name"] = "CompletePostObject",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_DataStoreCompletePostParam(conn, tree, tvb, off, 'Data_Store_CompletePostObject_param')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[27] = {
				["name"] = "GetNewArrivedNotifications",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_DataStoreGetNewArrivedNotificationsParam(conn, tree, tvb, off, 'Data_Store_GetNewArrivedNotifications_param')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
-- list !! DataStoreNotification
	local Data_Store_GetNewArrivedNotifications_pResult_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Data_Store_GetNewArrivedNotifications_pResult_len, tvb(off,4))
	off = off + 4
	for i=1,Data_Store_GetNewArrivedNotifications_pResult_len do
	off = do_DataStoreNotification(conn, subtree, tvb, off, 'Data_Store_GetNewArrivedNotifications_pResult_item')

	end
	
off, Data_Store_GetNewArrivedNotifications_pHasNext = do_Bool(conn, tree, tvb, off, 'Data_Store_GetNewArrivedNotifications_pHasNext')
 end
			},
			[28] = {
				["name"] = "GetSpecificMeta",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_DataStoreGetSpecificMetaParam(conn, tree, tvb, off, 'Data_Store_GetSpecificMeta_param')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
-- list !! DataStoreSpecificMetaInfo
	local Data_Store_GetSpecificMeta_pMetaInfos_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Data_Store_GetSpecificMeta_pMetaInfos_len, tvb(off,4))
	off = off + 4
	for i=1,Data_Store_GetSpecificMeta_pMetaInfos_len do
	off = do_DataStoreSpecificMetaInfo(conn, subtree, tvb, off, 'Data_Store_GetSpecificMeta_pMetaInfos_item')

	end
	
 end
			},
			[29] = {
				["name"] = "GetPersistenceInfo",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Data_Store_GetPersistenceInfo_ownerId = do_PID(conn, tree, tvb, off, 'Data_Store_GetPersistenceInfo_ownerId')
off, Data_Store_GetPersistenceInfo_persistenceSlotId = do_Uint16(conn, tree, tvb, off, 'Data_Store_GetPersistenceInfo_persistenceSlotId')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off = do_DataStorePersistenceInfo(conn, tree, tvb, off, 'Data_Store_GetPersistenceInfo_pPersistenceInfo')
 end
			},
			[30] = {
				["name"] = "GetPersistenceInfos",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Data_Store_GetPersistenceInfos_ownerId = do_PID(conn, tree, tvb, off, 'Data_Store_GetPersistenceInfos_ownerId')
-- list !! Uint16
	local Data_Store_GetPersistenceInfos_persistenceSlotIds_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Data_Store_GetPersistenceInfos_persistenceSlotIds_len, tvb(off,4))
	off = off + 4
	for i=1,Data_Store_GetPersistenceInfos_persistenceSlotIds_len do
	off, Data_Store_GetPersistenceInfos_persistenceSlotIds_item = do_Uint16(conn, subtree, tvb, off, 'Data_Store_GetPersistenceInfos_persistenceSlotIds_item')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
-- list !! DataStorePersistenceInfo
	local Data_Store_GetPersistenceInfos_pPersistenceInfo_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Data_Store_GetPersistenceInfos_pPersistenceInfo_len, tvb(off,4))
	off = off + 4
	for i=1,Data_Store_GetPersistenceInfos_pPersistenceInfo_len do
	off = do_DataStorePersistenceInfo(conn, subtree, tvb, off, 'Data_Store_GetPersistenceInfos_pPersistenceInfo_item')

	end
	
-- list !! Result
	local Data_Store_GetPersistenceInfos_pResults_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Data_Store_GetPersistenceInfos_pResults_len, tvb(off,4))
	off = off + 4
	for i=1,Data_Store_GetPersistenceInfos_pResults_len do
	off, Data_Store_GetPersistenceInfos_pResults_item = do_Result(conn, subtree, tvb, off, 'Data_Store_GetPersistenceInfos_pResults_item')

	end
	
 end
			},
			[31] = {
				["name"] = "PerpetuateObject",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Data_Store_PerpetuateObject_persistenceSlotId = do_Uint16(conn, tree, tvb, off, 'Data_Store_PerpetuateObject_persistenceSlotId')
off, Data_Store_PerpetuateObject_dataId = do_Uint64(conn, tree, tvb, off, 'Data_Store_PerpetuateObject_dataId')
off, Data_Store_PerpetuateObject_deleteLastObject = do_Bool(conn, tree, tvb, off, 'Data_Store_PerpetuateObject_deleteLastObject')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[32] = {
				["name"] = "UnperpetuateObject",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Data_Store_UnperpetuateObject_persistenceSlotId = do_Uint16(conn, tree, tvb, off, 'Data_Store_UnperpetuateObject_persistenceSlotId')
off, Data_Store_UnperpetuateObject_deleteLastObject = do_Bool(conn, tree, tvb, off, 'Data_Store_UnperpetuateObject_deleteLastObject')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[33] = {
				["name"] = "PrepareGetObjectOrMetaBinary",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_DataStorePrepareGetParam(conn, tree, tvb, off, 'Data_Store_PrepareGetObjectOrMetaBinary_param')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off = do_DataStoreReqGetInfo(conn, tree, tvb, off, 'Data_Store_PrepareGetObjectOrMetaBinary_pReqGetInfo')
off = do_DataStoreReqGetAdditionalMeta(conn, tree, tvb, off, 'Data_Store_PrepareGetObjectOrMetaBinary_pReqGetAdditionalMeta')
 end
			},
			[34] = {
				["name"] = "GetPasswordInfo",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Data_Store_GetPasswordInfo_dataId = do_Uint64(conn, tree, tvb, off, 'Data_Store_GetPasswordInfo_dataId')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off = do_DataStorePasswordInfo(conn, tree, tvb, off, 'Data_Store_GetPasswordInfo_pPasswordInfo')
 end
			},
			[35] = {
				["name"] = "GetPasswordInfos",
				["request"] = function (conn, tree, tvb)
	local off = 0
-- list !! Uint64
	local Data_Store_GetPasswordInfos_dataIds_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Data_Store_GetPasswordInfos_dataIds_len, tvb(off,4))
	off = off + 4
	for i=1,Data_Store_GetPasswordInfos_dataIds_len do
	off, Data_Store_GetPasswordInfos_dataIds_item = do_Uint64(conn, subtree, tvb, off, 'Data_Store_GetPasswordInfos_dataIds_item')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
-- list !! DataStorePasswordInfo
	local Data_Store_GetPasswordInfos_pPasswordInfos_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Data_Store_GetPasswordInfos_pPasswordInfos_len, tvb(off,4))
	off = off + 4
	for i=1,Data_Store_GetPasswordInfos_pPasswordInfos_len do
	off = do_DataStorePasswordInfo(conn, subtree, tvb, off, 'Data_Store_GetPasswordInfos_pPasswordInfos_item')

	end
	
-- list !! Result
	local Data_Store_GetPasswordInfos_pResults_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Data_Store_GetPasswordInfos_pResults_len, tvb(off,4))
	off = off + 4
	for i=1,Data_Store_GetPasswordInfos_pResults_len do
	off, Data_Store_GetPasswordInfos_pResults_item = do_Result(conn, subtree, tvb, off, 'Data_Store_GetPasswordInfos_pResults_item')

	end
	
 end
			},
			[36] = {
				["name"] = "GetMetasMultipleParam",
				["request"] = function (conn, tree, tvb)
	local off = 0
-- list !! DataStoreGetMetaParam
	local Data_Store_GetMetasMultipleParam_params_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Data_Store_GetMetasMultipleParam_params_len, tvb(off,4))
	off = off + 4
	for i=1,Data_Store_GetMetasMultipleParam_params_len do
	off = do_DataStoreGetMetaParam(conn, subtree, tvb, off, 'Data_Store_GetMetasMultipleParam_params_item')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
-- list !! DataStoreMetaInfo
	local Data_Store_GetMetasMultipleParam_pMetaInfo_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Data_Store_GetMetasMultipleParam_pMetaInfo_len, tvb(off,4))
	off = off + 4
	for i=1,Data_Store_GetMetasMultipleParam_pMetaInfo_len do
	off = do_DataStoreMetaInfo(conn, subtree, tvb, off, 'Data_Store_GetMetasMultipleParam_pMetaInfo_item')

	end
	
-- list !! Result
	local Data_Store_GetMetasMultipleParam_pResults_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Data_Store_GetMetasMultipleParam_pResults_len, tvb(off,4))
	off = off + 4
	for i=1,Data_Store_GetMetasMultipleParam_pResults_len do
	off, Data_Store_GetMetasMultipleParam_pResults_item = do_Result(conn, subtree, tvb, off, 'Data_Store_GetMetasMultipleParam_pResults_item')

	end
	
 end
			},
			[37] = {
				["name"] = "CompletePostObjects",
				["request"] = function (conn, tree, tvb)
	local off = 0
-- list !! Uint64
	local Data_Store_CompletePostObjects_dataIds_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Data_Store_CompletePostObjects_dataIds_len, tvb(off,4))
	off = off + 4
	for i=1,Data_Store_CompletePostObjects_dataIds_len do
	off, Data_Store_CompletePostObjects_dataIds_item = do_Uint64(conn, subtree, tvb, off, 'Data_Store_CompletePostObjects_dataIds_item')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[38] = {
				["name"] = "ChangeMeta",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_DataStoreChangeMetaParam(conn, tree, tvb, off, 'Data_Store_ChangeMeta_param')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[39] = {
				["name"] = "ChangeMetas",
				["request"] = function (conn, tree, tvb)
	local off = 0
-- list !! Uint64
	local Data_Store_ChangeMetas_dataIds_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Data_Store_ChangeMetas_dataIds_len, tvb(off,4))
	off = off + 4
	for i=1,Data_Store_ChangeMetas_dataIds_len do
	off, Data_Store_ChangeMetas_dataIds_item = do_Uint64(conn, subtree, tvb, off, 'Data_Store_ChangeMetas_dataIds_item')

	end
	
-- list !! DataStoreChangeMetaParam
	local Data_Store_ChangeMetas_params_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Data_Store_ChangeMetas_params_len, tvb(off,4))
	off = off + 4
	for i=1,Data_Store_ChangeMetas_params_len do
	off = do_DataStoreChangeMetaParam(conn, subtree, tvb, off, 'Data_Store_ChangeMetas_params_item')

	end
	
off, Data_Store_ChangeMetas_transactional = do_Bool(conn, tree, tvb, off, 'Data_Store_ChangeMetas_transactional')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
-- list !! Result
	local Data_Store_ChangeMetas_pResults_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Data_Store_ChangeMetas_pResults_len, tvb(off,4))
	off = off + 4
	for i=1,Data_Store_ChangeMetas_pResults_len do
	off, Data_Store_ChangeMetas_pResults_item = do_Result(conn, subtree, tvb, off, 'Data_Store_ChangeMetas_pResults_item')

	end
	
 end
			},
			[40] = {
				["name"] = "RateObjects",
				["request"] = function (conn, tree, tvb)
	local off = 0
-- list !! DataStoreRatingTarget
	local Data_Store_RateObjects_targets_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Data_Store_RateObjects_targets_len, tvb(off,4))
	off = off + 4
	for i=1,Data_Store_RateObjects_targets_len do
	off = do_DataStoreRatingTarget(conn, subtree, tvb, off, 'Data_Store_RateObjects_targets_item')

	end
	
-- list !! DataStoreRateObjectParam
	local Data_Store_RateObjects_params_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Data_Store_RateObjects_params_len, tvb(off,4))
	off = off + 4
	for i=1,Data_Store_RateObjects_params_len do
	off = do_DataStoreRateObjectParam(conn, subtree, tvb, off, 'Data_Store_RateObjects_params_item')

	end
	
off, Data_Store_RateObjects_transactional = do_Bool(conn, tree, tvb, off, 'Data_Store_RateObjects_transactional')
off, Data_Store_RateObjects_fetchRatings = do_Bool(conn, tree, tvb, off, 'Data_Store_RateObjects_fetchRatings')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
-- list !! DataStoreRatingInfo
	local Data_Store_RateObjects_pRatings_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Data_Store_RateObjects_pRatings_len, tvb(off,4))
	off = off + 4
	for i=1,Data_Store_RateObjects_pRatings_len do
	off = do_DataStoreRatingInfo(conn, subtree, tvb, off, 'Data_Store_RateObjects_pRatings_item')

	end
	
-- list !! Result
	local Data_Store_RateObjects_pResults_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Data_Store_RateObjects_pResults_len, tvb(off,4))
	off = off + 4
	for i=1,Data_Store_RateObjects_pResults_len do
	off, Data_Store_RateObjects_pResults_item = do_Result(conn, subtree, tvb, off, 'Data_Store_RateObjects_pResults_item')

	end
	
 end
			},
			[41] = {
				["name"] = "PostMetaBinaryWithDataId",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Data_Store_PostMetaBinaryWithDataId_dataId = do_Uint64(conn, tree, tvb, off, 'Data_Store_PostMetaBinaryWithDataId_dataId')
off = do_DataStorePreparePostParam(conn, tree, tvb, off, 'Data_Store_PostMetaBinaryWithDataId_param')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[42] = {
				["name"] = "PostMetaBinariesWithDataId",
				["request"] = function (conn, tree, tvb)
	local off = 0
-- list !! Uint64
	local Data_Store_PostMetaBinariesWithDataId_dataIds_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Data_Store_PostMetaBinariesWithDataId_dataIds_len, tvb(off,4))
	off = off + 4
	for i=1,Data_Store_PostMetaBinariesWithDataId_dataIds_len do
	off, Data_Store_PostMetaBinariesWithDataId_dataIds_item = do_Uint64(conn, subtree, tvb, off, 'Data_Store_PostMetaBinariesWithDataId_dataIds_item')

	end
	
-- list !! DataStorePreparePostParam
	local Data_Store_PostMetaBinariesWithDataId_params_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Data_Store_PostMetaBinariesWithDataId_params_len, tvb(off,4))
	off = off + 4
	for i=1,Data_Store_PostMetaBinariesWithDataId_params_len do
	off = do_DataStorePreparePostParam(conn, subtree, tvb, off, 'Data_Store_PostMetaBinariesWithDataId_params_item')

	end
	
off, Data_Store_PostMetaBinariesWithDataId_transactional = do_Bool(conn, tree, tvb, off, 'Data_Store_PostMetaBinariesWithDataId_transactional')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
-- list !! Result
	local Data_Store_PostMetaBinariesWithDataId_pResults_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Data_Store_PostMetaBinariesWithDataId_pResults_len, tvb(off,4))
	off = off + 4
	for i=1,Data_Store_PostMetaBinariesWithDataId_pResults_len do
	off, Data_Store_PostMetaBinariesWithDataId_pResults_item = do_Result(conn, subtree, tvb, off, 'Data_Store_PostMetaBinariesWithDataId_pResults_item')

	end
	
 end
			},
			[43] = {
				["name"] = "RateObjectWithPosting",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_DataStoreRatingTarget(conn, tree, tvb, off, 'Data_Store_RateObjectWithPosting_target')
off = do_DataStoreRateObjectParam(conn, tree, tvb, off, 'Data_Store_RateObjectWithPosting_rateParam')
off = do_DataStorePreparePostParam(conn, tree, tvb, off, 'Data_Store_RateObjectWithPosting_postParam')
off, Data_Store_RateObjectWithPosting_fetchRatings = do_Bool(conn, tree, tvb, off, 'Data_Store_RateObjectWithPosting_fetchRatings')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off = do_DataStoreRatingInfo(conn, tree, tvb, off, 'Data_Store_RateObjectWithPosting_pRating')
 end
			},
			[44] = {
				["name"] = "RateObjectsWithPosting",
				["request"] = function (conn, tree, tvb)
	local off = 0
-- list !! DataStoreRatingTarget
	local Data_Store_RateObjectsWithPosting_targets_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Data_Store_RateObjectsWithPosting_targets_len, tvb(off,4))
	off = off + 4
	for i=1,Data_Store_RateObjectsWithPosting_targets_len do
	off = do_DataStoreRatingTarget(conn, subtree, tvb, off, 'Data_Store_RateObjectsWithPosting_targets_item')

	end
	
-- list !! DataStoreRateObjectParam
	local Data_Store_RateObjectsWithPosting_rateParams_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Data_Store_RateObjectsWithPosting_rateParams_len, tvb(off,4))
	off = off + 4
	for i=1,Data_Store_RateObjectsWithPosting_rateParams_len do
	off = do_DataStoreRateObjectParam(conn, subtree, tvb, off, 'Data_Store_RateObjectsWithPosting_rateParams_item')

	end
	
-- list !! DataStorePreparePostParam
	local Data_Store_RateObjectsWithPosting_postParams_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Data_Store_RateObjectsWithPosting_postParams_len, tvb(off,4))
	off = off + 4
	for i=1,Data_Store_RateObjectsWithPosting_postParams_len do
	off = do_DataStorePreparePostParam(conn, subtree, tvb, off, 'Data_Store_RateObjectsWithPosting_postParams_item')

	end
	
off, Data_Store_RateObjectsWithPosting_transactional = do_Bool(conn, tree, tvb, off, 'Data_Store_RateObjectsWithPosting_transactional')
off, Data_Store_RateObjectsWithPosting_fetchRatings = do_Bool(conn, tree, tvb, off, 'Data_Store_RateObjectsWithPosting_fetchRatings')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
-- list !! DataStoreRatingInfo
	local Data_Store_RateObjectsWithPosting_pRatings_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Data_Store_RateObjectsWithPosting_pRatings_len, tvb(off,4))
	off = off + 4
	for i=1,Data_Store_RateObjectsWithPosting_pRatings_len do
	off = do_DataStoreRatingInfo(conn, subtree, tvb, off, 'Data_Store_RateObjectsWithPosting_pRatings_item')

	end
	
-- list !! Result
	local Data_Store_RateObjectsWithPosting_pResults_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Data_Store_RateObjectsWithPosting_pResults_len, tvb(off,4))
	off = off + 4
	for i=1,Data_Store_RateObjectsWithPosting_pResults_len do
	off, Data_Store_RateObjectsWithPosting_pResults_item = do_Result(conn, subtree, tvb, off, 'Data_Store_RateObjectsWithPosting_pResults_item')

	end
	
 end
			},
			[45] = {
				["name"] = "GetObjectInfos",
				["request"] = function (conn, tree, tvb)
	local off = 0
-- list !! Uint64
	local Data_Store_GetObjectInfos_dataIds_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Data_Store_GetObjectInfos_dataIds_len, tvb(off,4))
	off = off + 4
	for i=1,Data_Store_GetObjectInfos_dataIds_len do
	off, Data_Store_GetObjectInfos_dataIds_item = do_Uint64(conn, subtree, tvb, off, 'Data_Store_GetObjectInfos_dataIds_item')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
-- list !! DataStoreReqGetInfo
	local Data_Store_GetObjectInfos_pInfos_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Data_Store_GetObjectInfos_pInfos_len, tvb(off,4))
	off = off + 4
	for i=1,Data_Store_GetObjectInfos_pInfos_len do
	off = do_DataStoreReqGetInfo(conn, subtree, tvb, off, 'Data_Store_GetObjectInfos_pInfos_item')

	end
	
-- list !! Result
	local Data_Store_GetObjectInfos_pResults_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Data_Store_GetObjectInfos_pResults_len, tvb(off,4))
	off = off + 4
	for i=1,Data_Store_GetObjectInfos_pResults_len do
	off, Data_Store_GetObjectInfos_pResults_item = do_Result(conn, subtree, tvb, off, 'Data_Store_GetObjectInfos_pResults_item')

	end
	
 end
			},
			[46] = {
				["name"] = "SearchObjectLight",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_DataStoreSearchParam(conn, tree, tvb, off, 'Data_Store_SearchObjectLight_param')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off = do_DataStoreSearchResult(conn, tree, tvb, off, 'Data_Store_SearchObjectLight_pSearchResult')
 end
			},
			[47] = {
				["name"] = "AddToBufferQueue",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_BufferQueueParam(conn, tree, tvb, off, 'Data_Store_AddToBufferQueue_param')
off, Data_Store_AddToBufferQueue_buffer = do_qBuffer(conn, tree, tvb, off, 'Data_Store_AddToBufferQueue_buffer')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[48] = {
				["name"] = "AddToBufferQueues",
				["request"] = function (conn, tree, tvb)
	local off = 0
-- list !! BufferQueueParam
	local Data_Store_AddToBufferQueues_params_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Data_Store_AddToBufferQueues_params_len, tvb(off,4))
	off = off + 4
	for i=1,Data_Store_AddToBufferQueues_params_len do
	off = do_BufferQueueParam(conn, subtree, tvb, off, 'Data_Store_AddToBufferQueues_params_item')

	end
	
-- list !! qBuffer
	local Data_Store_AddToBufferQueues_buffers_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Data_Store_AddToBufferQueues_buffers_len, tvb(off,4))
	off = off + 4
	for i=1,Data_Store_AddToBufferQueues_buffers_len do
	off, Data_Store_AddToBufferQueues_buffers_item = do_qBuffer(conn, subtree, tvb, off, 'Data_Store_AddToBufferQueues_buffers_item')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
-- list !! Result
	local Data_Store_AddToBufferQueues_pResults_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Data_Store_AddToBufferQueues_pResults_len, tvb(off,4))
	off = off + 4
	for i=1,Data_Store_AddToBufferQueues_pResults_len do
	off, Data_Store_AddToBufferQueues_pResults_item = do_Result(conn, subtree, tvb, off, 'Data_Store_AddToBufferQueues_pResults_item')

	end
	
 end
			},
			[49] = {
				["name"] = "GetBufferQueue",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_BufferQueueParam(conn, tree, tvb, off, 'Data_Store_GetBufferQueue_param')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
-- list !! qBuffer
	local Data_Store_GetBufferQueue_pBufferQueue_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Data_Store_GetBufferQueue_pBufferQueue_len, tvb(off,4))
	off = off + 4
	for i=1,Data_Store_GetBufferQueue_pBufferQueue_len do
	off, Data_Store_GetBufferQueue_pBufferQueue_item = do_qBuffer(conn, subtree, tvb, off, 'Data_Store_GetBufferQueue_pBufferQueue_item')

	end
	
 end
			},
			[50] = {
				["name"] = "GetBufferQueues",
				["request"] = function (conn, tree, tvb)
	local off = 0
-- list !! BufferQueueParam
	local Data_Store_GetBufferQueues_params_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Data_Store_GetBufferQueues_params_len, tvb(off,4))
	off = off + 4
	for i=1,Data_Store_GetBufferQueues_params_len do
	off = do_BufferQueueParam(conn, subtree, tvb, off, 'Data_Store_GetBufferQueues_params_item')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
--[[ Stubbed! Missing type (in list) List<qBuffer>]]
-- list !! Result
	local Data_Store_GetBufferQueues_pResults_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Data_Store_GetBufferQueues_pResults_len, tvb(off,4))
	off = off + 4
	for i=1,Data_Store_GetBufferQueues_pResults_len do
	off, Data_Store_GetBufferQueues_pResults_item = do_Result(conn, subtree, tvb, off, 'Data_Store_GetBufferQueues_pResults_item')

	end
	
 end
			},
			[51] = {
				["name"] = "ClearBufferQueues",
				["request"] = function (conn, tree, tvb)
	local off = 0
-- list !! BufferQueueParam
	local Data_Store_ClearBufferQueues_params_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Data_Store_ClearBufferQueues_params_len, tvb(off,4))
	off = off + 4
	for i=1,Data_Store_ClearBufferQueues_params_len do
	off = do_BufferQueueParam(conn, subtree, tvb, off, 'Data_Store_ClearBufferQueues_params_item')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
-- list !! Result
	local Data_Store_ClearBufferQueues_pResults_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Data_Store_ClearBufferQueues_pResults_len, tvb(off,4))
	off = off + 4
	for i=1,Data_Store_ClearBufferQueues_pResults_len do
	off, Data_Store_ClearBufferQueues_pResults_item = do_Result(conn, subtree, tvb, off, 'Data_Store_ClearBufferQueues_pResults_item')

	end
	
 end
			},
			[52] = {
				["name"] = "SearchBalloon",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_DataStoreSearchBalloonParam(conn, tree, tvb, off, 'Data_Store_SearchBalloon_param')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
-- list !! DataStoreSearchBalloonResultSet
	local Data_Store_SearchBalloon_pResults_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Data_Store_SearchBalloon_pResults_len, tvb(off,4))
	off = off + 4
	for i=1,Data_Store_SearchBalloon_pResults_len do
	off = do_DataStoreSearchBalloonResultSet(conn, subtree, tvb, off, 'Data_Store_SearchBalloon_pResults_item')

	end
	
 end
			},
			[53] = {
				["name"] = "FetchMyInfos",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_DataStoreFetchMyInfosParam(conn, tree, tvb, off, 'Data_Store_FetchMyInfos_patam')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off = do_DataStoreFetchMyInfosResult(conn, tree, tvb, off, 'Data_Store_FetchMyInfos_pResult')
 end
			},
			
		}
	},
[0x100] =
	{
		["name"] = "Station Protocol",
		["methods"] = {
[0] = {
				["name"] = "Unreliable",
				["request"] = nil,
				["response"] = nil
			},
			[1] = {
				["name"] = "Reliable",
				["request"] = nil,
				["response"] = nil
			},
			
		}
	},
[0x6E] =
	{
		["name"] = "Utility",
		["methods"] = {
[1] = {
				["name"] = "AcquireNexUniqueId",
				["request"] = function (conn, tree, tvb)
	local off = 0
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Utility_AcquireNexUniqueId_pNexUniqueId = do_Uint64(conn, tree, tvb, off, 'Utility_AcquireNexUniqueId_pNexUniqueId')
 end
			},
			[2] = {
				["name"] = "AcquireNexUniqueIdWithPassword",
				["request"] = function (conn, tree, tvb)
	local off = 0
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off = do_UniqueIdInfo(conn, tree, tvb, off, 'Utility_AcquireNexUniqueIdWithPassword_pNexUniqueIdInfo')
 end
			},
			[3] = {
				["name"] = "AssociateNexUniqueIdWithMyPrincipalId",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_UniqueIdInfo(conn, tree, tvb, off, 'Utility_AssociateNexUniqueIdWithMyPrincipalId_uniqueIdInfo')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[4] = {
				["name"] = "AssociateNexUniqueIdsWithMyPrincipalId",
				["request"] = function (conn, tree, tvb)
	local off = 0
-- list !! UniqueIdInfo
	local Utility_AssociateNexUniqueIdsWithMyPrincipalId_uniqueIdInfo_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Utility_AssociateNexUniqueIdsWithMyPrincipalId_uniqueIdInfo_len, tvb(off,4))
	off = off + 4
	for i=1,Utility_AssociateNexUniqueIdsWithMyPrincipalId_uniqueIdInfo_len do
	off = do_UniqueIdInfo(conn, subtree, tvb, off, 'Utility_AssociateNexUniqueIdsWithMyPrincipalId_uniqueIdInfo_item')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[5] = {
				["name"] = "GetAssociatedNexUniqueIdWithMyPrincipalId",
				["request"] = function (conn, tree, tvb)
	local off = 0
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off = do_UniqueIdInfo(conn, tree, tvb, off, 'Utility_GetAssociatedNexUniqueIdWithMyPrincipalId_pUniqueIdInfo')
 end
			},
			[6] = {
				["name"] = "GetAssociatedNexUniqueIdsWithMyPrincipalId",
				["request"] = function (conn, tree, tvb)
	local off = 0
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
-- list !! UniqueIdInfo
	local Utility_GetAssociatedNexUniqueIdsWithMyPrincipalId_pUniqueIdInfo_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Utility_GetAssociatedNexUniqueIdsWithMyPrincipalId_pUniqueIdInfo_len, tvb(off,4))
	off = off + 4
	for i=1,Utility_GetAssociatedNexUniqueIdsWithMyPrincipalId_pUniqueIdInfo_len do
	off = do_UniqueIdInfo(conn, subtree, tvb, off, 'Utility_GetAssociatedNexUniqueIdsWithMyPrincipalId_pUniqueIdInfo_item')

	end
	
 end
			},
			[7] = {
				["name"] = "GetIntegerSettings",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Utility_GetIntegerSettings_integerSettingIndex = do_Uint32(conn, tree, tvb, off, 'Utility_GetIntegerSettings_integerSettingIndex')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
--[[ Stubbed! Missing type Map<Uint16, Sint32>]]
 end
			},
			[8] = {
				["name"] = "GetStringSettings",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Utility_GetStringSettings_stringSettingIndex = do_Uint32(conn, tree, tvb, off, 'Utility_GetStringSettings_stringSettingIndex')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
--[[ Stubbed! Missing type Map<Uint16, String>]]
 end
			},
			
		}
	},
[0x600] =
	{
		["name"] = "RTT Protocol",
		["methods"] = {
[0] = {
				["name"] = "4",
				["request"] = nil,
				["response"] = nil
			},
			[4] = {
				["name"] = "4",
				["request"] = nil,
				["response"] = nil
			},
			[8] = {
				["name"] = "8",
				["request"] = nil,
				["response"] = nil
			},
			
		}
	},
[0x70] =
	{
		["name"] = "Ranking",
		["methods"] = {
[1] = {
				["name"] = "UploadScore",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_RankingScoreData(conn, tree, tvb, off, 'Ranking_UploadScore_scoreData')
off, Ranking_UploadScore_uniqueId = do_Uint64(conn, tree, tvb, off, 'Ranking_UploadScore_uniqueId')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[2] = {
				["name"] = "DeleteScore",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Ranking_DeleteScore_category = do_Uint32(conn, tree, tvb, off, 'Ranking_DeleteScore_category')
off, Ranking_DeleteScore_uniqueId = do_Uint64(conn, tree, tvb, off, 'Ranking_DeleteScore_uniqueId')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[3] = {
				["name"] = "DeleteAllScores",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Ranking_DeleteAllScores_uniqueId = do_Uint64(conn, tree, tvb, off, 'Ranking_DeleteAllScores_uniqueId')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[4] = {
				["name"] = "UploadCommonData",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Ranking_UploadCommonData_commonData = do_Buffer(conn, tree, tvb, off, 'Ranking_UploadCommonData_commonData')
off, Ranking_UploadCommonData_uniqueId = do_Uint64(conn, tree, tvb, off, 'Ranking_UploadCommonData_uniqueId')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[5] = {
				["name"] = "DeleteCommonData",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Ranking_DeleteCommonData_uniqueId = do_Uint64(conn, tree, tvb, off, 'Ranking_DeleteCommonData_uniqueId')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[6] = {
				["name"] = "GetCommonData",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Ranking_GetCommonData_uniqueId = do_Uint64(conn, tree, tvb, off, 'Ranking_GetCommonData_uniqueId')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Ranking_GetCommonData_commonData = do_Buffer(conn, tree, tvb, off, 'Ranking_GetCommonData_commonData')
 end
			},
			[7] = {
				["name"] = "ChangeAttributes",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Ranking_ChangeAttributes_category = do_Uint32(conn, tree, tvb, off, 'Ranking_ChangeAttributes_category')
off = do_RankingChangeAttributesParam(conn, tree, tvb, off, 'Ranking_ChangeAttributes_changeParam')
off, Ranking_ChangeAttributes_uniqueId = do_Uint64(conn, tree, tvb, off, 'Ranking_ChangeAttributes_uniqueId')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[8] = {
				["name"] = "ChangeAllAttributes",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_RankingChangeAttributesParam(conn, tree, tvb, off, 'Ranking_ChangeAllAttributes_changeParam')
off, Ranking_ChangeAllAttributes_uniqueId = do_Uint64(conn, tree, tvb, off, 'Ranking_ChangeAllAttributes_uniqueId')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[9] = {
				["name"] = "GetRanking",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Ranking_GetRanking_rankingMode = do_Uint8(conn, tree, tvb, off, 'Ranking_GetRanking_rankingMode')
off, Ranking_GetRanking_category = do_Uint32(conn, tree, tvb, off, 'Ranking_GetRanking_category')
off = do_RankingOrderParam(conn, tree, tvb, off, 'Ranking_GetRanking_orderParam')
off, Ranking_GetRanking_uniqueId = do_Uint64(conn, tree, tvb, off, 'Ranking_GetRanking_uniqueId')
off, Ranking_GetRanking_principalId = do_PID(conn, tree, tvb, off, 'Ranking_GetRanking_principalId')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off = do_RankingResult(conn, tree, tvb, off, 'Ranking_GetRanking_pResult')
 end
			},
			[10] = {
				["name"] = "GetApproxOrder",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Ranking_GetApproxOrder_category = do_Uint32(conn, tree, tvb, off, 'Ranking_GetApproxOrder_category')
off = do_RankingOrderParam(conn, tree, tvb, off, 'Ranking_GetApproxOrder_orderParam')
off, Ranking_GetApproxOrder_score = do_Uint32(conn, tree, tvb, off, 'Ranking_GetApproxOrder_score')
off, Ranking_GetApproxOrder_uniqueId = do_Uint64(conn, tree, tvb, off, 'Ranking_GetApproxOrder_uniqueId')
off, Ranking_GetApproxOrder_principalId = do_Uint32(conn, tree, tvb, off, 'Ranking_GetApproxOrder_principalId')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Ranking_GetApproxOrder_pOrder = do_Uint32(conn, tree, tvb, off, 'Ranking_GetApproxOrder_pOrder')
 end
			},
			[11] = {
				["name"] = "GetStats",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Ranking_GetStats_category = do_Uint32(conn, tree, tvb, off, 'Ranking_GetStats_category')
off = do_RankingOrderParam(conn, tree, tvb, off, 'Ranking_GetStats_orderParam')
off, Ranking_GetStats_flags = do_Uint32(conn, tree, tvb, off, 'Ranking_GetStats_flags')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off = do_RankingStats(conn, tree, tvb, off, 'Ranking_GetStats_pStats')
 end
			},
			[12] = {
				["name"] = "GetRankingByPIDList",
				["request"] = function (conn, tree, tvb)
	local off = 0
-- list !! PID
	local Ranking_GetRankingByPIDList_principalIdList_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Ranking_GetRankingByPIDList_principalIdList_len, tvb(off,4))
	off = off + 4
	for i=1,Ranking_GetRankingByPIDList_principalIdList_len do
	off, Ranking_GetRankingByPIDList_principalIdList_item = do_PID(conn, subtree, tvb, off, 'Ranking_GetRankingByPIDList_principalIdList_item')

	end
	
off, Ranking_GetRankingByPIDList_rankingMode = do_Uint8(conn, tree, tvb, off, 'Ranking_GetRankingByPIDList_rankingMode')
off, Ranking_GetRankingByPIDList_category = do_Uint32(conn, tree, tvb, off, 'Ranking_GetRankingByPIDList_category')
off = do_RankingOrderParam(conn, tree, tvb, off, 'Ranking_GetRankingByPIDList_orderParam')
off, Ranking_GetRankingByPIDList_uniqueId = do_Uint64(conn, tree, tvb, off, 'Ranking_GetRankingByPIDList_uniqueId')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off = do_RankingResult(conn, tree, tvb, off, 'Ranking_GetRankingByPIDList_pResult')
 end
			},
			[13] = {
				["name"] = "GetRankingByUniqueIdList",
				["request"] = function (conn, tree, tvb)
	local off = 0
-- list !! Uint64
	local Ranking_GetRankingByUniqueIdList_nexUniqueIdList_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Ranking_GetRankingByUniqueIdList_nexUniqueIdList_len, tvb(off,4))
	off = off + 4
	for i=1,Ranking_GetRankingByUniqueIdList_nexUniqueIdList_len do
	off, Ranking_GetRankingByUniqueIdList_nexUniqueIdList_item = do_Uint64(conn, subtree, tvb, off, 'Ranking_GetRankingByUniqueIdList_nexUniqueIdList_item')

	end
	
off, Ranking_GetRankingByUniqueIdList_rankingMode = do_Uint8(conn, tree, tvb, off, 'Ranking_GetRankingByUniqueIdList_rankingMode')
off, Ranking_GetRankingByUniqueIdList_category = do_Uint32(conn, tree, tvb, off, 'Ranking_GetRankingByUniqueIdList_category')
off = do_RankingOrderParam(conn, tree, tvb, off, 'Ranking_GetRankingByUniqueIdList_orderParam')
off, Ranking_GetRankingByUniqueIdList_uniqueId = do_Uint64(conn, tree, tvb, off, 'Ranking_GetRankingByUniqueIdList_uniqueId')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off = do_RankingResult(conn, tree, tvb, off, 'Ranking_GetRankingByUniqueIdList_pResult')
 end
			},
			[14] = {
				["name"] = "GetCachedTopXRanking",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Ranking_GetCachedTopXRanking_category = do_Uint32(conn, tree, tvb, off, 'Ranking_GetCachedTopXRanking_category')
off = do_RankingOrderParam(conn, tree, tvb, off, 'Ranking_GetCachedTopXRanking_orderParam')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off = do_RankingCachedResult(conn, tree, tvb, off, 'Ranking_GetCachedTopXRanking_pResult')
 end
			},
			[15] = {
				["name"] = "GetCachedTopXRankings",
				["request"] = function (conn, tree, tvb)
	local off = 0
-- list !! Uint32
	local Ranking_GetCachedTopXRankings_categories_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Ranking_GetCachedTopXRankings_categories_len, tvb(off,4))
	off = off + 4
	for i=1,Ranking_GetCachedTopXRankings_categories_len do
	off, Ranking_GetCachedTopXRankings_categories_item = do_Uint32(conn, subtree, tvb, off, 'Ranking_GetCachedTopXRankings_categories_item')

	end
	
-- list !! RankingOrderParam
	local Ranking_GetCachedTopXRankings_orderParams_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Ranking_GetCachedTopXRankings_orderParams_len, tvb(off,4))
	off = off + 4
	for i=1,Ranking_GetCachedTopXRankings_orderParams_len do
	off = do_RankingOrderParam(conn, subtree, tvb, off, 'Ranking_GetCachedTopXRankings_orderParams_item')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
-- list !! RankingCachedResult
	local Ranking_GetCachedTopXRankings_pResults_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Ranking_GetCachedTopXRankings_pResults_len, tvb(off,4))
	off = off + 4
	for i=1,Ranking_GetCachedTopXRankings_pResults_len do
	off = do_RankingCachedResult(conn, subtree, tvb, off, 'Ranking_GetCachedTopXRankings_pResults_item')

	end
	
 end
			},
			
		}
	},
[0x65] =
	{
		["name"] = "Friends 3DS",
		["methods"] = {
[1] = {
				["name"] = "UpdateProfile",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_MyProfile(conn, tree, tvb, off, 'Friends_3DS_UpdateProfile_Profile_data')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[2] = {
				["name"] = "UpdateMii",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_Mii(conn, tree, tvb, off, 'Friends_3DS_UpdateMii_Mii')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[3] = {
				["name"] = "UpdateMiiList",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_MiiList(conn, tree, tvb, off, 'Friends_3DS_UpdateMiiList_Mii_list')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[4] = {
				["name"] = "UpdatePlayedGames",
				["request"] = function (conn, tree, tvb)
	local off = 0
-- list !! PlayedGame
	local Friends_3DS_UpdatePlayedGames_Played_games_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Friends_3DS_UpdatePlayedGames_Played_games_len, tvb(off,4))
	off = off + 4
	for i=1,Friends_3DS_UpdatePlayedGames_Played_games_len do
	off = do_PlayedGame(conn, subtree, tvb, off, 'Friends_3DS_UpdatePlayedGames_Played_games_item')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[5] = {
				["name"] = "UpdatePreference",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Friends_3DS_UpdatePreference_Unknown = do_Bool(conn, tree, tvb, off, 'Friends_3DS_UpdatePreference_Unknown')
off, Friends_3DS_UpdatePreference_Unknown = do_Bool(conn, tree, tvb, off, 'Friends_3DS_UpdatePreference_Unknown')
off, Friends_3DS_UpdatePreference_Unknown = do_Bool(conn, tree, tvb, off, 'Friends_3DS_UpdatePreference_Unknown')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[6] = {
				["name"] = "GetFriendMii",
				["request"] = function (conn, tree, tvb)
	local off = 0
-- list !! FriendMiiRequest
	local Friends_3DS_GetFriendMii_Friends_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Friends_3DS_GetFriendMii_Friends_len, tvb(off,4))
	off = off + 4
	for i=1,Friends_3DS_GetFriendMii_Friends_len do
	off = do_FriendMiiRequest(conn, subtree, tvb, off, 'Friends_3DS_GetFriendMii_Friends_item')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[7] = {
				["name"] = "GetFriendMiiList",
				["request"] = function (conn, tree, tvb)
	local off = 0
-- list !! FriendMiiRequest
	local Friends_3DS_GetFriendMiiList_Friends_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Friends_3DS_GetFriendMiiList_Friends_len, tvb(off,4))
	off = off + 4
	for i=1,Friends_3DS_GetFriendMiiList_Friends_len do
	off = do_FriendMiiRequest(conn, subtree, tvb, off, 'Friends_3DS_GetFriendMiiList_Friends_item')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
-- list !! FriendMiiList
	local Friends_3DS_GetFriendMiiList_Mii_lists_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Friends_3DS_GetFriendMiiList_Mii_lists_len, tvb(off,4))
	off = off + 4
	for i=1,Friends_3DS_GetFriendMiiList_Mii_lists_len do
	off = do_FriendMiiList(conn, subtree, tvb, off, 'Friends_3DS_GetFriendMiiList_Mii_lists_item')

	end
	
 end
			},
			[8] = {
				["name"] = "?",
				["request"] = nil,
				["response"] = nil
			},
			[9] = {
				["name"] = "?",
				["request"] = nil,
				["response"] = nil
			},
			[10] = {
				["name"] = "GetFriendRelationships",
				["request"] = function (conn, tree, tvb)
	local off = 0
-- list !! Uint32
	local Friends_3DS_GetFriendRelationships_Unknown_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Friends_3DS_GetFriendRelationships_Unknown_len, tvb(off,4))
	off = off + 4
	for i=1,Friends_3DS_GetFriendRelationships_Unknown_len do
	off, Friends_3DS_GetFriendRelationships_Unknown_item = do_Uint32(conn, subtree, tvb, off, 'Friends_3DS_GetFriendRelationships_Unknown_item')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
-- list !! FriendRelationship
	local Friends_3DS_GetFriendRelationships_Friend_relationships_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Friends_3DS_GetFriendRelationships_Friend_relationships_len, tvb(off,4))
	off = off + 4
	for i=1,Friends_3DS_GetFriendRelationships_Friend_relationships_len do
	off = do_FriendRelationship(conn, subtree, tvb, off, 'Friends_3DS_GetFriendRelationships_Friend_relationships_item')

	end
	
 end
			},
			[11] = {
				["name"] = "AddFriendByPrincipalID",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Friends_3DS_AddFriendByPrincipalID_Unknown = do_Uint64(conn, tree, tvb, off, 'Friends_3DS_AddFriendByPrincipalID_Unknown')
off, Friends_3DS_AddFriendByPrincipalID_Principal_id = do_Uint32(conn, tree, tvb, off, 'Friends_3DS_AddFriendByPrincipalID_Principal_id')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off = do_FriendRelationship(conn, tree, tvb, off, 'Friends_3DS_AddFriendByPrincipalID_Friend_relationship')
 end
			},
			[12] = {
				["name"] = "?",
				["request"] = nil,
				["response"] = nil
			},
			[13] = {
				["name"] = "?",
				["request"] = nil,
				["response"] = nil
			},
			[14] = {
				["name"] = "?",
				["request"] = nil,
				["response"] = nil
			},
			[15] = {
				["name"] = "GetAllFriends",
				["request"] = function (conn, tree, tvb)
	local off = 0
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
-- list !! FriendRelationship
	local Friends_3DS_GetAllFriends_Friend_relationships_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Friends_3DS_GetAllFriends_Friend_relationships_len, tvb(off,4))
	off = off + 4
	for i=1,Friends_3DS_GetAllFriends_Friend_relationships_len do
	off = do_FriendRelationship(conn, subtree, tvb, off, 'Friends_3DS_GetAllFriends_Friend_relationships_item')

	end
	
 end
			},
			[16] = {
				["name"] = "?",
				["request"] = nil,
				["response"] = nil
			},
			[17] = {
				["name"] = "SyncFriend",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Friends_3DS_SyncFriend_Unknown = do_Uint64(conn, tree, tvb, off, 'Friends_3DS_SyncFriend_Unknown')
-- list !! Uint32
	local Friends_3DS_SyncFriend_Unknown_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Friends_3DS_SyncFriend_Unknown_len, tvb(off,4))
	off = off + 4
	for i=1,Friends_3DS_SyncFriend_Unknown_len do
	off, Friends_3DS_SyncFriend_Unknown_item = do_Uint32(conn, subtree, tvb, off, 'Friends_3DS_SyncFriend_Unknown_item')

	end
	
-- list !! Uint64
	local Friends_3DS_SyncFriend_Unknown_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Friends_3DS_SyncFriend_Unknown_len, tvb(off,4))
	off = off + 4
	for i=1,Friends_3DS_SyncFriend_Unknown_len do
	off, Friends_3DS_SyncFriend_Unknown_item = do_Uint64(conn, subtree, tvb, off, 'Friends_3DS_SyncFriend_Unknown_item')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
-- list !! FriendRelationship
	local Friends_3DS_SyncFriend_Friend_list_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Friends_3DS_SyncFriend_Friend_list_len, tvb(off,4))
	off = off + 4
	for i=1,Friends_3DS_SyncFriend_Friend_list_len do
	off = do_FriendRelationship(conn, subtree, tvb, off, 'Friends_3DS_SyncFriend_Friend_list_item')

	end
	
 end
			},
			[18] = {
				["name"] = "UpdatePresence",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_NintendoPresence(conn, tree, tvb, off, 'Friends_3DS_UpdatePresence_Presence_info')
off, Friends_3DS_UpdatePresence_Unknown = do_Bool(conn, tree, tvb, off, 'Friends_3DS_UpdatePresence_Unknown')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[19] = {
				["name"] = "UpdateFavoriteGameKey",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_GameKey(conn, tree, tvb, off, 'Friends_3DS_UpdateFavoriteGameKey_Game_key')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[20] = {
				["name"] = "UpdateComment",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Friends_3DS_UpdateComment_Comment = do_String(conn, tree, tvb, off, 'Friends_3DS_UpdateComment_Comment')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[21] = {
				["name"] = "?",
				["request"] = nil,
				["response"] = nil
			},
			[22] = {
				["name"] = "GetFriendPresence",
				["request"] = function (conn, tree, tvb)
	local off = 0
-- list !! Uint32
	local Friends_3DS_GetFriendPresence_Unknown_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Friends_3DS_GetFriendPresence_Unknown_len, tvb(off,4))
	off = off + 4
	for i=1,Friends_3DS_GetFriendPresence_Unknown_len do
	off, Friends_3DS_GetFriendPresence_Unknown_item = do_Uint32(conn, subtree, tvb, off, 'Friends_3DS_GetFriendPresence_Unknown_item')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
-- list !! FriendPresence
	local Friends_3DS_GetFriendPresence_Friend_presence_list_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Friends_3DS_GetFriendPresence_Friend_presence_list_len, tvb(off,4))
	off = off + 4
	for i=1,Friends_3DS_GetFriendPresence_Friend_presence_list_len do
	off = do_FriendPresence(conn, subtree, tvb, off, 'Friends_3DS_GetFriendPresence_Friend_presence_list_item')

	end
	
 end
			},
			[23] = {
				["name"] = "?",
				["request"] = nil,
				["response"] = nil
			},
			[24] = {
				["name"] = "GetFriendPicture",
				["request"] = function (conn, tree, tvb)
	local off = 0
-- list !! Uint32
	local Friends_3DS_GetFriendPicture_Unknown_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Friends_3DS_GetFriendPicture_Unknown_len, tvb(off,4))
	off = off + 4
	for i=1,Friends_3DS_GetFriendPicture_Unknown_len do
	off, Friends_3DS_GetFriendPicture_Unknown_item = do_Uint32(conn, subtree, tvb, off, 'Friends_3DS_GetFriendPicture_Unknown_item')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
-- list !! FriendPicture
	local Friends_3DS_GetFriendPicture_Friend_pictures_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Friends_3DS_GetFriendPicture_Friend_pictures_len, tvb(off,4))
	off = off + 4
	for i=1,Friends_3DS_GetFriendPicture_Friend_pictures_len do
	off = do_FriendPicture(conn, subtree, tvb, off, 'Friends_3DS_GetFriendPicture_Friend_pictures_item')

	end
	
 end
			},
			[25] = {
				["name"] = "GetFriendPersistentInfo",
				["request"] = function (conn, tree, tvb)
	local off = 0
-- list !! Uint32
	local Friends_3DS_GetFriendPersistentInfo_Unknown_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Friends_3DS_GetFriendPersistentInfo_Unknown_len, tvb(off,4))
	off = off + 4
	for i=1,Friends_3DS_GetFriendPersistentInfo_Unknown_len do
	off, Friends_3DS_GetFriendPersistentInfo_Unknown_item = do_Uint32(conn, subtree, tvb, off, 'Friends_3DS_GetFriendPersistentInfo_Unknown_item')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
-- list !! FriendPersistentInfo
	local Friends_3DS_GetFriendPersistentInfo_Persistent_info_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Friends_3DS_GetFriendPersistentInfo_Persistent_info_len, tvb(off,4))
	off = off + 4
	for i=1,Friends_3DS_GetFriendPersistentInfo_Persistent_info_len do
	off = do_FriendPersistentInfo(conn, subtree, tvb, off, 'Friends_3DS_GetFriendPersistentInfo_Persistent_info_item')

	end
	
 end
			},
			[26] = {
				["name"] = "SendInvitation",
				["request"] = function (conn, tree, tvb)
	local off = 0
-- list !! Uint32
	local Friends_3DS_SendInvitation_Unknown_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Friends_3DS_SendInvitation_Unknown_len, tvb(off,4))
	off = off + 4
	for i=1,Friends_3DS_SendInvitation_Unknown_len do
	off, Friends_3DS_SendInvitation_Unknown_item = do_Uint32(conn, subtree, tvb, off, 'Friends_3DS_SendInvitation_Unknown_item')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			
		}
	},
[0x03] =
	{
		["name"] = "NAT Traversal",
		["methods"] = {
[1] = {
				["name"] = "RequestProbeInitiation",
				["request"] = function (conn, tree, tvb)
	local off = 0
-- list !! StationURL
	local NAT_Traversal_RequestProbeInitiation_urlTargetList_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.NAT_Traversal_RequestProbeInitiation_urlTargetList_len, tvb(off,4))
	off = off + 4
	for i=1,NAT_Traversal_RequestProbeInitiation_urlTargetList_len do
	off, NAT_Traversal_RequestProbeInitiation_urlTargetList_item = do_StationURL(conn, subtree, tvb, off, 'NAT_Traversal_RequestProbeInitiation_urlTargetList_item')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[2] = {
				["name"] = "InitiateProbe",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, NAT_Traversal_InitiateProbe_urlStationToProbe = do_StationURL(conn, tree, tvb, off, 'NAT_Traversal_InitiateProbe_urlStationToProbe')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[3] = {
				["name"] = "RequestProbeInitiationExt",
				["request"] = function (conn, tree, tvb)
	local off = 0
-- list !! StationURL
	local NAT_Traversal_RequestProbeInitiationExt_urlTargetList_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.NAT_Traversal_RequestProbeInitiationExt_urlTargetList_len, tvb(off,4))
	off = off + 4
	for i=1,NAT_Traversal_RequestProbeInitiationExt_urlTargetList_len do
	off, NAT_Traversal_RequestProbeInitiationExt_urlTargetList_item = do_StationURL(conn, subtree, tvb, off, 'NAT_Traversal_RequestProbeInitiationExt_urlTargetList_item')

	end
	
off, NAT_Traversal_RequestProbeInitiationExt_urlStationToProbe = do_StationURL(conn, tree, tvb, off, 'NAT_Traversal_RequestProbeInitiationExt_urlStationToProbe')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[4] = {
				["name"] = "ReportNATTraversalResult",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, NAT_Traversal_ReportNATTraversalResult_cid = do_Uint32(conn, tree, tvb, off, 'NAT_Traversal_ReportNATTraversalResult_cid')
off, NAT_Traversal_ReportNATTraversalResult_result = do_Bool(conn, tree, tvb, off, 'NAT_Traversal_ReportNATTraversalResult_result')
off, NAT_Traversal_ReportNATTraversalResult_rtt = do_Uint32(conn, tree, tvb, off, 'NAT_Traversal_ReportNATTraversalResult_rtt')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[5] = {
				["name"] = "ReportNATProperties",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, NAT_Traversal_ReportNATProperties_natmapping = do_Uint32(conn, tree, tvb, off, 'NAT_Traversal_ReportNATProperties_natmapping')
off, NAT_Traversal_ReportNATProperties_natfiltering = do_Uint32(conn, tree, tvb, off, 'NAT_Traversal_ReportNATProperties_natfiltering')
off, NAT_Traversal_ReportNATProperties_rtt = do_Uint32(conn, tree, tvb, off, 'NAT_Traversal_ReportNATProperties_rtt')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[6] = {
				["name"] = "GetRelaySignatureKey",
				["request"] = function (conn, tree, tvb)
	local off = 0
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, NAT_Traversal_GetRelaySignatureKey_relayMode = do_Int32(conn, tree, tvb, off, 'NAT_Traversal_GetRelaySignatureKey_relayMode')
off, NAT_Traversal_GetRelaySignatureKey_currentUTCTime = do_DateTime(conn, tree, tvb, off, 'NAT_Traversal_GetRelaySignatureKey_currentUTCTime')
off, NAT_Traversal_GetRelaySignatureKey_address = do_String(conn, tree, tvb, off, 'NAT_Traversal_GetRelaySignatureKey_address')
off, NAT_Traversal_GetRelaySignatureKey_port = do_Uint16(conn, tree, tvb, off, 'NAT_Traversal_GetRelaySignatureKey_port')
off, NAT_Traversal_GetRelaySignatureKey_relayAddressType = do_Int32(conn, tree, tvb, off, 'NAT_Traversal_GetRelaySignatureKey_relayAddressType')
off, NAT_Traversal_GetRelaySignatureKey_gameServerID = do_Uint32(conn, tree, tvb, off, 'NAT_Traversal_GetRelaySignatureKey_gameServerID')
 end
			},
			[7] = {
				["name"] = "ReportNATTraversalResultDetail",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, NAT_Traversal_ReportNATTraversalResultDetail_cid = do_Uint32(conn, tree, tvb, off, 'NAT_Traversal_ReportNATTraversalResultDetail_cid')
off, NAT_Traversal_ReportNATTraversalResultDetail_result = do_Bool(conn, tree, tvb, off, 'NAT_Traversal_ReportNATTraversalResultDetail_result')
off, NAT_Traversal_ReportNATTraversalResultDetail_detail = do_Int32(conn, tree, tvb, off, 'NAT_Traversal_ReportNATTraversalResultDetail_detail')
off, NAT_Traversal_ReportNATTraversalResultDetail_rtt = do_Uint32(conn, tree, tvb, off, 'NAT_Traversal_ReportNATTraversalResultDetail_rtt')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			
		}
	},
[0x0B] =
	{
		["name"] = "Secure Connection",
		["methods"] = {
[1] = {
				["name"] = "Register",
				["request"] = function (conn, tree, tvb)
	local off = 0
-- list !! StationURL
	local Secure_Connection_Register_vecMyURLs_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Secure_Connection_Register_vecMyURLs_len, tvb(off,4))
	off = off + 4
	for i=1,Secure_Connection_Register_vecMyURLs_len do
	off, Secure_Connection_Register_vecMyURLs_item = do_StationURL(conn, subtree, tvb, off, 'Secure_Connection_Register_vecMyURLs_item')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Secure_Connection_Register_retval = do_Result(conn, tree, tvb, off, 'Secure_Connection_Register_retval')
off, Secure_Connection_Register_pidConnectionID = do_Uint32(conn, tree, tvb, off, 'Secure_Connection_Register_pidConnectionID')
off, Secure_Connection_Register_urlPublic = do_StationURL(conn, tree, tvb, off, 'Secure_Connection_Register_urlPublic')
 end
			},
			[2] = {
				["name"] = "RequestConnectionData",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Secure_Connection_RequestConnectionData_cidTarget = do_Uint32(conn, tree, tvb, off, 'Secure_Connection_RequestConnectionData_cidTarget')
off, Secure_Connection_RequestConnectionData_pidTarget = do_Uint32(conn, tree, tvb, off, 'Secure_Connection_RequestConnectionData_pidTarget')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Secure_Connection_RequestConnectionData_retval = do_Bool(conn, tree, tvb, off, 'Secure_Connection_RequestConnectionData_retval')
--[[ Stubbed! Missing type (in list) ConnectionData]]
 end
			},
			[3] = {
				["name"] = "RequestUrls",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Secure_Connection_RequestUrls_cidTarget = do_Uint32(conn, tree, tvb, off, 'Secure_Connection_RequestUrls_cidTarget')
off, Secure_Connection_RequestUrls_pidTarget = do_Uint32(conn, tree, tvb, off, 'Secure_Connection_RequestUrls_pidTarget')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Secure_Connection_RequestUrls_retval = do_Bool(conn, tree, tvb, off, 'Secure_Connection_RequestUrls_retval')
-- list !! StationURL
	local Secure_Connection_RequestUrls_plstURLs_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Secure_Connection_RequestUrls_plstURLs_len, tvb(off,4))
	off = off + 4
	for i=1,Secure_Connection_RequestUrls_plstURLs_len do
	off, Secure_Connection_RequestUrls_plstURLs_item = do_StationURL(conn, subtree, tvb, off, 'Secure_Connection_RequestUrls_plstURLs_item')

	end
	
 end
			},
			[4] = {
				["name"] = "RegisterEx",
				["request"] = function (conn, tree, tvb)
	local off = 0
-- list !! StationURL
	local Secure_Connection_RegisterEx_vecMyURLs_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Secure_Connection_RegisterEx_vecMyURLs_len, tvb(off,4))
	off = off + 4
	for i=1,Secure_Connection_RegisterEx_vecMyURLs_len do
	off, Secure_Connection_RegisterEx_vecMyURLs_item = do_StationURL(conn, subtree, tvb, off, 'Secure_Connection_RegisterEx_vecMyURLs_item')

	end
	
--[[ Stubbed! Missing type (in Data) NintendoLoginData]]
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[5] = {
				["name"] = "TestConnectivity",
				["request"] = function (conn, tree, tvb)
	local off = 0
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[6] = {
				["name"] = "UpdateURLs",
				["request"] = function (conn, tree, tvb)
	local off = 0
-- list !! StationURL
	local Secure_Connection_UpdateURLs_vecMyURLs_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Secure_Connection_UpdateURLs_vecMyURLs_len, tvb(off,4))
	off = off + 4
	for i=1,Secure_Connection_UpdateURLs_vecMyURLs_len do
	off, Secure_Connection_UpdateURLs_vecMyURLs_item = do_StationURL(conn, subtree, tvb, off, 'Secure_Connection_UpdateURLs_vecMyURLs_item')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[7] = {
				["name"] = "ReplaceURL",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Secure_Connection_ReplaceURL_target = do_StationURL(conn, tree, tvb, off, 'Secure_Connection_ReplaceURL_target')
off, Secure_Connection_ReplaceURL_url = do_StationURL(conn, tree, tvb, off, 'Secure_Connection_ReplaceURL_url')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[8] = {
				["name"] = "SendReport",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Secure_Connection_SendReport_reportId = do_Uint32(conn, tree, tvb, off, 'Secure_Connection_SendReport_reportId')
off, Secure_Connection_SendReport_reportData = do_qBuffer(conn, tree, tvb, off, 'Secure_Connection_SendReport_reportData')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			
		}
	},
[0x6D] =
	{
		["name"] = "Matchmake Extension",
		["methods"] = {
[1] = {
				["name"] = "CloseParticipation",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Matchmake_Extension_CloseParticipation_gid = do_Uint32(conn, tree, tvb, off, 'Matchmake_Extension_CloseParticipation_gid')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[2] = {
				["name"] = "OpenParticipation",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Matchmake_Extension_OpenParticipation_gid = do_Uint32(conn, tree, tvb, off, 'Matchmake_Extension_OpenParticipation_gid')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[3] = {
				["name"] = "AutoMatchmake_Postpone",
				["request"] = function (conn, tree, tvb)
	local off = 0

		local Matchmake_Extension_AutoMatchmake_Postpone_anyGathering_container = tree:add(F.Data, tvb(off, 0))
		Matchmake_Extension_AutoMatchmake_Postpone_anyGathering_container:set_text("Data<Gathering>")
	off, Matchmake_Extension_AutoMatchmake_Postpone_anyGathering_type_name = do_String(conn, Matchmake_Extension_AutoMatchmake_Postpone_anyGathering_container, tvb, off, 'Matchmake_Extension_AutoMatchmake_Postpone_anyGathering_type_name')

off, Matchmake_Extension_AutoMatchmake_Postpone_anyGathering_len_plus_four = do_Uint32(conn, Matchmake_Extension_AutoMatchmake_Postpone_anyGathering_container, tvb, off, 'Matchmake_Extension_AutoMatchmake_Postpone_anyGathering_len_plus_four')

off, Matchmake_Extension_AutoMatchmake_Postpone_anyGathering_data_len = do_Uint32(conn, Matchmake_Extension_AutoMatchmake_Postpone_anyGathering_container, tvb, off, 'Matchmake_Extension_AutoMatchmake_Postpone_anyGathering_data_len')

local type_func = 'do_'..Matchmake_Extension_AutoMatchmake_Postpone_anyGathering_type_name
		if _G[type_func] ~= nil then
			off = _G[type_func](conn, Matchmake_Extension_AutoMatchmake_Postpone_anyGathering_container, tvb, off, "Matchmake_Extension_AutoMatchmake_Postpone_anyGathering_data")
		else
			Matchmake_Extension_AutoMatchmake_Postpone_anyGathering_container:add(F.Matchmake_Extension_AutoMatchmake_Postpone_anyGathering_data_bytes, tvb(off, Matchmake_Extension_AutoMatchmake_Postpone_anyGathering_len))
			off = off + Matchmake_Extension_AutoMatchmake_Postpone_anyGathering_data_len
		end
	
off, Matchmake_Extension_AutoMatchmake_Postpone_strMessage = do_String(conn, tree, tvb, off, 'Matchmake_Extension_AutoMatchmake_Postpone_strMessage')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0

		local Matchmake_Extension_AutoMatchmake_Postpone_joinedGathering_container = tree:add(F.Data, tvb(off, 0))
		Matchmake_Extension_AutoMatchmake_Postpone_joinedGathering_container:set_text("Data<Gathering>")
	off, Matchmake_Extension_AutoMatchmake_Postpone_joinedGathering_type_name = do_String(conn, Matchmake_Extension_AutoMatchmake_Postpone_joinedGathering_container, tvb, off, 'Matchmake_Extension_AutoMatchmake_Postpone_joinedGathering_type_name')

off, Matchmake_Extension_AutoMatchmake_Postpone_joinedGathering_len_plus_four = do_Uint32(conn, Matchmake_Extension_AutoMatchmake_Postpone_joinedGathering_container, tvb, off, 'Matchmake_Extension_AutoMatchmake_Postpone_joinedGathering_len_plus_four')

off, Matchmake_Extension_AutoMatchmake_Postpone_joinedGathering_data_len = do_Uint32(conn, Matchmake_Extension_AutoMatchmake_Postpone_joinedGathering_container, tvb, off, 'Matchmake_Extension_AutoMatchmake_Postpone_joinedGathering_data_len')

local type_func = 'do_'..Matchmake_Extension_AutoMatchmake_Postpone_joinedGathering_type_name
		if _G[type_func] ~= nil then
			off = _G[type_func](conn, Matchmake_Extension_AutoMatchmake_Postpone_joinedGathering_container, tvb, off, "Matchmake_Extension_AutoMatchmake_Postpone_joinedGathering_data")
		else
			Matchmake_Extension_AutoMatchmake_Postpone_joinedGathering_container:add(F.Matchmake_Extension_AutoMatchmake_Postpone_joinedGathering_data_bytes, tvb(off, Matchmake_Extension_AutoMatchmake_Postpone_joinedGathering_len))
			off = off + Matchmake_Extension_AutoMatchmake_Postpone_joinedGathering_data_len
		end
	
 end
			},
			[4] = {
				["name"] = "BrowseMatchmakeSession",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_MatchmakeSessionSearchCriteria(conn, tree, tvb, off, 'Matchmake_Extension_BrowseMatchmakeSession_searchCriteria')
off = do_ResultRange(conn, tree, tvb, off, 'Matchmake_Extension_BrowseMatchmakeSession_resultRange')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
-- list !! Data<Gathering>
	local Matchmake_Extension_BrowseMatchmakeSession_lstGathering_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Matchmake_Extension_BrowseMatchmakeSession_lstGathering_len, tvb(off,4))
	off = off + 4
	for i=1,Matchmake_Extension_BrowseMatchmakeSession_lstGathering_len do
	
		local Matchmake_Extension_BrowseMatchmakeSession_lstGathering_item_container = subtree:add(F.Data, tvb(off, 0))
		Matchmake_Extension_BrowseMatchmakeSession_lstGathering_item_container:set_text("Data<Gathering>")
	off, Matchmake_Extension_BrowseMatchmakeSession_lstGathering_item_type_name = do_String(conn, Matchmake_Extension_BrowseMatchmakeSession_lstGathering_item_container, tvb, off, 'Matchmake_Extension_BrowseMatchmakeSession_lstGathering_item_type_name')

off, Matchmake_Extension_BrowseMatchmakeSession_lstGathering_item_len_plus_four = do_Uint32(conn, Matchmake_Extension_BrowseMatchmakeSession_lstGathering_item_container, tvb, off, 'Matchmake_Extension_BrowseMatchmakeSession_lstGathering_item_len_plus_four')

off, Matchmake_Extension_BrowseMatchmakeSession_lstGathering_item_data_len = do_Uint32(conn, Matchmake_Extension_BrowseMatchmakeSession_lstGathering_item_container, tvb, off, 'Matchmake_Extension_BrowseMatchmakeSession_lstGathering_item_data_len')

local type_func = 'do_'..Matchmake_Extension_BrowseMatchmakeSession_lstGathering_item_type_name
		if _G[type_func] ~= nil then
			off = _G[type_func](conn, Matchmake_Extension_BrowseMatchmakeSession_lstGathering_item_container, tvb, off, "Matchmake_Extension_BrowseMatchmakeSession_lstGathering_item_data")
		else
			Matchmake_Extension_BrowseMatchmakeSession_lstGathering_item_container:add(F.Matchmake_Extension_BrowseMatchmakeSession_lstGathering_item_data_bytes, tvb(off, Matchmake_Extension_BrowseMatchmakeSession_lstGathering_item_len))
			off = off + Matchmake_Extension_BrowseMatchmakeSession_lstGathering_item_data_len
		end
	

	end
	
 end
			},
			[5] = {
				["name"] = "BrowseMatchmakeSessionWithHostUrls",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_MatchmakeSessionSearchCriteria(conn, tree, tvb, off, 'Matchmake_Extension_BrowseMatchmakeSessionWithHostUrls_searchCriteria')
off = do_ResultRange(conn, tree, tvb, off, 'Matchmake_Extension_BrowseMatchmakeSessionWithHostUrls_resultRange')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
-- list !! Data<Gathering>
	local Matchmake_Extension_BrowseMatchmakeSessionWithHostUrls_lstGathering_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Matchmake_Extension_BrowseMatchmakeSessionWithHostUrls_lstGathering_len, tvb(off,4))
	off = off + 4
	for i=1,Matchmake_Extension_BrowseMatchmakeSessionWithHostUrls_lstGathering_len do
	
		local Matchmake_Extension_BrowseMatchmakeSessionWithHostUrls_lstGathering_item_container = subtree:add(F.Data, tvb(off, 0))
		Matchmake_Extension_BrowseMatchmakeSessionWithHostUrls_lstGathering_item_container:set_text("Data<Gathering>")
	off, Matchmake_Extension_BrowseMatchmakeSessionWithHostUrls_lstGathering_item_type_name = do_String(conn, Matchmake_Extension_BrowseMatchmakeSessionWithHostUrls_lstGathering_item_container, tvb, off, 'Matchmake_Extension_BrowseMatchmakeSessionWithHostUrls_lstGathering_item_type_name')

off, Matchmake_Extension_BrowseMatchmakeSessionWithHostUrls_lstGathering_item_len_plus_four = do_Uint32(conn, Matchmake_Extension_BrowseMatchmakeSessionWithHostUrls_lstGathering_item_container, tvb, off, 'Matchmake_Extension_BrowseMatchmakeSessionWithHostUrls_lstGathering_item_len_plus_four')

off, Matchmake_Extension_BrowseMatchmakeSessionWithHostUrls_lstGathering_item_data_len = do_Uint32(conn, Matchmake_Extension_BrowseMatchmakeSessionWithHostUrls_lstGathering_item_container, tvb, off, 'Matchmake_Extension_BrowseMatchmakeSessionWithHostUrls_lstGathering_item_data_len')

local type_func = 'do_'..Matchmake_Extension_BrowseMatchmakeSessionWithHostUrls_lstGathering_item_type_name
		if _G[type_func] ~= nil then
			off = _G[type_func](conn, Matchmake_Extension_BrowseMatchmakeSessionWithHostUrls_lstGathering_item_container, tvb, off, "Matchmake_Extension_BrowseMatchmakeSessionWithHostUrls_lstGathering_item_data")
		else
			Matchmake_Extension_BrowseMatchmakeSessionWithHostUrls_lstGathering_item_container:add(F.Matchmake_Extension_BrowseMatchmakeSessionWithHostUrls_lstGathering_item_data_bytes, tvb(off, Matchmake_Extension_BrowseMatchmakeSessionWithHostUrls_lstGathering_item_len))
			off = off + Matchmake_Extension_BrowseMatchmakeSessionWithHostUrls_lstGathering_item_data_len
		end
	

	end
	
-- list !! GatheringURLs
	local Matchmake_Extension_BrowseMatchmakeSessionWithHostUrls_lstGatheringUrls_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Matchmake_Extension_BrowseMatchmakeSessionWithHostUrls_lstGatheringUrls_len, tvb(off,4))
	off = off + 4
	for i=1,Matchmake_Extension_BrowseMatchmakeSessionWithHostUrls_lstGatheringUrls_len do
	off = do_GatheringURLs(conn, subtree, tvb, off, 'Matchmake_Extension_BrowseMatchmakeSessionWithHostUrls_lstGatheringUrls_item')

	end
	
 end
			},
			[6] = {
				["name"] = "CreateMatchmakeSession",
				["request"] = function (conn, tree, tvb)
	local off = 0

		local Matchmake_Extension_CreateMatchmakeSession_anyGathering_container = tree:add(F.Data, tvb(off, 0))
		Matchmake_Extension_CreateMatchmakeSession_anyGathering_container:set_text("Data<Gathering>")
	off, Matchmake_Extension_CreateMatchmakeSession_anyGathering_type_name = do_String(conn, Matchmake_Extension_CreateMatchmakeSession_anyGathering_container, tvb, off, 'Matchmake_Extension_CreateMatchmakeSession_anyGathering_type_name')

off, Matchmake_Extension_CreateMatchmakeSession_anyGathering_len_plus_four = do_Uint32(conn, Matchmake_Extension_CreateMatchmakeSession_anyGathering_container, tvb, off, 'Matchmake_Extension_CreateMatchmakeSession_anyGathering_len_plus_four')

off, Matchmake_Extension_CreateMatchmakeSession_anyGathering_data_len = do_Uint32(conn, Matchmake_Extension_CreateMatchmakeSession_anyGathering_container, tvb, off, 'Matchmake_Extension_CreateMatchmakeSession_anyGathering_data_len')

local type_func = 'do_'..Matchmake_Extension_CreateMatchmakeSession_anyGathering_type_name
		if _G[type_func] ~= nil then
			off = _G[type_func](conn, Matchmake_Extension_CreateMatchmakeSession_anyGathering_container, tvb, off, "Matchmake_Extension_CreateMatchmakeSession_anyGathering_data")
		else
			Matchmake_Extension_CreateMatchmakeSession_anyGathering_container:add(F.Matchmake_Extension_CreateMatchmakeSession_anyGathering_data_bytes, tvb(off, Matchmake_Extension_CreateMatchmakeSession_anyGathering_len))
			off = off + Matchmake_Extension_CreateMatchmakeSession_anyGathering_data_len
		end
	
off, Matchmake_Extension_CreateMatchmakeSession_strMessage = do_String(conn, tree, tvb, off, 'Matchmake_Extension_CreateMatchmakeSession_strMessage')
off, Matchmake_Extension_CreateMatchmakeSession_participationCount = do_Uint16(conn, tree, tvb, off, 'Matchmake_Extension_CreateMatchmakeSession_participationCount')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Matchmake_Extension_CreateMatchmakeSession_gid = do_Uint32(conn, tree, tvb, off, 'Matchmake_Extension_CreateMatchmakeSession_gid')
off, Matchmake_Extension_CreateMatchmakeSession_sessionKey = do_Buffer(conn, tree, tvb, off, 'Matchmake_Extension_CreateMatchmakeSession_sessionKey')
 end
			},
			[7] = {
				["name"] = "JoinMatchmakeSession",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Matchmake_Extension_JoinMatchmakeSession_gid = do_Uint32(conn, tree, tvb, off, 'Matchmake_Extension_JoinMatchmakeSession_gid')
off, Matchmake_Extension_JoinMatchmakeSession_strMessage = do_String(conn, tree, tvb, off, 'Matchmake_Extension_JoinMatchmakeSession_strMessage')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Matchmake_Extension_JoinMatchmakeSession_sessionKey = do_Buffer(conn, tree, tvb, off, 'Matchmake_Extension_JoinMatchmakeSession_sessionKey')
 end
			},
			[8] = {
				["name"] = "ModifyCurrentGameAttribute",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Matchmake_Extension_ModifyCurrentGameAttribute_gid = do_Uint32(conn, tree, tvb, off, 'Matchmake_Extension_ModifyCurrentGameAttribute_gid')
off, Matchmake_Extension_ModifyCurrentGameAttribute_attribIndex = do_Uint32(conn, tree, tvb, off, 'Matchmake_Extension_ModifyCurrentGameAttribute_attribIndex')
off, Matchmake_Extension_ModifyCurrentGameAttribute_newValue = do_Uint32(conn, tree, tvb, off, 'Matchmake_Extension_ModifyCurrentGameAttribute_newValue')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[9] = {
				["name"] = "UpdateNotificationData",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Matchmake_Extension_UpdateNotificationData_uiType = do_Uint32(conn, tree, tvb, off, 'Matchmake_Extension_UpdateNotificationData_uiType')
off, Matchmake_Extension_UpdateNotificationData_uiParam1 = do_Uint64(conn, tree, tvb, off, 'Matchmake_Extension_UpdateNotificationData_uiParam1')
off, Matchmake_Extension_UpdateNotificationData_uiParam2 = do_Uint64(conn, tree, tvb, off, 'Matchmake_Extension_UpdateNotificationData_uiParam2')
off, Matchmake_Extension_UpdateNotificationData_strParam = do_String(conn, tree, tvb, off, 'Matchmake_Extension_UpdateNotificationData_strParam')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[10] = {
				["name"] = "GetFriendNotificationData",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Matchmake_Extension_GetFriendNotificationData_uiType = do_Sint32(conn, tree, tvb, off, 'Matchmake_Extension_GetFriendNotificationData_uiType')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
--[[ Stubbed! Missing type (in list) NotificationEvent]]
 end
			},
			[11] = {
				["name"] = "UpdateApplicationBuffer",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Matchmake_Extension_UpdateApplicationBuffer_gid = do_Uint32(conn, tree, tvb, off, 'Matchmake_Extension_UpdateApplicationBuffer_gid')
off, Matchmake_Extension_UpdateApplicationBuffer_applicationBuffer = do_Buffer(conn, tree, tvb, off, 'Matchmake_Extension_UpdateApplicationBuffer_applicationBuffer')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[12] = {
				["name"] = "UpdateMatchmakeSessionAttribute",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Matchmake_Extension_UpdateMatchmakeSessionAttribute_gid = do_Uint32(conn, tree, tvb, off, 'Matchmake_Extension_UpdateMatchmakeSessionAttribute_gid')
-- list !! Uint32
	local Matchmake_Extension_UpdateMatchmakeSessionAttribute_attribs_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Matchmake_Extension_UpdateMatchmakeSessionAttribute_attribs_len, tvb(off,4))
	off = off + 4
	for i=1,Matchmake_Extension_UpdateMatchmakeSessionAttribute_attribs_len do
	off, Matchmake_Extension_UpdateMatchmakeSessionAttribute_attribs_item = do_Uint32(conn, subtree, tvb, off, 'Matchmake_Extension_UpdateMatchmakeSessionAttribute_attribs_item')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[13] = {
				["name"] = "GetlstFriendNotificationData",
				["request"] = function (conn, tree, tvb)
	local off = 0
-- list !! Uint32
	local Matchmake_Extension_GetlstFriendNotificationData_lstTypes_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Matchmake_Extension_GetlstFriendNotificationData_lstTypes_len, tvb(off,4))
	off = off + 4
	for i=1,Matchmake_Extension_GetlstFriendNotificationData_lstTypes_len do
	off, Matchmake_Extension_GetlstFriendNotificationData_lstTypes_item = do_Uint32(conn, subtree, tvb, off, 'Matchmake_Extension_GetlstFriendNotificationData_lstTypes_item')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
--[[ Stubbed! Missing type (in list) NotificationEvent]]
 end
			},
			[14] = {
				["name"] = "UpdateMatchmakeSession",
				["request"] = function (conn, tree, tvb)
	local off = 0

		local Matchmake_Extension_UpdateMatchmakeSession_anyGathering_container = tree:add(F.Data, tvb(off, 0))
		Matchmake_Extension_UpdateMatchmakeSession_anyGathering_container:set_text("Data<Gathering>")
	off, Matchmake_Extension_UpdateMatchmakeSession_anyGathering_type_name = do_String(conn, Matchmake_Extension_UpdateMatchmakeSession_anyGathering_container, tvb, off, 'Matchmake_Extension_UpdateMatchmakeSession_anyGathering_type_name')

off, Matchmake_Extension_UpdateMatchmakeSession_anyGathering_len_plus_four = do_Uint32(conn, Matchmake_Extension_UpdateMatchmakeSession_anyGathering_container, tvb, off, 'Matchmake_Extension_UpdateMatchmakeSession_anyGathering_len_plus_four')

off, Matchmake_Extension_UpdateMatchmakeSession_anyGathering_data_len = do_Uint32(conn, Matchmake_Extension_UpdateMatchmakeSession_anyGathering_container, tvb, off, 'Matchmake_Extension_UpdateMatchmakeSession_anyGathering_data_len')

local type_func = 'do_'..Matchmake_Extension_UpdateMatchmakeSession_anyGathering_type_name
		if _G[type_func] ~= nil then
			off = _G[type_func](conn, Matchmake_Extension_UpdateMatchmakeSession_anyGathering_container, tvb, off, "Matchmake_Extension_UpdateMatchmakeSession_anyGathering_data")
		else
			Matchmake_Extension_UpdateMatchmakeSession_anyGathering_container:add(F.Matchmake_Extension_UpdateMatchmakeSession_anyGathering_data_bytes, tvb(off, Matchmake_Extension_UpdateMatchmakeSession_anyGathering_len))
			off = off + Matchmake_Extension_UpdateMatchmakeSession_anyGathering_data_len
		end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[15] = {
				["name"] = "AutoMatchmakeWithSearchCriteria_Postpone",
				["request"] = function (conn, tree, tvb)
	local off = 0
-- list !! MatchmakeSessionSearchCriteria
	local Matchmake_Extension_AutoMatchmakeWithSearchCriteria_Postpone_lstSearchCriteria_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Matchmake_Extension_AutoMatchmakeWithSearchCriteria_Postpone_lstSearchCriteria_len, tvb(off,4))
	off = off + 4
	for i=1,Matchmake_Extension_AutoMatchmakeWithSearchCriteria_Postpone_lstSearchCriteria_len do
	off = do_MatchmakeSessionSearchCriteria(conn, subtree, tvb, off, 'Matchmake_Extension_AutoMatchmakeWithSearchCriteria_Postpone_lstSearchCriteria_item')

	end
	

		local Matchmake_Extension_AutoMatchmakeWithSearchCriteria_Postpone_anyGathering_container = tree:add(F.Data, tvb(off, 0))
		Matchmake_Extension_AutoMatchmakeWithSearchCriteria_Postpone_anyGathering_container:set_text("Data<Gathering>")
	off, Matchmake_Extension_AutoMatchmakeWithSearchCriteria_Postpone_anyGathering_type_name = do_String(conn, Matchmake_Extension_AutoMatchmakeWithSearchCriteria_Postpone_anyGathering_container, tvb, off, 'Matchmake_Extension_AutoMatchmakeWithSearchCriteria_Postpone_anyGathering_type_name')

off, Matchmake_Extension_AutoMatchmakeWithSearchCriteria_Postpone_anyGathering_len_plus_four = do_Uint32(conn, Matchmake_Extension_AutoMatchmakeWithSearchCriteria_Postpone_anyGathering_container, tvb, off, 'Matchmake_Extension_AutoMatchmakeWithSearchCriteria_Postpone_anyGathering_len_plus_four')

off, Matchmake_Extension_AutoMatchmakeWithSearchCriteria_Postpone_anyGathering_data_len = do_Uint32(conn, Matchmake_Extension_AutoMatchmakeWithSearchCriteria_Postpone_anyGathering_container, tvb, off, 'Matchmake_Extension_AutoMatchmakeWithSearchCriteria_Postpone_anyGathering_data_len')

local type_func = 'do_'..Matchmake_Extension_AutoMatchmakeWithSearchCriteria_Postpone_anyGathering_type_name
		if _G[type_func] ~= nil then
			off = _G[type_func](conn, Matchmake_Extension_AutoMatchmakeWithSearchCriteria_Postpone_anyGathering_container, tvb, off, "Matchmake_Extension_AutoMatchmakeWithSearchCriteria_Postpone_anyGathering_data")
		else
			Matchmake_Extension_AutoMatchmakeWithSearchCriteria_Postpone_anyGathering_container:add(F.Matchmake_Extension_AutoMatchmakeWithSearchCriteria_Postpone_anyGathering_data_bytes, tvb(off, Matchmake_Extension_AutoMatchmakeWithSearchCriteria_Postpone_anyGathering_len))
			off = off + Matchmake_Extension_AutoMatchmakeWithSearchCriteria_Postpone_anyGathering_data_len
		end
	
off, Matchmake_Extension_AutoMatchmakeWithSearchCriteria_Postpone_strMessage = do_String(conn, tree, tvb, off, 'Matchmake_Extension_AutoMatchmakeWithSearchCriteria_Postpone_strMessage')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0

		local Matchmake_Extension_AutoMatchmakeWithSearchCriteria_Postpone_joinedGathering_container = tree:add(F.Data, tvb(off, 0))
		Matchmake_Extension_AutoMatchmakeWithSearchCriteria_Postpone_joinedGathering_container:set_text("Data<Gathering>")
	off, Matchmake_Extension_AutoMatchmakeWithSearchCriteria_Postpone_joinedGathering_type_name = do_String(conn, Matchmake_Extension_AutoMatchmakeWithSearchCriteria_Postpone_joinedGathering_container, tvb, off, 'Matchmake_Extension_AutoMatchmakeWithSearchCriteria_Postpone_joinedGathering_type_name')

off, Matchmake_Extension_AutoMatchmakeWithSearchCriteria_Postpone_joinedGathering_len_plus_four = do_Uint32(conn, Matchmake_Extension_AutoMatchmakeWithSearchCriteria_Postpone_joinedGathering_container, tvb, off, 'Matchmake_Extension_AutoMatchmakeWithSearchCriteria_Postpone_joinedGathering_len_plus_four')

off, Matchmake_Extension_AutoMatchmakeWithSearchCriteria_Postpone_joinedGathering_data_len = do_Uint32(conn, Matchmake_Extension_AutoMatchmakeWithSearchCriteria_Postpone_joinedGathering_container, tvb, off, 'Matchmake_Extension_AutoMatchmakeWithSearchCriteria_Postpone_joinedGathering_data_len')

local type_func = 'do_'..Matchmake_Extension_AutoMatchmakeWithSearchCriteria_Postpone_joinedGathering_type_name
		if _G[type_func] ~= nil then
			off = _G[type_func](conn, Matchmake_Extension_AutoMatchmakeWithSearchCriteria_Postpone_joinedGathering_container, tvb, off, "Matchmake_Extension_AutoMatchmakeWithSearchCriteria_Postpone_joinedGathering_data")
		else
			Matchmake_Extension_AutoMatchmakeWithSearchCriteria_Postpone_joinedGathering_container:add(F.Matchmake_Extension_AutoMatchmakeWithSearchCriteria_Postpone_joinedGathering_data_bytes, tvb(off, Matchmake_Extension_AutoMatchmakeWithSearchCriteria_Postpone_joinedGathering_len))
			off = off + Matchmake_Extension_AutoMatchmakeWithSearchCriteria_Postpone_joinedGathering_data_len
		end
	
 end
			},
			[16] = {
				["name"] = "GetPlayingSession",
				["request"] = function (conn, tree, tvb)
	local off = 0
-- list !! PID
	local Matchmake_Extension_GetPlayingSession_lstPid_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Matchmake_Extension_GetPlayingSession_lstPid_len, tvb(off,4))
	off = off + 4
	for i=1,Matchmake_Extension_GetPlayingSession_lstPid_len do
	off, Matchmake_Extension_GetPlayingSession_lstPid_item = do_PID(conn, subtree, tvb, off, 'Matchmake_Extension_GetPlayingSession_lstPid_item')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
-- list !! PlayingSession
	local Matchmake_Extension_GetPlayingSession_lstPlayingSession_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Matchmake_Extension_GetPlayingSession_lstPlayingSession_len, tvb(off,4))
	off = off + 4
	for i=1,Matchmake_Extension_GetPlayingSession_lstPlayingSession_len do
	off = do_PlayingSession(conn, subtree, tvb, off, 'Matchmake_Extension_GetPlayingSession_lstPlayingSession_item')

	end
	
 end
			},
			[17] = {
				["name"] = "CreateCommunity",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_PersistentGathering(conn, tree, tvb, off, 'Matchmake_Extension_CreateCommunity_community')
off, Matchmake_Extension_CreateCommunity_strMessage = do_String(conn, tree, tvb, off, 'Matchmake_Extension_CreateCommunity_strMessage')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Matchmake_Extension_CreateCommunity_gid = do_Uint32(conn, tree, tvb, off, 'Matchmake_Extension_CreateCommunity_gid')
 end
			},
			[18] = {
				["name"] = "UpdateCommunity",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_PersistentGathering(conn, tree, tvb, off, 'Matchmake_Extension_UpdateCommunity_community')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[19] = {
				["name"] = "JoinCommunity",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Matchmake_Extension_JoinCommunity_gid = do_Uint32(conn, tree, tvb, off, 'Matchmake_Extension_JoinCommunity_gid')
off, Matchmake_Extension_JoinCommunity_strMessage = do_String(conn, tree, tvb, off, 'Matchmake_Extension_JoinCommunity_strMessage')
off, Matchmake_Extension_JoinCommunity_strPassword = do_String(conn, tree, tvb, off, 'Matchmake_Extension_JoinCommunity_strPassword')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[20] = {
				["name"] = "FindCommunityByGatheringId",
				["request"] = function (conn, tree, tvb)
	local off = 0
-- list !! Uint32
	local Matchmake_Extension_FindCommunityByGatheringId_lstGid_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Matchmake_Extension_FindCommunityByGatheringId_lstGid_len, tvb(off,4))
	off = off + 4
	for i=1,Matchmake_Extension_FindCommunityByGatheringId_lstGid_len do
	off, Matchmake_Extension_FindCommunityByGatheringId_lstGid_item = do_Uint32(conn, subtree, tvb, off, 'Matchmake_Extension_FindCommunityByGatheringId_lstGid_item')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
-- list !! PersistentGathering
	local Matchmake_Extension_FindCommunityByGatheringId_lstCommunity_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Matchmake_Extension_FindCommunityByGatheringId_lstCommunity_len, tvb(off,4))
	off = off + 4
	for i=1,Matchmake_Extension_FindCommunityByGatheringId_lstCommunity_len do
	off = do_PersistentGathering(conn, subtree, tvb, off, 'Matchmake_Extension_FindCommunityByGatheringId_lstCommunity_item')

	end
	
 end
			},
			[21] = {
				["name"] = "FindOfficialCommunity",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Matchmake_Extension_FindOfficialCommunity_isAvailableOnly = do_Bool(conn, tree, tvb, off, 'Matchmake_Extension_FindOfficialCommunity_isAvailableOnly')
off = do_ResultRange(conn, tree, tvb, off, 'Matchmake_Extension_FindOfficialCommunity_resultRange')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
-- list !! PersistentGathering
	local Matchmake_Extension_FindOfficialCommunity_lstCommunity_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Matchmake_Extension_FindOfficialCommunity_lstCommunity_len, tvb(off,4))
	off = off + 4
	for i=1,Matchmake_Extension_FindOfficialCommunity_lstCommunity_len do
	off = do_PersistentGathering(conn, subtree, tvb, off, 'Matchmake_Extension_FindOfficialCommunity_lstCommunity_item')

	end
	
 end
			},
			[22] = {
				["name"] = "FindCommunityByParticipant",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Matchmake_Extension_FindCommunityByParticipant_pid = do_PID(conn, tree, tvb, off, 'Matchmake_Extension_FindCommunityByParticipant_pid')
off = do_ResultRange(conn, tree, tvb, off, 'Matchmake_Extension_FindCommunityByParticipant_resultRange')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
-- list !! PersistentGathering
	local Matchmake_Extension_FindCommunityByParticipant_lstCommunity_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Matchmake_Extension_FindCommunityByParticipant_lstCommunity_len, tvb(off,4))
	off = off + 4
	for i=1,Matchmake_Extension_FindCommunityByParticipant_lstCommunity_len do
	off = do_PersistentGathering(conn, subtree, tvb, off, 'Matchmake_Extension_FindCommunityByParticipant_lstCommunity_item')

	end
	
 end
			},
			[23] = {
				["name"] = "UpdatePrivacySetting",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Matchmake_Extension_UpdatePrivacySetting_onlineStatus = do_Bool(conn, tree, tvb, off, 'Matchmake_Extension_UpdatePrivacySetting_onlineStatus')
off, Matchmake_Extension_UpdatePrivacySetting_participationCommunity = do_Bool(conn, tree, tvb, off, 'Matchmake_Extension_UpdatePrivacySetting_participationCommunity')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[24] = {
				["name"] = "GetMyBlockList",
				["request"] = function (conn, tree, tvb)
	local off = 0
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
-- list !! PID
	local Matchmake_Extension_GetMyBlockList_lstPrincipalId_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Matchmake_Extension_GetMyBlockList_lstPrincipalId_len, tvb(off,4))
	off = off + 4
	for i=1,Matchmake_Extension_GetMyBlockList_lstPrincipalId_len do
	off, Matchmake_Extension_GetMyBlockList_lstPrincipalId_item = do_PID(conn, subtree, tvb, off, 'Matchmake_Extension_GetMyBlockList_lstPrincipalId_item')

	end
	
 end
			},
			[25] = {
				["name"] = "AddToBlockList",
				["request"] = function (conn, tree, tvb)
	local off = 0
-- list !! PID
	local Matchmake_Extension_AddToBlockList_lstPrincipalId_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Matchmake_Extension_AddToBlockList_lstPrincipalId_len, tvb(off,4))
	off = off + 4
	for i=1,Matchmake_Extension_AddToBlockList_lstPrincipalId_len do
	off, Matchmake_Extension_AddToBlockList_lstPrincipalId_item = do_PID(conn, subtree, tvb, off, 'Matchmake_Extension_AddToBlockList_lstPrincipalId_item')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[26] = {
				["name"] = "RemoveFromBlockList",
				["request"] = function (conn, tree, tvb)
	local off = 0
-- list !! PID
	local Matchmake_Extension_RemoveFromBlockList_lstPrincipalId_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Matchmake_Extension_RemoveFromBlockList_lstPrincipalId_len, tvb(off,4))
	off = off + 4
	for i=1,Matchmake_Extension_RemoveFromBlockList_lstPrincipalId_len do
	off, Matchmake_Extension_RemoveFromBlockList_lstPrincipalId_item = do_PID(conn, subtree, tvb, off, 'Matchmake_Extension_RemoveFromBlockList_lstPrincipalId_item')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[27] = {
				["name"] = "ClearMyBlockList",
				["request"] = function (conn, tree, tvb)
	local off = 0
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[28] = {
				["name"] = "ReportViolation",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Matchmake_Extension_ReportViolation_pid = do_PID(conn, tree, tvb, off, 'Matchmake_Extension_ReportViolation_pid')
off, Matchmake_Extension_ReportViolation_userName = do_String(conn, tree, tvb, off, 'Matchmake_Extension_ReportViolation_userName')
off, Matchmake_Extension_ReportViolation_violationCode = do_Uint32(conn, tree, tvb, off, 'Matchmake_Extension_ReportViolation_violationCode')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[29] = {
				["name"] = "IsViolationUser",
				["request"] = function (conn, tree, tvb)
	local off = 0
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Matchmake_Extension_IsViolationUser_flag = do_Bool(conn, tree, tvb, off, 'Matchmake_Extension_IsViolationUser_flag')
off, Matchmake_Extension_IsViolationUser_score = do_Uint32(conn, tree, tvb, off, 'Matchmake_Extension_IsViolationUser_score')
 end
			},
			[30] = {
				["name"] = "JoinMatchmakeSessionEx",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Matchmake_Extension_JoinMatchmakeSessionEx_gid = do_Uint32(conn, tree, tvb, off, 'Matchmake_Extension_JoinMatchmakeSessionEx_gid')
off, Matchmake_Extension_JoinMatchmakeSessionEx_strMessage = do_String(conn, tree, tvb, off, 'Matchmake_Extension_JoinMatchmakeSessionEx_strMessage')
off, Matchmake_Extension_JoinMatchmakeSessionEx_dontCareMyBlockList = do_Bool(conn, tree, tvb, off, 'Matchmake_Extension_JoinMatchmakeSessionEx_dontCareMyBlockList')
off, Matchmake_Extension_JoinMatchmakeSessionEx_participationCount = do_Uint16(conn, tree, tvb, off, 'Matchmake_Extension_JoinMatchmakeSessionEx_participationCount')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Matchmake_Extension_JoinMatchmakeSessionEx_sessionKey = do_Buffer(conn, tree, tvb, off, 'Matchmake_Extension_JoinMatchmakeSessionEx_sessionKey')
 end
			},
			[31] = {
				["name"] = "GetSimplePlayingSession",
				["request"] = function (conn, tree, tvb)
	local off = 0
-- list !! PID
	local Matchmake_Extension_GetSimplePlayingSession_lstPrincipalId_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Matchmake_Extension_GetSimplePlayingSession_lstPrincipalId_len, tvb(off,4))
	off = off + 4
	for i=1,Matchmake_Extension_GetSimplePlayingSession_lstPrincipalId_len do
	off, Matchmake_Extension_GetSimplePlayingSession_lstPrincipalId_item = do_PID(conn, subtree, tvb, off, 'Matchmake_Extension_GetSimplePlayingSession_lstPrincipalId_item')

	end
	
off, Matchmake_Extension_GetSimplePlayingSession_includeLoginUser = do_Bool(conn, tree, tvb, off, 'Matchmake_Extension_GetSimplePlayingSession_includeLoginUser')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
-- list !! SimplePlayingSession
	local Matchmake_Extension_GetSimplePlayingSession_lstSimplePlayingSession_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Matchmake_Extension_GetSimplePlayingSession_lstSimplePlayingSession_len, tvb(off,4))
	off = off + 4
	for i=1,Matchmake_Extension_GetSimplePlayingSession_lstSimplePlayingSession_len do
	off = do_SimplePlayingSession(conn, subtree, tvb, off, 'Matchmake_Extension_GetSimplePlayingSession_lstSimplePlayingSession_item')

	end
	
 end
			},
			[32] = {
				["name"] = "GetSimpleCommunity",
				["request"] = function (conn, tree, tvb)
	local off = 0
-- list !! Uint32
	local Matchmake_Extension_GetSimpleCommunity_gatheringIdList_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Matchmake_Extension_GetSimpleCommunity_gatheringIdList_len, tvb(off,4))
	off = off + 4
	for i=1,Matchmake_Extension_GetSimpleCommunity_gatheringIdList_len do
	off, Matchmake_Extension_GetSimpleCommunity_gatheringIdList_item = do_Uint32(conn, subtree, tvb, off, 'Matchmake_Extension_GetSimpleCommunity_gatheringIdList_item')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
-- list !! SimpleCommunity
	local Matchmake_Extension_GetSimpleCommunity_lstSimpleCommunityList_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Matchmake_Extension_GetSimpleCommunity_lstSimpleCommunityList_len, tvb(off,4))
	off = off + 4
	for i=1,Matchmake_Extension_GetSimpleCommunity_lstSimpleCommunityList_len do
	off = do_SimpleCommunity(conn, subtree, tvb, off, 'Matchmake_Extension_GetSimpleCommunity_lstSimpleCommunityList_item')

	end
	
 end
			},
			[33] = {
				["name"] = "AutoMatchmakeWithGatheringId_Postpone",
				["request"] = function (conn, tree, tvb)
	local off = 0
-- list !! Uint32
	local Matchmake_Extension_AutoMatchmakeWithGatheringId_Postpone_lstGid_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Matchmake_Extension_AutoMatchmakeWithGatheringId_Postpone_lstGid_len, tvb(off,4))
	off = off + 4
	for i=1,Matchmake_Extension_AutoMatchmakeWithGatheringId_Postpone_lstGid_len do
	off, Matchmake_Extension_AutoMatchmakeWithGatheringId_Postpone_lstGid_item = do_Uint32(conn, subtree, tvb, off, 'Matchmake_Extension_AutoMatchmakeWithGatheringId_Postpone_lstGid_item')

	end
	

		local Matchmake_Extension_AutoMatchmakeWithGatheringId_Postpone_anyGathering_container = tree:add(F.Data, tvb(off, 0))
		Matchmake_Extension_AutoMatchmakeWithGatheringId_Postpone_anyGathering_container:set_text("Data<Gathering>")
	off, Matchmake_Extension_AutoMatchmakeWithGatheringId_Postpone_anyGathering_type_name = do_String(conn, Matchmake_Extension_AutoMatchmakeWithGatheringId_Postpone_anyGathering_container, tvb, off, 'Matchmake_Extension_AutoMatchmakeWithGatheringId_Postpone_anyGathering_type_name')

off, Matchmake_Extension_AutoMatchmakeWithGatheringId_Postpone_anyGathering_len_plus_four = do_Uint32(conn, Matchmake_Extension_AutoMatchmakeWithGatheringId_Postpone_anyGathering_container, tvb, off, 'Matchmake_Extension_AutoMatchmakeWithGatheringId_Postpone_anyGathering_len_plus_four')

off, Matchmake_Extension_AutoMatchmakeWithGatheringId_Postpone_anyGathering_data_len = do_Uint32(conn, Matchmake_Extension_AutoMatchmakeWithGatheringId_Postpone_anyGathering_container, tvb, off, 'Matchmake_Extension_AutoMatchmakeWithGatheringId_Postpone_anyGathering_data_len')

local type_func = 'do_'..Matchmake_Extension_AutoMatchmakeWithGatheringId_Postpone_anyGathering_type_name
		if _G[type_func] ~= nil then
			off = _G[type_func](conn, Matchmake_Extension_AutoMatchmakeWithGatheringId_Postpone_anyGathering_container, tvb, off, "Matchmake_Extension_AutoMatchmakeWithGatheringId_Postpone_anyGathering_data")
		else
			Matchmake_Extension_AutoMatchmakeWithGatheringId_Postpone_anyGathering_container:add(F.Matchmake_Extension_AutoMatchmakeWithGatheringId_Postpone_anyGathering_data_bytes, tvb(off, Matchmake_Extension_AutoMatchmakeWithGatheringId_Postpone_anyGathering_len))
			off = off + Matchmake_Extension_AutoMatchmakeWithGatheringId_Postpone_anyGathering_data_len
		end
	
off, Matchmake_Extension_AutoMatchmakeWithGatheringId_Postpone_strMessage = do_String(conn, tree, tvb, off, 'Matchmake_Extension_AutoMatchmakeWithGatheringId_Postpone_strMessage')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0

		local Matchmake_Extension_AutoMatchmakeWithGatheringId_Postpone_joinedGathering_container = tree:add(F.Data, tvb(off, 0))
		Matchmake_Extension_AutoMatchmakeWithGatheringId_Postpone_joinedGathering_container:set_text("Data<Gathering>")
	off, Matchmake_Extension_AutoMatchmakeWithGatheringId_Postpone_joinedGathering_type_name = do_String(conn, Matchmake_Extension_AutoMatchmakeWithGatheringId_Postpone_joinedGathering_container, tvb, off, 'Matchmake_Extension_AutoMatchmakeWithGatheringId_Postpone_joinedGathering_type_name')

off, Matchmake_Extension_AutoMatchmakeWithGatheringId_Postpone_joinedGathering_len_plus_four = do_Uint32(conn, Matchmake_Extension_AutoMatchmakeWithGatheringId_Postpone_joinedGathering_container, tvb, off, 'Matchmake_Extension_AutoMatchmakeWithGatheringId_Postpone_joinedGathering_len_plus_four')

off, Matchmake_Extension_AutoMatchmakeWithGatheringId_Postpone_joinedGathering_data_len = do_Uint32(conn, Matchmake_Extension_AutoMatchmakeWithGatheringId_Postpone_joinedGathering_container, tvb, off, 'Matchmake_Extension_AutoMatchmakeWithGatheringId_Postpone_joinedGathering_data_len')

local type_func = 'do_'..Matchmake_Extension_AutoMatchmakeWithGatheringId_Postpone_joinedGathering_type_name
		if _G[type_func] ~= nil then
			off = _G[type_func](conn, Matchmake_Extension_AutoMatchmakeWithGatheringId_Postpone_joinedGathering_container, tvb, off, "Matchmake_Extension_AutoMatchmakeWithGatheringId_Postpone_joinedGathering_data")
		else
			Matchmake_Extension_AutoMatchmakeWithGatheringId_Postpone_joinedGathering_container:add(F.Matchmake_Extension_AutoMatchmakeWithGatheringId_Postpone_joinedGathering_data_bytes, tvb(off, Matchmake_Extension_AutoMatchmakeWithGatheringId_Postpone_joinedGathering_len))
			off = off + Matchmake_Extension_AutoMatchmakeWithGatheringId_Postpone_joinedGathering_data_len
		end
	
 end
			},
			[34] = {
				["name"] = "UpdateProgressScore",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Matchmake_Extension_UpdateProgressScore_gid = do_Uint32(conn, tree, tvb, off, 'Matchmake_Extension_UpdateProgressScore_gid')
off, Matchmake_Extension_UpdateProgressScore_progressScore = do_Uint8(conn, tree, tvb, off, 'Matchmake_Extension_UpdateProgressScore_progressScore')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[35] = {
				["name"] = "DebugNotifyEvent",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Matchmake_Extension_DebugNotifyEvent_pid = do_PID(conn, tree, tvb, off, 'Matchmake_Extension_DebugNotifyEvent_pid')
off, Matchmake_Extension_DebugNotifyEvent_mainType = do_Uint32(conn, tree, tvb, off, 'Matchmake_Extension_DebugNotifyEvent_mainType')
off, Matchmake_Extension_DebugNotifyEvent_subType = do_Uint32(conn, tree, tvb, off, 'Matchmake_Extension_DebugNotifyEvent_subType')
off, Matchmake_Extension_DebugNotifyEvent_param1 = do_Uint64(conn, tree, tvb, off, 'Matchmake_Extension_DebugNotifyEvent_param1')
off, Matchmake_Extension_DebugNotifyEvent_param2 = do_Uint64(conn, tree, tvb, off, 'Matchmake_Extension_DebugNotifyEvent_param2')
off, Matchmake_Extension_DebugNotifyEvent_stringParam = do_String(conn, tree, tvb, off, 'Matchmake_Extension_DebugNotifyEvent_stringParam')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[36] = {
				["name"] = "GenerateMatchmakeSessionSystemPassword",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Matchmake_Extension_GenerateMatchmakeSessionSystemPassword_gid = do_Uint32(conn, tree, tvb, off, 'Matchmake_Extension_GenerateMatchmakeSessionSystemPassword_gid')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Matchmake_Extension_GenerateMatchmakeSessionSystemPassword_password = do_String(conn, tree, tvb, off, 'Matchmake_Extension_GenerateMatchmakeSessionSystemPassword_password')
 end
			},
			[37] = {
				["name"] = "ClearMatchmakeSessionSystemPassword",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Matchmake_Extension_ClearMatchmakeSessionSystemPassword_gid = do_Uint32(conn, tree, tvb, off, 'Matchmake_Extension_ClearMatchmakeSessionSystemPassword_gid')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[38] = {
				["name"] = "CreateMatchmakeSessionWithParam",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_CreateMatchmakeSessionParam(conn, tree, tvb, off, 'Matchmake_Extension_CreateMatchmakeSessionWithParam_createMatchmakeSessionParam')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off = do_MatchmakeSession(conn, tree, tvb, off, 'Matchmake_Extension_CreateMatchmakeSessionWithParam_joinedMatchmakeSession')
 end
			},
			[39] = {
				["name"] = "JoinMatchmakeSessionWithParam",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_JoinMatchmakeSessionParam(conn, tree, tvb, off, 'Matchmake_Extension_JoinMatchmakeSessionWithParam_joinMatchmakeSessionParam')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off = do_MatchmakeSession(conn, tree, tvb, off, 'Matchmake_Extension_JoinMatchmakeSessionWithParam_joinedMatchmakeSession')
 end
			},
			[40] = {
				["name"] = "AutoMatchmakeWithParam_Postpone",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_AutoMatchmakeParam(conn, tree, tvb, off, 'Matchmake_Extension_AutoMatchmakeWithParam_Postpone_autoMatchmakeParam')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off = do_MatchmakeSession(conn, tree, tvb, off, 'Matchmake_Extension_AutoMatchmakeWithParam_Postpone_joinedMatchmakeSession')
 end
			},
			[41] = {
				["name"] = "FindMatchmakeSessionByGatheringIdDetail",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Matchmake_Extension_FindMatchmakeSessionByGatheringIdDetail_gid = do_Uint32(conn, tree, tvb, off, 'Matchmake_Extension_FindMatchmakeSessionByGatheringIdDetail_gid')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off = do_MatchmakeSession(conn, tree, tvb, off, 'Matchmake_Extension_FindMatchmakeSessionByGatheringIdDetail_matchmakeSession')
 end
			},
			[42] = {
				["name"] = "BrowseMatchmakeSessionNoHolder",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_MatchmakeSessionSearchCriteria(conn, tree, tvb, off, 'Matchmake_Extension_BrowseMatchmakeSessionNoHolder_searchCriteria')
off = do_ResultRange(conn, tree, tvb, off, 'Matchmake_Extension_BrowseMatchmakeSessionNoHolder_resultRange')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
-- list !! MatchmakeSession
	local Matchmake_Extension_BrowseMatchmakeSessionNoHolder_lstMatchmakeSession_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Matchmake_Extension_BrowseMatchmakeSessionNoHolder_lstMatchmakeSession_len, tvb(off,4))
	off = off + 4
	for i=1,Matchmake_Extension_BrowseMatchmakeSessionNoHolder_lstMatchmakeSession_len do
	off = do_MatchmakeSession(conn, subtree, tvb, off, 'Matchmake_Extension_BrowseMatchmakeSessionNoHolder_lstMatchmakeSession_item')

	end
	
 end
			},
			[43] = {
				["name"] = "BrowseMatchmakeSessionWithHostUrlsNoHolder",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_MatchmakeSessionSearchCriteria(conn, tree, tvb, off, 'Matchmake_Extension_BrowseMatchmakeSessionWithHostUrlsNoHolder_searchCriteria')
off = do_ResultRange(conn, tree, tvb, off, 'Matchmake_Extension_BrowseMatchmakeSessionWithHostUrlsNoHolder_resultRange')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
-- list !! MatchmakeSession
	local Matchmake_Extension_BrowseMatchmakeSessionWithHostUrlsNoHolder_lstMatchmakeSession_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Matchmake_Extension_BrowseMatchmakeSessionWithHostUrlsNoHolder_lstMatchmakeSession_len, tvb(off,4))
	off = off + 4
	for i=1,Matchmake_Extension_BrowseMatchmakeSessionWithHostUrlsNoHolder_lstMatchmakeSession_len do
	off = do_MatchmakeSession(conn, subtree, tvb, off, 'Matchmake_Extension_BrowseMatchmakeSessionWithHostUrlsNoHolder_lstMatchmakeSession_item')

	end
	
-- list !! GatheringURLs
	local Matchmake_Extension_BrowseMatchmakeSessionWithHostUrlsNoHolder_lstGatheringUrls_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Matchmake_Extension_BrowseMatchmakeSessionWithHostUrlsNoHolder_lstGatheringUrls_len, tvb(off,4))
	off = off + 4
	for i=1,Matchmake_Extension_BrowseMatchmakeSessionWithHostUrlsNoHolder_lstGatheringUrls_len do
	off = do_GatheringURLs(conn, subtree, tvb, off, 'Matchmake_Extension_BrowseMatchmakeSessionWithHostUrlsNoHolder_lstGatheringUrls_item')

	end
	
 end
			},
			[44] = {
				["name"] = "UpdateMatchmakeSessionPart",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_UpdateMatchmakeSessionParam(conn, tree, tvb, off, 'Matchmake_Extension_UpdateMatchmakeSessionPart_updateMatchmakeSessionParam')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[45] = {
				["name"] = "RequestMatchmaking",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_AutoMatchmakeParam(conn, tree, tvb, off, 'Matchmake_Extension_RequestMatchmaking_autoMatchmakeParam')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Matchmake_Extension_RequestMatchmaking_requestId = do_Uint64(conn, tree, tvb, off, 'Matchmake_Extension_RequestMatchmaking_requestId')
 end
			},
			[46] = {
				["name"] = "WithdrawMatchmaking",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Matchmake_Extension_WithdrawMatchmaking_requestId = do_Uint64(conn, tree, tvb, off, 'Matchmake_Extension_WithdrawMatchmaking_requestId')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[47] = {
				["name"] = "WithdrawMatchmakingAll",
				["request"] = function (conn, tree, tvb)
	local off = 0
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[48] = {
				["name"] = "FindMatchmakeSessionByGatheringId",
				["request"] = function (conn, tree, tvb)
	local off = 0
-- list !! Uint32
	local Matchmake_Extension_FindMatchmakeSessionByGatheringId_lstGid_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Matchmake_Extension_FindMatchmakeSessionByGatheringId_lstGid_len, tvb(off,4))
	off = off + 4
	for i=1,Matchmake_Extension_FindMatchmakeSessionByGatheringId_lstGid_len do
	off, Matchmake_Extension_FindMatchmakeSessionByGatheringId_lstGid_item = do_Uint32(conn, subtree, tvb, off, 'Matchmake_Extension_FindMatchmakeSessionByGatheringId_lstGid_item')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
-- list !! MatchmakeSession
	local Matchmake_Extension_FindMatchmakeSessionByGatheringId_lstMatchmakeSession_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Matchmake_Extension_FindMatchmakeSessionByGatheringId_lstMatchmakeSession_len, tvb(off,4))
	off = off + 4
	for i=1,Matchmake_Extension_FindMatchmakeSessionByGatheringId_lstMatchmakeSession_len do
	off = do_MatchmakeSession(conn, subtree, tvb, off, 'Matchmake_Extension_FindMatchmakeSessionByGatheringId_lstMatchmakeSession_item')

	end
	
 end
			},
			[49] = {
				["name"] = "FindMatchmakeSessionBySingleGatheringId",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Matchmake_Extension_FindMatchmakeSessionBySingleGatheringId_gid = do_Uint32(conn, tree, tvb, off, 'Matchmake_Extension_FindMatchmakeSessionBySingleGatheringId_gid')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off = do_MatchmakeSession(conn, tree, tvb, off, 'Matchmake_Extension_FindMatchmakeSessionBySingleGatheringId_matchmakeSession')
 end
			},
			[50] = {
				["name"] = "FindMatchmakeSessionByOwner",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Matchmake_Extension_FindMatchmakeSessionByOwner_id = do_PID(conn, tree, tvb, off, 'Matchmake_Extension_FindMatchmakeSessionByOwner_id')
off = do_ResultRange(conn, tree, tvb, off, 'Matchmake_Extension_FindMatchmakeSessionByOwner_resultRange')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
-- list !! MatchmakeSession
	local Matchmake_Extension_FindMatchmakeSessionByOwner_lstMatchmakeSession_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Matchmake_Extension_FindMatchmakeSessionByOwner_lstMatchmakeSession_len, tvb(off,4))
	off = off + 4
	for i=1,Matchmake_Extension_FindMatchmakeSessionByOwner_lstMatchmakeSession_len do
	off = do_MatchmakeSession(conn, subtree, tvb, off, 'Matchmake_Extension_FindMatchmakeSessionByOwner_lstMatchmakeSession_item')

	end
	
 end
			},
			[51] = {
				["name"] = "FindMatchmakeSessionByParticipant",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_FindMatchmakeSessionByParticipantParam(conn, tree, tvb, off, 'Matchmake_Extension_FindMatchmakeSessionByParticipant_param')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
-- list !! FindMatchmakeSessionByParticipantResult
	local Matchmake_Extension_FindMatchmakeSessionByParticipant_lstSession_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Matchmake_Extension_FindMatchmakeSessionByParticipant_lstSession_len, tvb(off,4))
	off = off + 4
	for i=1,Matchmake_Extension_FindMatchmakeSessionByParticipant_lstSession_len do
	off = do_FindMatchmakeSessionByParticipantResult(conn, subtree, tvb, off, 'Matchmake_Extension_FindMatchmakeSessionByParticipant_lstSession_item')

	end
	
 end
			},
			[52] = {
				["name"] = "BrowseMatchmakeSessionNoHolderNoResultRange",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_MatchmakeSessionSearchCriteria(conn, tree, tvb, off, 'Matchmake_Extension_BrowseMatchmakeSessionNoHolderNoResultRange_searchCriteria')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
-- list !! MatchmakeSession
	local Matchmake_Extension_BrowseMatchmakeSessionNoHolderNoResultRange_lstMatchmakeSession_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Matchmake_Extension_BrowseMatchmakeSessionNoHolderNoResultRange_lstMatchmakeSession_len, tvb(off,4))
	off = off + 4
	for i=1,Matchmake_Extension_BrowseMatchmakeSessionNoHolderNoResultRange_lstMatchmakeSession_len do
	off = do_MatchmakeSession(conn, subtree, tvb, off, 'Matchmake_Extension_BrowseMatchmakeSessionNoHolderNoResultRange_lstMatchmakeSession_item')

	end
	
 end
			},
			[53] = {
				["name"] = "BrowseMatchmakeSessionWithHostUrlsNoHolderNoResultRange",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_MatchmakeSessionSearchCriteria(conn, tree, tvb, off, 'Matchmake_Extension_BrowseMatchmakeSessionWithHostUrlsNoHolderNoResultRange_searchCriteria')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
-- list !! MatchmakeSession
	local Matchmake_Extension_BrowseMatchmakeSessionWithHostUrlsNoHolderNoResultRange_lstMatchmakeSession_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Matchmake_Extension_BrowseMatchmakeSessionWithHostUrlsNoHolderNoResultRange_lstMatchmakeSession_len, tvb(off,4))
	off = off + 4
	for i=1,Matchmake_Extension_BrowseMatchmakeSessionWithHostUrlsNoHolderNoResultRange_lstMatchmakeSession_len do
	off = do_MatchmakeSession(conn, subtree, tvb, off, 'Matchmake_Extension_BrowseMatchmakeSessionWithHostUrlsNoHolderNoResultRange_lstMatchmakeSession_item')

	end
	
-- list !! GatheringURLs
	local Matchmake_Extension_BrowseMatchmakeSessionWithHostUrlsNoHolderNoResultRange_lstGatheringUrls_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Matchmake_Extension_BrowseMatchmakeSessionWithHostUrlsNoHolderNoResultRange_lstGatheringUrls_len, tvb(off,4))
	off = off + 4
	for i=1,Matchmake_Extension_BrowseMatchmakeSessionWithHostUrlsNoHolderNoResultRange_lstGatheringUrls_len do
	off = do_GatheringURLs(conn, subtree, tvb, off, 'Matchmake_Extension_BrowseMatchmakeSessionWithHostUrlsNoHolderNoResultRange_lstGatheringUrls_item')

	end
	
 end
			},
			
		}
	},
[0x18] =
	{
		["name"] = "Persistent Store",
		["methods"] = {
[1] = {
				["name"] = "FindByGroup",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Persistent_Store_FindByGroup_uiGroup = do_Uint32(conn, tree, tvb, off, 'Persistent_Store_FindByGroup_uiGroup')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
-- list !! String
	local Persistent_Store_FindByGroup_lstTags_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Persistent_Store_FindByGroup_lstTags_len, tvb(off,4))
	off = off + 4
	for i=1,Persistent_Store_FindByGroup_lstTags_len do
	off, Persistent_Store_FindByGroup_lstTags_item = do_String(conn, subtree, tvb, off, 'Persistent_Store_FindByGroup_lstTags_item')

	end
	
 end
			},
			[2] = {
				["name"] = "InsertItem",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Persistent_Store_InsertItem_uiGroup = do_Uint32(conn, tree, tvb, off, 'Persistent_Store_InsertItem_uiGroup')
off, Persistent_Store_InsertItem_strTag = do_String(conn, tree, tvb, off, 'Persistent_Store_InsertItem_strTag')
off, Persistent_Store_InsertItem_bufData = do_Buffer(conn, tree, tvb, off, 'Persistent_Store_InsertItem_bufData')
off, Persistent_Store_InsertItem_bReplace = do_Bool(conn, tree, tvb, off, 'Persistent_Store_InsertItem_bReplace')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Persistent_Store_InsertItem_bResult = do_Bool(conn, tree, tvb, off, 'Persistent_Store_InsertItem_bResult')
 end
			},
			[3] = {
				["name"] = "RemoveItem",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Persistent_Store_RemoveItem_uiGroup = do_Uint32(conn, tree, tvb, off, 'Persistent_Store_RemoveItem_uiGroup')
off, Persistent_Store_RemoveItem_strTag = do_String(conn, tree, tvb, off, 'Persistent_Store_RemoveItem_strTag')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Persistent_Store_RemoveItem_bResult = do_Bool(conn, tree, tvb, off, 'Persistent_Store_RemoveItem_bResult')
 end
			},
			[4] = {
				["name"] = "GetItem",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Persistent_Store_GetItem_uiGroup = do_Uint32(conn, tree, tvb, off, 'Persistent_Store_GetItem_uiGroup')
off, Persistent_Store_GetItem_strTag = do_String(conn, tree, tvb, off, 'Persistent_Store_GetItem_strTag')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Persistent_Store_GetItem_bufData = do_Buffer(conn, tree, tvb, off, 'Persistent_Store_GetItem_bufData')
off, Persistent_Store_GetItem_bResult = do_Bool(conn, tree, tvb, off, 'Persistent_Store_GetItem_bResult')
 end
			},
			[5] = {
				["name"] = "InsertCustomItem",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Persistent_Store_InsertCustomItem_uiGroup = do_Uint32(conn, tree, tvb, off, 'Persistent_Store_InsertCustomItem_uiGroup')
off, Persistent_Store_InsertCustomItem_strTag = do_String(conn, tree, tvb, off, 'Persistent_Store_InsertCustomItem_strTag')

		local Persistent_Store_InsertCustomItem_hData_container = tree:add(F.Data, tvb(off, 0))
		Persistent_Store_InsertCustomItem_hData_container:set_text("Data")
	off, Persistent_Store_InsertCustomItem_hData_type_name = do_String(conn, Persistent_Store_InsertCustomItem_hData_container, tvb, off, 'Persistent_Store_InsertCustomItem_hData_type_name')

off, Persistent_Store_InsertCustomItem_hData_len_plus_four = do_Uint32(conn, Persistent_Store_InsertCustomItem_hData_container, tvb, off, 'Persistent_Store_InsertCustomItem_hData_len_plus_four')

off, Persistent_Store_InsertCustomItem_hData_data_len = do_Uint32(conn, Persistent_Store_InsertCustomItem_hData_container, tvb, off, 'Persistent_Store_InsertCustomItem_hData_data_len')

local type_func = 'do_'..Persistent_Store_InsertCustomItem_hData_type_name
		if _G[type_func] ~= nil then
			off = _G[type_func](conn, Persistent_Store_InsertCustomItem_hData_container, tvb, off, "Persistent_Store_InsertCustomItem_hData_data")
		else
			Persistent_Store_InsertCustomItem_hData_container:add(F.Persistent_Store_InsertCustomItem_hData_data_bytes, tvb(off, Persistent_Store_InsertCustomItem_hData_len))
			off = off + Persistent_Store_InsertCustomItem_hData_data_len
		end
	
off, Persistent_Store_InsertCustomItem_bReplace = do_Bool(conn, tree, tvb, off, 'Persistent_Store_InsertCustomItem_bReplace')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[6] = {
				["name"] = "GetCustomItem",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Persistent_Store_GetCustomItem_uiGroup = do_Uint32(conn, tree, tvb, off, 'Persistent_Store_GetCustomItem_uiGroup')
off, Persistent_Store_GetCustomItem_strTag = do_String(conn, tree, tvb, off, 'Persistent_Store_GetCustomItem_strTag')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0

		local Persistent_Store_GetCustomItem_hData_container = tree:add(F.Data, tvb(off, 0))
		Persistent_Store_GetCustomItem_hData_container:set_text("Data")
	off, Persistent_Store_GetCustomItem_hData_type_name = do_String(conn, Persistent_Store_GetCustomItem_hData_container, tvb, off, 'Persistent_Store_GetCustomItem_hData_type_name')

off, Persistent_Store_GetCustomItem_hData_len_plus_four = do_Uint32(conn, Persistent_Store_GetCustomItem_hData_container, tvb, off, 'Persistent_Store_GetCustomItem_hData_len_plus_four')

off, Persistent_Store_GetCustomItem_hData_data_len = do_Uint32(conn, Persistent_Store_GetCustomItem_hData_container, tvb, off, 'Persistent_Store_GetCustomItem_hData_data_len')

local type_func = 'do_'..Persistent_Store_GetCustomItem_hData_type_name
		if _G[type_func] ~= nil then
			off = _G[type_func](conn, Persistent_Store_GetCustomItem_hData_container, tvb, off, "Persistent_Store_GetCustomItem_hData_data")
		else
			Persistent_Store_GetCustomItem_hData_container:add(F.Persistent_Store_GetCustomItem_hData_data_bytes, tvb(off, Persistent_Store_GetCustomItem_hData_len))
			off = off + Persistent_Store_GetCustomItem_hData_data_len
		end
	
 end
			},
			[7] = {
				["name"] = "FindItemsBySQLQuery",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Persistent_Store_FindItemsBySQLQuery_uiGroup = do_Uint32(conn, tree, tvb, off, 'Persistent_Store_FindItemsBySQLQuery_uiGroup')
off, Persistent_Store_FindItemsBySQLQuery_strTag = do_String(conn, tree, tvb, off, 'Persistent_Store_FindItemsBySQLQuery_strTag')
off, Persistent_Store_FindItemsBySQLQuery_strQuery = do_String(conn, tree, tvb, off, 'Persistent_Store_FindItemsBySQLQuery_strQuery')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
-- list !! Data
	local Persistent_Store_FindItemsBySQLQuery_lstData_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Persistent_Store_FindItemsBySQLQuery_lstData_len, tvb(off,4))
	off = off + 4
	for i=1,Persistent_Store_FindItemsBySQLQuery_lstData_len do
	
		local Persistent_Store_FindItemsBySQLQuery_lstData_item_container = subtree:add(F.Data, tvb(off, 0))
		Persistent_Store_FindItemsBySQLQuery_lstData_item_container:set_text("Data")
	off, Persistent_Store_FindItemsBySQLQuery_lstData_item_type_name = do_String(conn, Persistent_Store_FindItemsBySQLQuery_lstData_item_container, tvb, off, 'Persistent_Store_FindItemsBySQLQuery_lstData_item_type_name')

off, Persistent_Store_FindItemsBySQLQuery_lstData_item_len_plus_four = do_Uint32(conn, Persistent_Store_FindItemsBySQLQuery_lstData_item_container, tvb, off, 'Persistent_Store_FindItemsBySQLQuery_lstData_item_len_plus_four')

off, Persistent_Store_FindItemsBySQLQuery_lstData_item_data_len = do_Uint32(conn, Persistent_Store_FindItemsBySQLQuery_lstData_item_container, tvb, off, 'Persistent_Store_FindItemsBySQLQuery_lstData_item_data_len')

local type_func = 'do_'..Persistent_Store_FindItemsBySQLQuery_lstData_item_type_name
		if _G[type_func] ~= nil then
			off = _G[type_func](conn, Persistent_Store_FindItemsBySQLQuery_lstData_item_container, tvb, off, "Persistent_Store_FindItemsBySQLQuery_lstData_item_data")
		else
			Persistent_Store_FindItemsBySQLQuery_lstData_item_container:add(F.Persistent_Store_FindItemsBySQLQuery_lstData_item_data_bytes, tvb(off, Persistent_Store_FindItemsBySQLQuery_lstData_item_len))
			off = off + Persistent_Store_FindItemsBySQLQuery_lstData_item_data_len
		end
	

	end
	
 end
			},
			
		}
	},
[0x0A] =
	{
		["name"] = "Authentication",
		["methods"] = {
[1] = {
				["name"] = "Login",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Authentication_Login_strUserName = do_String(conn, tree, tvb, off, 'Authentication_Login_strUserName')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Authentication_Login_retval = do_Result(conn, tree, tvb, off, 'Authentication_Login_retval')
off, Authentication_Login_pidPrincipal = do_PID(conn, tree, tvb, off, 'Authentication_Login_pidPrincipal')
off, Authentication_Login_pbufResponse = do_Buffer(conn, tree, tvb, off, 'Authentication_Login_pbufResponse')
off = do_RVConnectionData(conn, tree, tvb, off, 'Authentication_Login_pConnectionData')
off, Authentication_Login_strReturnMsg = do_String(conn, tree, tvb, off, 'Authentication_Login_strReturnMsg')
 end
			},
			[2] = {
				["name"] = "LoginEx",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Authentication_LoginEx_strUserName = do_String(conn, tree, tvb, off, 'Authentication_LoginEx_strUserName')
--[[ Stubbed! Missing type (in Data) AuthenticationInfo]]
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Authentication_LoginEx_retval = do_Result(conn, tree, tvb, off, 'Authentication_LoginEx_retval')
off, Authentication_LoginEx_pidPrincipal = do_PID(conn, tree, tvb, off, 'Authentication_LoginEx_pidPrincipal')
off, Authentication_LoginEx_pbufResponse = do_Buffer(conn, tree, tvb, off, 'Authentication_LoginEx_pbufResponse')
off = do_RVConnectionData(conn, tree, tvb, off, 'Authentication_LoginEx_pConnectionData')
off, Authentication_LoginEx_strReturnMsg = do_String(conn, tree, tvb, off, 'Authentication_LoginEx_strReturnMsg')
off, Authentication_LoginEx_pSourceKey = do_String(conn, tree, tvb, off, 'Authentication_LoginEx_pSourceKey')
 end
			},
			[3] = {
				["name"] = "RequestTicket",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Authentication_RequestTicket_idSource = do_PID(conn, tree, tvb, off, 'Authentication_RequestTicket_idSource')
off, Authentication_RequestTicket_idTarget = do_PID(conn, tree, tvb, off, 'Authentication_RequestTicket_idTarget')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Authentication_RequestTicket_retval = do_Result(conn, tree, tvb, off, 'Authentication_RequestTicket_retval')
off, Authentication_RequestTicket_bufResponse = do_Buffer(conn, tree, tvb, off, 'Authentication_RequestTicket_bufResponse')
 end
			},
			[4] = {
				["name"] = "GetPID",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Authentication_GetPID_strUserName = do_String(conn, tree, tvb, off, 'Authentication_GetPID_strUserName')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Authentication_GetPID_retval = do_PID(conn, tree, tvb, off, 'Authentication_GetPID_retval')
 end
			},
			[5] = {
				["name"] = "GetName",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Authentication_GetName_id = do_PID(conn, tree, tvb, off, 'Authentication_GetName_id')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Authentication_GetName_retval = do_String(conn, tree, tvb, off, 'Authentication_GetName_retval')
 end
			},
			[6] = {
				["name"] = "LoginWithContext",
				["request"] = function (conn, tree, tvb)
	local off = 0

		local Authentication_LoginWithContext_loginData_container = tree:add(F.Data, tvb(off, 0))
		Authentication_LoginWithContext_loginData_container:set_text("Data")
	off, Authentication_LoginWithContext_loginData_type_name = do_String(conn, Authentication_LoginWithContext_loginData_container, tvb, off, 'Authentication_LoginWithContext_loginData_type_name')

off, Authentication_LoginWithContext_loginData_len_plus_four = do_Uint32(conn, Authentication_LoginWithContext_loginData_container, tvb, off, 'Authentication_LoginWithContext_loginData_len_plus_four')

off, Authentication_LoginWithContext_loginData_data_len = do_Uint32(conn, Authentication_LoginWithContext_loginData_container, tvb, off, 'Authentication_LoginWithContext_loginData_data_len')

local type_func = 'do_'..Authentication_LoginWithContext_loginData_type_name
		if _G[type_func] ~= nil then
			off = _G[type_func](conn, Authentication_LoginWithContext_loginData_container, tvb, off, "Authentication_LoginWithContext_loginData_data")
		else
			Authentication_LoginWithContext_loginData_container:add(F.Authentication_LoginWithContext_loginData_data_bytes, tvb(off, Authentication_LoginWithContext_loginData_len))
			off = off + Authentication_LoginWithContext_loginData_data_len
		end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Authentication_LoginWithContext_retval = do_Result(conn, tree, tvb, off, 'Authentication_LoginWithContext_retval')
off, Authentication_LoginWithContext_pidPrincipal = do_PID(conn, tree, tvb, off, 'Authentication_LoginWithContext_pidPrincipal')
off, Authentication_LoginWithContext_pbufResponse = do_Buffer(conn, tree, tvb, off, 'Authentication_LoginWithContext_pbufResponse')
off = do_RVConnectionData(conn, tree, tvb, off, 'Authentication_LoginWithContext_pConnectionData')
 end
			},
			
		}
	},
[0x64] =
	{
		["name"] = "Nintendo Notifications",
		["methods"] = {
[1] = {
				["name"] = "ProcessNintendoNotificationEvent",
				["request"] = nil,
				["response"] = nil
			},
			[2] = {
				["name"] = "ProcessNintendoNotificationEvent",
				["request"] = nil,
				["response"] = nil
			},
			
		}
	},
[0x66] =
	{
		["name"] = "Friends Wii U",
		["methods"] = {
[1] = {
				["name"] = "GetAllInformation",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_NNAInfo(conn, tree, tvb, off, 'Friends_Wii_U_GetAllInformation_NNA_Info')
off = do_NintendoPresenceV2(conn, tree, tvb, off, 'Friends_Wii_U_GetAllInformation_Nintendo_presence')
off, Friends_Wii_U_GetAllInformation_Birthday = do_DateTime(conn, tree, tvb, off, 'Friends_Wii_U_GetAllInformation_Birthday')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off = do_PrincipalPreference(conn, tree, tvb, off, 'Friends_Wii_U_GetAllInformation_Principal_preference')
off = do_Comment(conn, tree, tvb, off, 'Friends_Wii_U_GetAllInformation_Status_message')
-- list !! FriendInfo
	local Friends_Wii_U_GetAllInformation_Friend_list_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Friends_Wii_U_GetAllInformation_Friend_list_len, tvb(off,4))
	off = off + 4
	for i=1,Friends_Wii_U_GetAllInformation_Friend_list_len do
	off = do_FriendInfo(conn, subtree, tvb, off, 'Friends_Wii_U_GetAllInformation_Friend_list_item')

	end
	
-- list !! FriendRequest
	local Friends_Wii_U_GetAllInformation_Sent_friend_requests_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Friends_Wii_U_GetAllInformation_Sent_friend_requests_len, tvb(off,4))
	off = off + 4
	for i=1,Friends_Wii_U_GetAllInformation_Sent_friend_requests_len do
	off = do_FriendRequest(conn, subtree, tvb, off, 'Friends_Wii_U_GetAllInformation_Sent_friend_requests_item')

	end
	
-- list !! FriendRequest
	local Friends_Wii_U_GetAllInformation_Received_friend_requests_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Friends_Wii_U_GetAllInformation_Received_friend_requests_len, tvb(off,4))
	off = off + 4
	for i=1,Friends_Wii_U_GetAllInformation_Received_friend_requests_len do
	off = do_FriendRequest(conn, subtree, tvb, off, 'Friends_Wii_U_GetAllInformation_Received_friend_requests_item')

	end
	
-- list !! BlacklistedPrincipal
	local Friends_Wii_U_GetAllInformation_Blacklist_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Friends_Wii_U_GetAllInformation_Blacklist_len, tvb(off,4))
	off = off + 4
	for i=1,Friends_Wii_U_GetAllInformation_Blacklist_len do
	off = do_BlacklistedPrincipal(conn, subtree, tvb, off, 'Friends_Wii_U_GetAllInformation_Blacklist_item')

	end
	
off, Friends_Wii_U_GetAllInformation_Unknown = do_Bool(conn, tree, tvb, off, 'Friends_Wii_U_GetAllInformation_Unknown')
-- list !! PersistentNotification
	local Friends_Wii_U_GetAllInformation_Notifications_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Friends_Wii_U_GetAllInformation_Notifications_len, tvb(off,4))
	off = off + 4
	for i=1,Friends_Wii_U_GetAllInformation_Notifications_len do
	off = do_PersistentNotification(conn, subtree, tvb, off, 'Friends_Wii_U_GetAllInformation_Notifications_item')

	end
	
off, Friends_Wii_U_GetAllInformation_Unknown = do_Bool(conn, tree, tvb, off, 'Friends_Wii_U_GetAllInformation_Unknown')
 end
			},
			[2] = {
				["name"] = "AddFriend",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Friends_Wii_U_AddFriend_Pid = do_PID(conn, tree, tvb, off, 'Friends_Wii_U_AddFriend_Pid')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off = do_FriendRequest(conn, tree, tvb, off, 'Friends_Wii_U_AddFriend_Friend_request')
off = do_FriendInfo(conn, tree, tvb, off, 'Friends_Wii_U_AddFriend_Friend_info')
 end
			},
			[3] = {
				["name"] = "AddFriendByName",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Friends_Wii_U_AddFriendByName_Name = do_String(conn, tree, tvb, off, 'Friends_Wii_U_AddFriendByName_Name')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off = do_FriendRequest(conn, tree, tvb, off, 'Friends_Wii_U_AddFriendByName_Friend_request')
off = do_FriendInfo(conn, tree, tvb, off, 'Friends_Wii_U_AddFriendByName_Friend_info')
 end
			},
			[4] = {
				["name"] = "RemoveFriend",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Friends_Wii_U_RemoveFriend_Pid = do_PID(conn, tree, tvb, off, 'Friends_Wii_U_RemoveFriend_Pid')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[5] = {
				["name"] = "AddFriendRequest",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Friends_Wii_U_AddFriendRequest_Unknown = do_Uint32(conn, tree, tvb, off, 'Friends_Wii_U_AddFriendRequest_Unknown')
off, Friends_Wii_U_AddFriendRequest_Unknown = do_Uint8(conn, tree, tvb, off, 'Friends_Wii_U_AddFriendRequest_Unknown')
off, Friends_Wii_U_AddFriendRequest_Unknown = do_String(conn, tree, tvb, off, 'Friends_Wii_U_AddFriendRequest_Unknown')
off, Friends_Wii_U_AddFriendRequest_Unknown = do_Uint8(conn, tree, tvb, off, 'Friends_Wii_U_AddFriendRequest_Unknown')
off, Friends_Wii_U_AddFriendRequest_Unknown = do_String(conn, tree, tvb, off, 'Friends_Wii_U_AddFriendRequest_Unknown')
off = do_GameKey(conn, tree, tvb, off, 'Friends_Wii_U_AddFriendRequest_Game_key')
off, Friends_Wii_U_AddFriendRequest_Unknown = do_DateTime(conn, tree, tvb, off, 'Friends_Wii_U_AddFriendRequest_Unknown')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off = do_FriendRequest(conn, tree, tvb, off, 'Friends_Wii_U_AddFriendRequest_Friend_request')
off = do_FriendInfo(conn, tree, tvb, off, 'Friends_Wii_U_AddFriendRequest_Friend_info')
 end
			},
			[6] = {
				["name"] = "CancelFriendRequest",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Friends_Wii_U_CancelFriendRequest_Id = do_Uint64(conn, tree, tvb, off, 'Friends_Wii_U_CancelFriendRequest_Id')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[7] = {
				["name"] = "AcceptFriendRequest",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Friends_Wii_U_AcceptFriendRequest_Id = do_Uint64(conn, tree, tvb, off, 'Friends_Wii_U_AcceptFriendRequest_Id')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off = do_FriendInfo(conn, tree, tvb, off, 'Friends_Wii_U_AcceptFriendRequest_Friend_info')
 end
			},
			[8] = {
				["name"] = "DeleteFriendRequest",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Friends_Wii_U_DeleteFriendRequest_Id = do_Uint64(conn, tree, tvb, off, 'Friends_Wii_U_DeleteFriendRequest_Id')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[9] = {
				["name"] = "DenyFriendRequest",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Friends_Wii_U_DenyFriendRequest_Id = do_Uint64(conn, tree, tvb, off, 'Friends_Wii_U_DenyFriendRequest_Id')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off = do_BlacklistedPrincipal(conn, tree, tvb, off, 'Friends_Wii_U_DenyFriendRequest_Blacklisted_principal')
 end
			},
			[10] = {
				["name"] = "MarkFriendRequestsAsReceived",
				["request"] = function (conn, tree, tvb)
	local off = 0
-- list !! Uint64
	local Friends_Wii_U_MarkFriendRequestsAsReceived_Friend_requests_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Friends_Wii_U_MarkFriendRequestsAsReceived_Friend_requests_len, tvb(off,4))
	off = off + 4
	for i=1,Friends_Wii_U_MarkFriendRequestsAsReceived_Friend_requests_len do
	off, Friends_Wii_U_MarkFriendRequestsAsReceived_Friend_requests_item = do_Uint64(conn, subtree, tvb, off, 'Friends_Wii_U_MarkFriendRequestsAsReceived_Friend_requests_item')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[11] = {
				["name"] = "AddBlackList",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_BlacklistedPrincipal(conn, tree, tvb, off, 'Friends_Wii_U_AddBlackList_Blacklisted_principal')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off = do_BlacklistedPrincipal(conn, tree, tvb, off, 'Friends_Wii_U_AddBlackList_Blacklisted_principal')
 end
			},
			[12] = {
				["name"] = "RemoveBlackList",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Friends_Wii_U_RemoveBlackList_Pid = do_PID(conn, tree, tvb, off, 'Friends_Wii_U_RemoveBlackList_Pid')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[13] = {
				["name"] = "UpdatePresence",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_NintendoPresenceV2(conn, tree, tvb, off, 'Friends_Wii_U_UpdatePresence_Nintendo_presence')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[14] = {
				["name"] = "UpdateMii",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_MiiV2(conn, tree, tvb, off, 'Friends_Wii_U_UpdateMii_Mii')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Friends_Wii_U_UpdateMii_Unknown = do_DateTime(conn, tree, tvb, off, 'Friends_Wii_U_UpdateMii_Unknown')
 end
			},
			[15] = {
				["name"] = "UpdateComment",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_Comment(conn, tree, tvb, off, 'Friends_Wii_U_UpdateComment_Status_message')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Friends_Wii_U_UpdateComment_Unknown = do_DateTime(conn, tree, tvb, off, 'Friends_Wii_U_UpdateComment_Unknown')
 end
			},
			[16] = {
				["name"] = "UpdatePreference",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_PrincipalPreference(conn, tree, tvb, off, 'Friends_Wii_U_UpdatePreference_Principal_preferenc')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[17] = {
				["name"] = "GetBasicInfo",
				["request"] = function (conn, tree, tvb)
	local off = 0
-- list !! PID
	local Friends_Wii_U_GetBasicInfo_Pids_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Friends_Wii_U_GetBasicInfo_Pids_len, tvb(off,4))
	off = off + 4
	for i=1,Friends_Wii_U_GetBasicInfo_Pids_len do
	off, Friends_Wii_U_GetBasicInfo_Pids_item = do_PID(conn, subtree, tvb, off, 'Friends_Wii_U_GetBasicInfo_Pids_item')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
-- list !! PrincipalBasicInfo
	local Friends_Wii_U_GetBasicInfo_Infos_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Friends_Wii_U_GetBasicInfo_Infos_len, tvb(off,4))
	off = off + 4
	for i=1,Friends_Wii_U_GetBasicInfo_Infos_len do
	off = do_PrincipalBasicInfo(conn, subtree, tvb, off, 'Friends_Wii_U_GetBasicInfo_Infos_item')

	end
	
 end
			},
			[18] = {
				["name"] = "DeleteFriendFlags",
				["request"] = function (conn, tree, tvb)
	local off = 0
-- list !! PersistentNotification
	local Friends_Wii_U_DeleteFriendFlags_Unknown_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Friends_Wii_U_DeleteFriendFlags_Unknown_len, tvb(off,4))
	off = off + 4
	for i=1,Friends_Wii_U_DeleteFriendFlags_Unknown_len do
	off = do_PersistentNotification(conn, subtree, tvb, off, 'Friends_Wii_U_DeleteFriendFlags_Unknown_item')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			[19] = {
				["name"] = "CheckSettingStatus",
				["request"] = function (conn, tree, tvb)
	local off = 0
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Friends_Wii_U_CheckSettingStatus_Unknown = do_Uint8(conn, tree, tvb, off, 'Friends_Wii_U_CheckSettingStatus_Unknown')
 end
			},
			[20] = {
				["name"] = "GetRequestBlockSettings",
				["request"] = function (conn, tree, tvb)
	local off = 0
-- list !! Uint32
	local Friends_Wii_U_GetRequestBlockSettings_Unknown_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Friends_Wii_U_GetRequestBlockSettings_Unknown_len, tvb(off,4))
	off = off + 4
	for i=1,Friends_Wii_U_GetRequestBlockSettings_Unknown_len do
	off, Friends_Wii_U_GetRequestBlockSettings_Unknown_item = do_Uint32(conn, subtree, tvb, off, 'Friends_Wii_U_GetRequestBlockSettings_Unknown_item')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
-- list !! PrincipalRequestBlockSetting
	local Friends_Wii_U_GetRequestBlockSettings_Settings_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Friends_Wii_U_GetRequestBlockSettings_Settings_len, tvb(off,4))
	off = off + 4
	for i=1,Friends_Wii_U_GetRequestBlockSettings_Settings_len do
	off = do_PrincipalRequestBlockSetting(conn, subtree, tvb, off, 'Friends_Wii_U_GetRequestBlockSettings_Settings_item')

	end
	
 end
			},
			
		}
	},
[0x12] =
	{
		["name"] = "Health",
		["methods"] = {
[1] = {
				["name"] = "PingDaemon",
				["request"] = nil,
				["response"] = nil
			},
			[2] = {
				["name"] = "PingDatabase",
				["request"] = nil,
				["response"] = nil
			},
			[3] = {
				["name"] = "RunSanityCheck",
				["request"] = nil,
				["response"] = nil
			},
			[4] = {
				["name"] = "FixSanityErrors",
				["request"] = nil,
				["response"] = nil
			},
			
		}
	},
[0x400] =
	{
		["name"] = "NAT Traversal",
		["methods"] = {
[1] = {
				["name"] = "Probe request",
				["request"] = nil,
				["response"] = nil
			},
			[2] = {
				["name"] = "Probe reply",
				["request"] = nil,
				["response"] = nil
			},
			[3] = {
				["name"] = "Dummy packet",
				["request"] = nil,
				["response"] = nil
			},
			
		}
	},

[0x10] =
	{
		["name"] = "Simple Authentication",
		["methods"] = {
[1] = {
				["name"] = "Authenticate",
				["request"] = nil,
				["response"] = nil
			},
			[2] = {
				["name"] = "LoginWithToken",
				["request"] = nil,
				["response"] = nil
			},
			[3] = {
				["name"] = "LoginWithTokenEx",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Simple_Authentication_LoginWithTokenEx_strToken = do_String(conn, tree, tvb, off, 'Simple_Authentication_LoginWithTokenEx_strToken')
off = do_RVConnectionData(conn, tree, tvb, off, 'Simple_Authentication_LoginWithTokenEx_pConnectionData')

		local Simple_Authentication_LoginWithTokenEx_oAnyData_container = tree:add(F.Data, tvb(off, 0))
		Simple_Authentication_LoginWithTokenEx_oAnyData_container:set_text("Data")
	off, Simple_Authentication_LoginWithTokenEx_oAnyData_type_name = do_String(conn, Simple_Authentication_LoginWithTokenEx_oAnyData_container, tvb, off, 'Simple_Authentication_LoginWithTokenEx_oAnyData_type_name')

off, Simple_Authentication_LoginWithTokenEx_oAnyData_len_plus_four = do_Uint32(conn, Simple_Authentication_LoginWithTokenEx_oAnyData_container, tvb, off, 'Simple_Authentication_LoginWithTokenEx_oAnyData_len_plus_four')

off, Simple_Authentication_LoginWithTokenEx_oAnyData_data_len = do_Uint32(conn, Simple_Authentication_LoginWithTokenEx_oAnyData_container, tvb, off, 'Simple_Authentication_LoginWithTokenEx_oAnyData_data_len')

local type_func = 'do_'..Simple_Authentication_LoginWithTokenEx_oAnyData_type_name
		if _G[type_func] ~= nil then
			off = _G[type_func](conn, Simple_Authentication_LoginWithTokenEx_oAnyData_container, tvb, off, "Simple_Authentication_LoginWithTokenEx_oAnyData_data")
		else
			Simple_Authentication_LoginWithTokenEx_oAnyData_container:add(F.Simple_Authentication_LoginWithTokenEx_oAnyData_data_bytes, tvb(off, Simple_Authentication_LoginWithTokenEx_oAnyData_len))
			off = off + Simple_Authentication_LoginWithTokenEx_oAnyData_data_len
		end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Simple_Authentication_LoginWithTokenEx_retval = do_Result(conn, tree, tvb, off, 'Simple_Authentication_LoginWithTokenEx_retval')
off, Simple_Authentication_LoginWithTokenEx_pidPrincipal = do_Uint32(conn, tree, tvb, off, 'Simple_Authentication_LoginWithTokenEx_pidPrincipal')
off = do_RVConnectionData(conn, tree, tvb, off, 'Simple_Authentication_LoginWithTokenEx_pConnectionData')
off, Simple_Authentication_LoginWithTokenEx_strReturnMsg = do_String(conn, tree, tvb, off, 'Simple_Authentication_LoginWithTokenEx_strReturnMsg')
 end
			},
			[4] = {
				["name"] = "Login",
				["request"] = nil,
				["response"] = nil
			},
			[5] = {
				["name"] = "LoginWithSubAccount",
				["request"] = nil,
				["response"] = nil
			},
			[6] = {
				["name"] = "Register",
				["request"] = nil,
				["response"] = nil
			},
			[7] = {
				["name"] = "RegisterEx",
				["request"] = nil,
				["response"] = nil
			},
			[8] = {
				["name"] = "LoginWithTokenCafe",
				["request"] = nil,
				["response"] = nil
			},
			[9] = {
				["name"] = "LoginWithTokenCafeEx",
				["request"] = nil,
				["response"] = nil
			},
			
		}
	},
[0x7A] =
	{
		["name"] = "Ranking 2",
		["methods"] = {
[1] = {
				["name"] = "PutScore",
				["request"] = nil,
				["response"] = nil
			},
			[2] = {
				["name"] = "GetCommonData",
				["request"] = nil,
				["response"] = nil
			},
			[3] = {
				["name"] = "PutCommonData",
				["request"] = nil,
				["response"] = nil
			},
			[4] = {
				["name"] = "DeleteCommonData",
				["request"] = nil,
				["response"] = nil
			},
			[5] = {
				["name"] = "GetRanking",
				["request"] = nil,
				["response"] = nil
			},
			[6] = {
				["name"] = "GetRankingByPrincipalId",
				["request"] = nil,
				["response"] = nil
			},
			[7] = {
				["name"] = "GetCategorySetting",
				["request"] = nil,
				["response"] = nil
			},
			
		}
	},
[0x200] =
	{
		["name"] = "Mesh Protocol",
		["methods"] = {
[0] = {
				["name"] = "Unreliable",
				["request"] = nil,
				["response"] = nil
			},
			[1] = {
				["name"] = "Reliable",
				["request"] = nil,
				["response"] = nil
			},
			
		}
	},
[0x32] =
	{
		["name"] = "Match Making Ext",
		["methods"] = {
[1] = {
				["name"] = "EndParticipation",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Match_Making_Ext_EndParticipation_idGathering = do_Uint32(conn, tree, tvb, off, 'Match_Making_Ext_EndParticipation_idGathering')
off, Match_Making_Ext_EndParticipation_strMessage = do_String(conn, tree, tvb, off, 'Match_Making_Ext_EndParticipation_strMessage')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Match_Making_Ext_EndParticipation_retval = do_Bool(conn, tree, tvb, off, 'Match_Making_Ext_EndParticipation_retval')
 end
			},
			[2] = {
				["name"] = "GetParticipants",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Match_Making_Ext_GetParticipants_idGathering = do_Uint32(conn, tree, tvb, off, 'Match_Making_Ext_GetParticipants_idGathering')
off, Match_Making_Ext_GetParticipants_bOnlyActive = do_Bool(conn, tree, tvb, off, 'Match_Making_Ext_GetParticipants_bOnlyActive')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
-- list !! PID
	local Match_Making_Ext_GetParticipants_lstParticipants_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Match_Making_Ext_GetParticipants_lstParticipants_len, tvb(off,4))
	off = off + 4
	for i=1,Match_Making_Ext_GetParticipants_lstParticipants_len do
	off, Match_Making_Ext_GetParticipants_lstParticipants_item = do_PID(conn, subtree, tvb, off, 'Match_Making_Ext_GetParticipants_lstParticipants_item')

	end
	
 end
			},
			[3] = {
				["name"] = "GetDetailedParticipants",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Match_Making_Ext_GetDetailedParticipants_idGathering = do_Uint32(conn, tree, tvb, off, 'Match_Making_Ext_GetDetailedParticipants_idGathering')
off, Match_Making_Ext_GetDetailedParticipants_bOnlyActiv = do_Bool(conn, tree, tvb, off, 'Match_Making_Ext_GetDetailedParticipants_bOnlyActiv')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
--[[ Stubbed! Missing type (in list) ParticipantDetails]]
 end
			},
			[4] = {
				["name"] = "GetParticipantsURLs",
				["request"] = function (conn, tree, tvb)
	local off = 0
-- list !! Uint32
	local Match_Making_Ext_GetParticipantsURLs_lstGatherings_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Match_Making_Ext_GetParticipantsURLs_lstGatherings_len, tvb(off,4))
	off = off + 4
	for i=1,Match_Making_Ext_GetParticipantsURLs_lstGatherings_len do
	off, Match_Making_Ext_GetParticipantsURLs_lstGatherings_item = do_Uint32(conn, subtree, tvb, off, 'Match_Making_Ext_GetParticipantsURLs_lstGatherings_item')

	end
	
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
-- list !! GatheringURLs
	local Match_Making_Ext_GetParticipantsURLs_lstGatheringURLs_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Match_Making_Ext_GetParticipantsURLs_lstGatheringURLs_len, tvb(off,4))
	off = off + 4
	for i=1,Match_Making_Ext_GetParticipantsURLs_lstGatheringURLs_len do
	off = do_GatheringURLs(conn, subtree, tvb, off, 'Match_Making_Ext_GetParticipantsURLs_lstGatheringURLs_item')

	end
	
 end
			},
			[5] = {
				["name"] = "GetGatheringRelations",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Match_Making_Ext_GetGatheringRelations_id = do_Uint32(conn, tree, tvb, off, 'Match_Making_Ext_GetGatheringRelations_id')
off, Match_Making_Ext_GetGatheringRelations_descr = do_String(conn, tree, tvb, off, 'Match_Making_Ext_GetGatheringRelations_descr')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Match_Making_Ext_GetGatheringRelations_retval = do_String(conn, tree, tvb, off, 'Match_Making_Ext_GetGatheringRelations_retval')
 end
			},
			[6] = {
				["name"] = "DeleteFromDeletions",
				["request"] = function (conn, tree, tvb)
	local off = 0
-- list !! Uint32
	local Match_Making_Ext_DeleteFromDeletions_lstDeletions_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Match_Making_Ext_DeleteFromDeletions_lstDeletions_len, tvb(off,4))
	off = off + 4
	for i=1,Match_Making_Ext_DeleteFromDeletions_lstDeletions_len do
	off, Match_Making_Ext_DeleteFromDeletions_lstDeletions_item = do_Uint32(conn, subtree, tvb, off, 'Match_Making_Ext_DeleteFromDeletions_lstDeletions_item')

	end
	
off, Match_Making_Ext_DeleteFromDeletions_pid = do_PID(conn, tree, tvb, off, 'Match_Making_Ext_DeleteFromDeletions_pid')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			
		}
	},
[0x13] =
	{
		["name"] = "Monitoring",
		["methods"] = {
[1] = {
				["name"] = "PingDaemon",
				["request"] = function (conn, tree, tvb)
	local off = 0
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Monitoring_PingDaemon_retval = do_Bool(conn, tree, tvb, off, 'Monitoring_PingDaemon_retval')
 end
			},
			[2] = {
				["name"] = "GetClusterMembers",
				["request"] = function (conn, tree, tvb)
	local off = 0
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
-- list !! String
	local Monitoring_GetClusterMembers_strValues_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Monitoring_GetClusterMembers_strValues_len, tvb(off,4))
	off = off + 4
	for i=1,Monitoring_GetClusterMembers_strValues_len do
	off, Monitoring_GetClusterMembers_strValues_item = do_String(conn, subtree, tvb, off, 'Monitoring_GetClusterMembers_strValues_item')

	end
	
 end
			},
			
		}
	},
[0x01] =
	{
		["name"] = "Remote Log Device",
		["methods"] = {
[1] = {
				["name"] = "Log",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Remote_Log_Device_Log_Message = do_String(conn, tree, tvb, off, 'Remote_Log_Device_Log_Message')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			
		}
	},
[0x14] =
	{
		["name"] = "Friends",
		["methods"] = {
[1] = {
				["name"] = "AddFriend",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Friends_AddFriend_uiPlayer = do_Uint32(conn, tree, tvb, off, 'Friends_AddFriend_uiPlayer')
off, Friends_AddFriend_uiDetails = do_Uint32(conn, tree, tvb, off, 'Friends_AddFriend_uiDetails')
off, Friends_AddFriend_strMessage = do_String(conn, tree, tvb, off, 'Friends_AddFriend_strMessage')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Friends_AddFriend_retval = do_Bool(conn, tree, tvb, off, 'Friends_AddFriend_retval')
 end
			},
			[2] = {
				["name"] = "AddFriendByName",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Friends_AddFriendByName_strPlayerName = do_String(conn, tree, tvb, off, 'Friends_AddFriendByName_strPlayerName')
off, Friends_AddFriendByName_uiDetails = do_Uint32(conn, tree, tvb, off, 'Friends_AddFriendByName_uiDetails')
off, Friends_AddFriendByName_strMessage = do_String(conn, tree, tvb, off, 'Friends_AddFriendByName_strMessage')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Friends_AddFriendByName_retval = do_Bool(conn, tree, tvb, off, 'Friends_AddFriendByName_retval')
 end
			},
			[3] = {
				["name"] = "AddFriendWithDetails",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Friends_AddFriendWithDetails_uiPlayer = do_Uint32(conn, tree, tvb, off, 'Friends_AddFriendWithDetails_uiPlayer')
off, Friends_AddFriendWithDetails_uiDetails = do_Uint32(conn, tree, tvb, off, 'Friends_AddFriendWithDetails_uiDetails')
off, Friends_AddFriendWithDetails_strMessage = do_String(conn, tree, tvb, off, 'Friends_AddFriendWithDetails_strMessage')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off = do_RelationshipData(conn, tree, tvb, off, 'Friends_AddFriendWithDetails_relationshipData')
 end
			},
			[4] = {
				["name"] = "AddFriendByNameWithDetails",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Friends_AddFriendByNameWithDetails_uiPlayer = do_Uint32(conn, tree, tvb, off, 'Friends_AddFriendByNameWithDetails_uiPlayer')
off, Friends_AddFriendByNameWithDetails_uiDetails = do_Uint32(conn, tree, tvb, off, 'Friends_AddFriendByNameWithDetails_uiDetails')
off, Friends_AddFriendByNameWithDetails_strMessage = do_String(conn, tree, tvb, off, 'Friends_AddFriendByNameWithDetails_strMessage')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off = do_RelationshipData(conn, tree, tvb, off, 'Friends_AddFriendByNameWithDetails_relationshipData')
 end
			},
			[5] = {
				["name"] = "AcceptFriendship",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Friends_AcceptFriendship_uiPlayer = do_Uint32(conn, tree, tvb, off, 'Friends_AcceptFriendship_uiPlayer')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Friends_AcceptFriendship_retval = do_Bool(conn, tree, tvb, off, 'Friends_AcceptFriendship_retval')
 end
			},
			[6] = {
				["name"] = "DeclineFriendship",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Friends_DeclineFriendship_uiPlayer = do_Uint32(conn, tree, tvb, off, 'Friends_DeclineFriendship_uiPlayer')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Friends_DeclineFriendship_retval = do_Bool(conn, tree, tvb, off, 'Friends_DeclineFriendship_retval')
 end
			},
			[7] = {
				["name"] = "BlackList",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Friends_BlackList_uiPlayer = do_Uint32(conn, tree, tvb, off, 'Friends_BlackList_uiPlayer')
off, Friends_BlackList_uiDetails = do_Uint32(conn, tree, tvb, off, 'Friends_BlackList_uiDetails')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Friends_BlackList_retval = do_Bool(conn, tree, tvb, off, 'Friends_BlackList_retval')
 end
			},
			[8] = {
				["name"] = "BlackListByName",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Friends_BlackListByName_strPlayerName = do_String(conn, tree, tvb, off, 'Friends_BlackListByName_strPlayerName')
off, Friends_BlackListByName_uiDetails = do_Uint32(conn, tree, tvb, off, 'Friends_BlackListByName_uiDetails')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Friends_BlackListByName_retval = do_Bool(conn, tree, tvb, off, 'Friends_BlackListByName_retval')
 end
			},
			[9] = {
				["name"] = "ClearRelationship",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Friends_ClearRelationship_uiPlayer = do_Uint32(conn, tree, tvb, off, 'Friends_ClearRelationship_uiPlayer')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Friends_ClearRelationship_retval = do_Bool(conn, tree, tvb, off, 'Friends_ClearRelationship_retval')
 end
			},
			[10] = {
				["name"] = "UpdateDetails",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Friends_UpdateDetails_uiPlayer = do_Uint32(conn, tree, tvb, off, 'Friends_UpdateDetails_uiPlayer')
off, Friends_UpdateDetails_uiDetails = do_Uint32(conn, tree, tvb, off, 'Friends_UpdateDetails_uiDetails')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Friends_UpdateDetails_retval = do_Bool(conn, tree, tvb, off, 'Friends_UpdateDetails_retval')
 end
			},
			[11] = {
				["name"] = "GetList",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Friends_GetList_byRelationship = do_Uint8(conn, tree, tvb, off, 'Friends_GetList_byRelationship')
off, Friends_GetList_bReversed = do_Bool(conn, tree, tvb, off, 'Friends_GetList_bReversed')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
-- list !! Uint32
	local Friends_GetList_lstFriendsList_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Friends_GetList_lstFriendsList_len, tvb(off,4))
	off = off + 4
	for i=1,Friends_GetList_lstFriendsList_len do
	off, Friends_GetList_lstFriendsList_item = do_Uint32(conn, subtree, tvb, off, 'Friends_GetList_lstFriendsList_item')

	end
	
 end
			},
			[12] = {
				["name"] = "GetDetailedList",
				["request"] = function (conn, tree, tvb)
	local off = 0
off, Friends_GetDetailedList_byRelationship = do_Uint8(conn, tree, tvb, off, 'Friends_GetDetailedList_byRelationship')
off, Friends_GetDetailedList_bReversed = do_Bool(conn, tree, tvb, off, 'Friends_GetDetailedList_bReversed')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
-- list !! FriendData
	local Friends_GetDetailedList_lstFriendsList_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Friends_GetDetailedList_lstFriendsList_len, tvb(off,4))
	off = off + 4
	for i=1,Friends_GetDetailedList_lstFriendsList_len do
	off = do_FriendData(conn, subtree, tvb, off, 'Friends_GetDetailedList_lstFriendsList_item')

	end
	
 end
			},
			[13] = {
				["name"] = "GetRelationships",
				["request"] = function (conn, tree, tvb)
	local off = 0
off = do_ResultRange(conn, tree, tvb, off, 'Friends_GetRelationships_resultRange')
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
off, Friends_GetRelationships_uiTotalCount = do_Uint32(conn, tree, tvb, off, 'Friends_GetRelationships_uiTotalCount')
-- list !! RelationshipData
	local Friends_GetRelationships_lstRelationshipsList_len = tvb(off, 4):le_uint()
	subtree = tree:add_le(F.Friends_GetRelationships_lstRelationshipsList_len, tvb(off,4))
	off = off + 4
	for i=1,Friends_GetRelationships_lstRelationshipsList_len do
	off = do_RelationshipData(conn, subtree, tvb, off, 'Friends_GetRelationships_lstRelationshipsList_item')

	end
	
 end
			},
			
		}
	},
[0x0E] =
	{
		["name"] = "Notifications",
		["methods"] = {
[1] = {
				["name"] = "ProcessNotificationEvent",
				["request"] = function (conn, tree, tvb)
	local off = 0
--[[ Stubbed! Missing type NotificationEvent]]
 end,
				["response"] = function (conn, tree, tvb)
	local off = 0
 end
			},
			
		}
	},
[0x7200] =
	{
		["name"] = "Session Protocol",
		["methods"] = {
[3] = {
				["name"] = "Next session id",
				["request"] = nil,
				["response"] = nil
			},
			[4] = {
				["name"] = "Prepared for migrate session",
				["request"] = nil,
				["response"] = nil
			},
			[6] = {
				["name"] = "Invitation as companion",
				["request"] = nil,
				["response"] = nil
			},
			[7] = {
				["name"] = "Answer to invitation as companion",
				["request"] = nil,
				["response"] = nil
			},
			[8] = {
				["name"] = "Destroy invitation",
				["request"] = nil,
				["response"] = nil
			},
			[9] = {
				["name"] = "Answer to destroy invitation",
				["request"] = nil,
				["response"] = nil
			},
			[10] = {
				["name"] = "Leave mesh invitation",
				["request"] = nil,
				["response"] = nil
			},
			[11] = {
				["name"] = "Answer to leave mesh invitation",
				["request"] = nil,
				["response"] = nil
			},
			[12] = {
				["name"] = "Start config participation",
				["request"] = nil,
				["response"] = nil
			},
			[13] = {
				["name"] = "Answer to start config participation",
				["request"] = nil,
				["response"] = nil
			},
			[14] = {
				["name"] = "Finish config participation",
				["request"] = nil,
				["response"] = nil
			},
			[16] = {
				["name"] = "Answer to finish config participation",
				["request"] = nil,
				["response"] = nil
			},
			[17] = {
				["name"] = "Request config participation",
				["request"] = nil,
				["response"] = nil
			},
			[18] = {
				["name"] = "Answer to config participation",
				["request"] = nil,
				["response"] = nil
			},
			[19] = {
				["name"] = "Completion for migrate session",
				["request"] = nil,
				["response"] = nil
			},
			[20] = {
				["name"] = "Completion invitation",
				["request"] = nil,
				["response"] = nil
			},
			[21] = {
				["name"] = "Answer to completion invitation",
				["request"] = nil,
				["response"] = nil
			},
			[22] = {
				["name"] = "Completion failure response",
				["request"] = nil,
				["response"] = nil
			},
			
		}
	},
}
return info